{"version":3,"sources":["../webpack/bootstrap",".././src/extension.ts","../external \"vscode\"",".././src/container.ts",".././node_modules/awilix/lib/awilix.module.js",".././node_modules/glob/glob.js","../external \"fs\"",".././node_modules/fs.realpath/index.js",".././node_modules/fs.realpath/old.js","../external \"path\"",".././node_modules/minimatch/minimatch.js",".././node_modules/brace-expansion/index.js",".././node_modules/concat-map/index.js",".././node_modules/balanced-match/index.js",".././node_modules/inherits/inherits.js","../external \"util\"",".././node_modules/inherits/inherits_browser.js","../external \"events\"","../external \"assert\"",".././node_modules/path-is-absolute/index.js",".././node_modules/glob/sync.js",".././node_modules/glob/common.js",".././node_modules/inflight/inflight.js",".././node_modules/wrappy/wrappy.js",".././node_modules/once/once.js",".././node_modules/camel-case/camel-case.js",".././node_modules/upper-case/upper-case.js",".././node_modules/no-case/no-case.js",".././node_modules/lower-case/lower-case.js",".././node_modules/no-case/vendor/non-word-regexp.js",".././node_modules/no-case/vendor/camel-case-regexp.js",".././node_modules/no-case/vendor/camel-case-upper-regexp.js",".././node_modules/awilix/lib sync",".././src/vs-code-api.ts",".././src/default-settings.ts",".././src/configuration.ts",".././src/utility.ts",".././src/supported-extensions.ts",".././src/barrel-builder.ts",".././src/create-barrel-command.ts",".././src/auto-barreller.ts",".././src/export-statement-builder.ts",".././src/update-barrel-command.ts"],"names":[],"mappings":"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Q,CAAC,EAAE,sBAAsB,EAAE,gBAAO,CAAC,iDAAsB,CAAC,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC;;;;;;;;ACtB5F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA4B;AACa;AACZ;AACE;;AAE/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA,iBAAiB,gBAAgB,aAAa,UAAU,SAAS,aAAa,YAAY,UAAU;AACpG;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,cAAc;AAC7B;AACA;AACA,gBAAgB,SAAS;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,KAAK;AAC7C;AACA,uBAAuB,QAAQ;AAC/B;AACA;AACA,mCAAmC,qBAAqB;AACxD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C,iEAAiE;AACjE;AACA,kFAAkF;AAClF;AACA,iDAAiD;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,mBAAmB;AAC/B;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,cAAc,cAAc;AAC5B;AACA,YAAY,cAAc;AAC1B;AACA;AACA,YAAY,EAAE;AACd;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,IAAI;AAChB;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,SAAS;AACrB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,IAAI;AAChB;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA,YAAY,EAAE,iBAAiB;AAC/B;AACA;AACA;AACA;AACA;AACA,0BAA0B,2BAA2B,yCAAI,EAAE;AAC3D;AACA;AACA;AACA;AACA;AACA,2CAA2C,gBAAgB;AAC3D;AACA,4BAA4B,qDAAQ;AACpC,cAAc,oDAAO;AACrB;AACA,KAAK;AACL;AACA;AACA;AACA,sBAAsB,WAAW;AACjC;AACA;AACA;AACA,YAAY,qBAAqB;AACjC;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA,YAAY,EAAE,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA,WAAW,oBAAoB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yEAAyE,OAAO,QAAQ,eAAe,QAAQ,QAAQ;AACvH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA,YAAY,EAAE;AACd;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,UAAU;AAC1C;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA,YAAY,MAAM;AAClB;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wEAAwE,SAAS,UAAU;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,mDAAmD,SAAS,kBAAkB;AAC9E;AACA;AACA,mDAAmD,SAAS,uBAAuB;AACnF;AACA;AACA,mDAAmD,SAAS,WAAW;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,SAAS,UAAU;AAC3E;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA,YAAY,IAAI;AAChB;AACA;AACA,YAAY;AACZ;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,gBAAgB;AAC5B,YAAY,OAAO;AACnB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,SAAS;AACrB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oEAAoE,gCAAgC;AACpG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,mBAAO,CAAC,EAAY;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,gBAAgB;AAC5B;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA,YAAY,OAAO;AACnB,mCAAmC,aAAa;AAChD;AACA,YAAY,qCAAqC;AACjD;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0B;AACA;AACA,wCAAwC,+BAA+B,mCAAmC;AAC1G;AACA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B,WAAW,mBAAmB;AAC9B,WAAW,iBAAiB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA,6BAA6B,qCAAqC;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,4CAAO;AAChB,KAAK;AACL;AACA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,OAAO;AAC3B,oBAAoB,OAAO;AAC3B;AACA;AACA,2DAA2D,KAAK;AAChE,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,4CAAO;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,kCAAkC,iBAAiB,4CAA4C;AACnI;AACA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,gBAAgB;AAC/B;AACA;AACA,eAAe,eAAe;AAC9B;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,4CAAO;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,4BAA4B;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,4BAA4B;AAC3E;AACA;AACA,gGAAgG,kBAAkB;AAClH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,gBAAgB;AAC/B;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,wBAAwB;AACvC,eAAe,gBAAgB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,wBAAQ,GAAG,CAAC;AACvC,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEuO;;;;;;;AC17CvO;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,SAAS,mBAAO,CAAC,CAAI;AACrB,SAAS,mBAAO,CAAC,CAAa;AAC9B,gBAAgB,mBAAO,CAAC,CAAW;AACnC;AACA,eAAe,mBAAO,CAAC,EAAU;AACjC,SAAS,mBAAO,CAAC,EAAQ;AACzB,WAAW,mBAAO,CAAC,CAAM;AACzB,aAAa,mBAAO,CAAC,EAAQ;AAC7B,iBAAiB,mBAAO,CAAC,EAAkB;AAC3C,eAAe,mBAAO,CAAC,EAAW;AAClC,aAAa,mBAAO,CAAC,EAAa;AAClC;AACA;AACA;AACA;AACA,eAAe,mBAAO,CAAC,EAAU;AACjC,WAAW,mBAAO,CAAC,EAAM;AACzB;AACA;;AAEA,WAAW,mBAAO,CAAC,EAAM;;AAEzB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,yBAAyB;AACzB;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,iBAAiB,mBAAmB;AACpC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,gCAAgC,qBAAqB;AACrD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,iBAAiB,yBAAyB;AAC1C;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,eAAe;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,eAAe;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,oBAAoB;AACrC;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,mBAAmB,SAAS;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,oBAAoB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,iBAAiB,SAAS;AAC1B;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACrxBA,+B;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAS,mBAAO,CAAC,CAAI;AACrB;AACA;;AAEA;AACA;AACA,UAAU,mBAAO,CAAC,CAAU;;AAE5B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;ACjEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,mBAAO,CAAC,CAAM;AAC/B;AACA,SAAS,mBAAO,CAAC,CAAI;;AAErB;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;;AAEA;AACA;AACA,0CAA0C,EAAE;AAC5C,CAAC;AACD;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,oBAAoB;AACpB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,oBAAoB;AACpB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC9SA,iC;;;;;;ACAA;AACA;;AAEA,YAAY;AACZ;AACA,SAAS,mBAAO,CAAC,CAAM;AACvB,CAAC;;AAED;AACA,aAAa,mBAAO,CAAC,EAAiB;;AAEtC;AACA,QAAQ,uCAAuC;AAC/C,QAAQ,2BAA2B;AACnC,QAAQ,2BAA2B;AACnC,QAAQ,2BAA2B;AACnC,QAAQ;AACR;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,yCAAyC,IAAI;;AAE7C;AACA;AACA;;AAEA;AACA,gCAAgC;;AAEhC,aAAa;AACb;AACA;AACA;AACA;AACA,GAAG,IAAI;AACP;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,KAAK;AACL,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK,IAAI;AACT,KAAK,GAAG;AACR,KAAK,KAAK;AACV,KAAK,IAAI,IAAI,EAAE;AACf,KAAK,IAAI,EAAE,IAAI;AACf;AACA;AACA,KAAK,IAAI,OAAO,IAAI;AACpB,KAAK,EAAE,OAAO,EAAE;AAChB;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,sBAAsB,IAAI;AAC1B;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,IAAI;AACxC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;;AAEA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,IAAI;AACvC;AACA;AACA;AACA,gCAAgC,EAAE,EAAE,KAAK;AACzC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,wCAAwC,QAAQ;AAChD;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe,sBAAsB;AACrC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,6CAA6C;AAC7C;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,wBAAwB,QAAQ;AAChC;AACA;AACA;;AAEA,aAAa,gBAAgB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK,6CAA6C;;AAElD;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP,OAAO;AACP;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,SAAS;AACvB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,2BAA2B;AAC3B;;;;;;;AC15BA,gBAAgB,mBAAO,CAAC,EAAY;AACpC,eAAe,mBAAO,CAAC,EAAgB;;AAEvC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,uBAAuB;AACvB,uBAAuB;AACvB;AACA;AACA;;AAEA;AACA;AACA,mCAAmC;AACnC,oCAAoC;AACpC;AACA;AACA;;;AAGA;AACA;AACA,wCAAwC,GAAG,IAAI;AAC/C;AACA;AACA;;AAEA;AACA,qBAAqB,KAAK;;AAE1B;AACA;;AAEA;AACA;AACA;AACA;;AAEA,qBAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,8BAA8B;AAC9B,uCAAuC,GAAG;AAC1C,YAAY,GAAG,yBAAyB;AACxC;AACA;AACA,8BAA8B;AAC9B,cAAc,GAAG;AACjB;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,WAAW,YAAY;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,qBAAqB,KAAK;AAC1B;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAQ,EAAE;AACV,2BAA2B;AAC3B,sBAAsB;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,YAAY,KAAK,QAAQ,EAAE,IAAI,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,mBAAmB,YAAY;AAC/B;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,mCAAmC,2BAA2B;AAC9D;;AAEA,iBAAiB,cAAc;AAC/B,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;ACvMA;AACA;AACA,mBAAmB,eAAe;AAClC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;ACZa;AACb;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;AC1DA;AACA,aAAa,mBAAO,CAAC,EAAM;AAC3B;AACA;AACA,CAAC;AACD,mBAAmB,mBAAO,CAAC,EAAuB;AAClD;;;;;;;ACNA,iC;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACtBA,mC;;;;;;ACAA,mC;;;;;;;ACAa;;AAEb;AACA;AACA;;AAEA;AACA;AACA,yCAAyC,EAAE;AAC3C;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;ACnBA;AACA;;AAEA,SAAS,mBAAO,CAAC,CAAI;AACrB,SAAS,mBAAO,CAAC,CAAa;AAC9B,gBAAgB,mBAAO,CAAC,CAAW;AACnC;AACA,WAAW,mBAAO,CAAC,CAAW;AAC9B,WAAW,mBAAO,CAAC,EAAM;AACzB,WAAW,mBAAO,CAAC,CAAM;AACzB,aAAa,mBAAO,CAAC,EAAQ;AAC7B,iBAAiB,mBAAO,CAAC,EAAkB;AAC3C,aAAa,mBAAO,CAAC,EAAa;AAClC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,oBAAoB;AACrC;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,mBAAmB,SAAS;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,oBAAoB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,iBAAiB,SAAS;AAC1B;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;ACreA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,WAAW,mBAAO,CAAC,CAAM;AACzB,gBAAgB,mBAAO,CAAC,CAAW;AACnC,iBAAiB,mBAAO,CAAC,EAAkB;AAC3C;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,wCAAwC,YAAY;AACpD;;AAEA;AACA,qCAAqC,YAAY;AACjD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,WAAW,gCAAgC;AAC3C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,0CAA0C,OAAO;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,mBAAmB,gBAAgB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;;;;;;;AC/OA,aAAa,mBAAO,CAAC,EAAQ;AAC7B;AACA,WAAW,mBAAO,CAAC,EAAM;;AAEzB;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,SAAS;AAC9B;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA,iBAAiB,YAAY;AAC7B;AACA;;;;;;;ACrDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;;;;;;AChCA,aAAa,mBAAO,CAAC,EAAQ;AAC7B;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;;AAEH;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACzCA,gBAAgB,mBAAO,CAAC,EAAY;AACpC,aAAa,mBAAO,CAAC,EAAS;;AAE9B;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;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","file":"extension.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import * as vscode from 'vscode';\r\n\r\nimport { container } from './container';\r\nimport { CreateBarrelCommand } from './create-barrel-command';\r\nimport { UpdateBarrelCommand } from './update-barrel-command';\r\nimport { AutoBarreller } from './auto-barreller';\r\n\r\nlet autoBarreller: AutoBarreller;\r\n\r\nexport function activate(context: vscode.ExtensionContext) {\r\n  autoBarreller = container.resolve<AutoBarreller>('autoBarreller');\r\n  const createBarrelCommandHandler: CreateBarrelCommand = container.resolve<CreateBarrelCommand>('createBarrelCommand');\r\n  const updateBarrelCommandHandler: UpdateBarrelCommand = container.resolve<UpdateBarrelCommand>('updateBarrelCommand');\r\n\r\n  const createBarrelCommand = vscode.commands.registerCommand('autoBarrel.createBarrel', (uri: vscode.Uri) =>\r\n    createBarrelCommandHandler.execute(uri.path)\r\n  );\r\n\r\n  const updateBarrelCommand = vscode.commands.registerCommand('autoBarrel.updateBarrel', (uri: vscode.Uri) =>\r\n    updateBarrelCommandHandler.execute(uri.path)\r\n  );\r\n\r\n  const startCommand = vscode.commands.registerCommand('autoBarrel.start', autoBarreller.start);\r\n  const stopCommand = vscode.commands.registerCommand('autoBarrel.stop', autoBarreller.stop);\r\n\r\n  context.subscriptions.push(createBarrelCommand);\r\n  context.subscriptions.push(updateBarrelCommand);\r\n  context.subscriptions.push(startCommand);\r\n  context.subscriptions.push(stopCommand);\r\n}\r\n\r\nexport function deactivate() {\r\n  if (typeof autoBarreller !== 'undefined') {\r\n    autoBarreller.dispose();\r\n  }\r\n}\r\n","module.exports = require(\"vscode\");","import { createContainer, asClass, InjectionMode } from 'awilix';\r\n\r\nimport { VsCodeApi } from './vs-code-api';\r\nimport { Configuration } from './configuration';\r\nimport { Utility } from './utility';\r\nimport { BarrelBuilder } from './barrel-builder';\r\nimport { CreateBarrelCommand } from './create-barrel-command';\r\nimport { AutoBarreller } from './auto-barreller';\r\nimport { ExportStatementBuilder } from './export-statement-builder';\r\nimport { UpdateBarrelCommand } from './update-barrel-command';\r\n\r\nexport const container = createContainer({\r\n  injectionMode: InjectionMode.CLASSIC\r\n});\r\n\r\ncontainer.register({ vsCodeApi: asClass(VsCodeApi).singleton() });\r\ncontainer.register({ configuration: asClass(Configuration).singleton() });\r\ncontainer.register({ utility: asClass(Utility).singleton() });\r\ncontainer.register({ barrelBuilder: asClass(BarrelBuilder).singleton() });\r\ncontainer.register({ createBarrelCommand: asClass(CreateBarrelCommand) });\r\ncontainer.register({ updateBarrelCommand: asClass(UpdateBarrelCommand) });\r\ncontainer.register({ autoBarreller: asClass(AutoBarreller) });\r\ncontainer.register({ exportStatementBuilder: asClass(ExportStatementBuilder).singleton() });\r\n","import { sync } from 'glob';\nimport { basename, resolve } from 'path';\nimport * as util from 'util';\nimport { inspect } from 'util';\n\n/**\r\n * Newline.\r\n */\r\nconst EOL = '\\n';\r\n/**\r\n * An extendable error class.\r\n * @author https://github.com/bjyoungblood/es6-error/\r\n */\r\nclass ExtendableError extends Error {\r\n    /**\r\n     * Constructor for the error.\r\n     *\r\n     * @param  {String} message\r\n     * The error message.\r\n     */\r\n    constructor(message) {\r\n        super(message);\r\n        // extending Error is weird and does not propagate `message`\r\n        Object.defineProperty(this, 'message', {\r\n            enumerable: false,\r\n            value: message\r\n        });\r\n        Object.defineProperty(this, 'name', {\r\n            enumerable: false,\r\n            value: this.constructor.name\r\n        });\r\n        Error.captureStackTrace(this, this.constructor);\r\n    }\r\n}\r\n/**\r\n * Base error for all Awilix-specific errors.\r\n */\r\nclass AwilixError extends ExtendableError {\r\n}\r\n/**\r\n * Error thrown to indicate a type mismatch.\r\n * TODO(v3): remove `AwilixNotAFunctionError` and use this.\r\n */\r\nclass AwilixTypeError extends AwilixError {\r\n    /**\r\n     * Constructor, takes the function name, expected and given\r\n     * type to produce an error.\r\n     *\r\n     * @param {string} funcDescription\r\n     * Name of the function being guarded.\r\n     *\r\n     * @param {string} paramName\r\n     * The parameter there was an issue with.\r\n     *\r\n     * @param {string} expectedType\r\n     * Name of the expected type.\r\n     *\r\n     * @param {string} givenType\r\n     * Name of the given type.\r\n     */\r\n    constructor(funcDescription, paramName, expectedType, givenType) {\r\n        super(`${funcDescription}: expected ${paramName} to be ${expectedType}, but got ${givenType}.`);\r\n    }\r\n    /**\r\n     * Asserts the given condition, throws an error otherwise.\r\n     *\r\n     * @param {*} condition\r\n     * The condition to check\r\n     *\r\n     * @param {string} funcDescription\r\n     * Name of the function being guarded.\r\n     *\r\n     * @param {string} paramName\r\n     * The parameter there was an issue with.\r\n     *\r\n     * @param {string} expectedType\r\n     * Name of the expected type.\r\n     *\r\n     * @param {string} givenType\r\n     * Name of the given type.\r\n     */\r\n    static assert(condition, funcDescription, paramName, expectedType, givenType) {\r\n        if (!condition) {\r\n            throw new AwilixTypeError(funcDescription, paramName, expectedType, givenType);\r\n        }\r\n        return condition;\r\n    }\r\n}\r\n/**\r\n * A nice error class so we can do an instanceOf check.\r\n */\r\nclass AwilixResolutionError extends AwilixError {\r\n    /**\r\n     * Constructor, takes the registered modules and unresolved tokens\r\n     * to create a message.\r\n     *\r\n     * @param {string|symbol} name\r\n     * The name of the module that could not be resolved.\r\n     *\r\n     * @param  {string[]} resolutionStack\r\n     * The current resolution stack\r\n     */\r\n    constructor(name, resolutionStack, message) {\r\n        if (typeof name === 'symbol') {\r\n            name = name.toString();\r\n        }\r\n        resolutionStack = resolutionStack.slice();\r\n        resolutionStack.push(name);\r\n        const resolutionPathString = resolutionStack.join(' -> ');\r\n        let msg = `Could not resolve '${name}'.`;\r\n        if (message) {\r\n            msg += ` ${message}`;\r\n        }\r\n        msg += EOL + EOL;\r\n        msg += `Resolution path: ${resolutionPathString}`;\r\n        super(msg);\r\n    }\r\n}\n\n/**\r\n * Creates a tokenizer for the specified source.\r\n *\r\n * @param source\r\n */\r\nfunction createTokenizer(source) {\r\n    const end = source.length;\r\n    let pos = 0;\r\n    let type = 'EOF';\r\n    let value = '';\r\n    let flags = 0 /* None */;\r\n    // These are used to greedily skip as much as possible.\r\n    // Whenever we reach a paren, we increment these.\r\n    let parenLeft = 0;\r\n    let parenRight = 0;\r\n    return {\r\n        next,\r\n        done\r\n    };\r\n    /**\r\n     * Advances the tokenizer and returns the next token.\r\n     */\r\n    function next(nextFlags = 0 /* None */) {\r\n        flags = nextFlags;\r\n        advance();\r\n        return createToken();\r\n    }\r\n    /**\r\n     * Advances the tokenizer state.\r\n     */\r\n    function advance() {\r\n        value = '';\r\n        type = 'EOF';\r\n        while (true) {\r\n            if (pos >= end) {\r\n                return (type = 'EOF');\r\n            }\r\n            let ch = source.charAt(pos);\r\n            // Whitespace is irrelevant\r\n            if (isWhiteSpace(ch)) {\r\n                pos++;\r\n                continue;\r\n            }\r\n            switch (ch) {\r\n                case '(':\r\n                    pos++;\r\n                    parenLeft++;\r\n                    return (type = ch);\r\n                case ')':\r\n                    pos++;\r\n                    parenRight++;\r\n                    return (type = ch);\r\n                case '*':\r\n                    pos++;\r\n                    return (type = ch);\r\n                case ',':\r\n                    pos++;\r\n                    return (type = ch);\r\n                case '=':\r\n                    pos++;\r\n                    if ((flags & 1 /* Dumb */) === 0) {\r\n                        // Not in dumb-mode, so attempt to skip.\r\n                        skipExpression();\r\n                    }\r\n                    // We need to know that there's a default value so we can\r\n                    // skip it if it does not exist when resolving.\r\n                    return (type = ch);\r\n                case '/':\r\n                    pos++;\r\n                    const nextCh = source.charAt(pos);\r\n                    if (nextCh === '/') {\r\n                        skipUntil(c => c === '\\n');\r\n                        pos++;\r\n                    }\r\n                    if (nextCh === '*') {\r\n                        skipUntil(c => {\r\n                            const closing = source.charAt(pos + 1);\r\n                            return c === '*' && closing === '/';\r\n                        });\r\n                        pos++;\r\n                    }\r\n                    continue;\r\n                default:\r\n                    // Scans an identifier.\r\n                    if (isIdentifierStart(ch)) {\r\n                        scanIdentifier();\r\n                        return type;\r\n                    }\r\n                    // Elegantly skip over tokens we don't care about.\r\n                    pos++;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Scans an identifier, given it's already been proven\r\n     * we are ready to do so.\r\n     */\r\n    function scanIdentifier() {\r\n        const identStart = source.charAt(pos);\r\n        const start = ++pos;\r\n        while (isIdentifierPart(source.charAt(pos))) {\r\n            pos++;\r\n        }\r\n        value = '' + identStart + source.substring(start, pos);\r\n        type = value === 'function' || value === 'class' ? value : 'ident';\r\n        if (type !== 'ident') {\r\n            value = '';\r\n        }\r\n        return value;\r\n    }\r\n    /**\r\n     * Skips everything until the next comma or the end of the parameter list.\r\n     * Checks the parenthesis balance so we correctly skip function calls.\r\n     */\r\n    function skipExpression() {\r\n        skipUntil(ch => {\r\n            const isAtRoot = parenLeft === parenRight + 1;\r\n            if (ch === ',' && isAtRoot) {\r\n                return true;\r\n            }\r\n            if (ch === '(') {\r\n                parenLeft++;\r\n                return false;\r\n            }\r\n            if (ch === ')') {\r\n                parenRight++;\r\n                if (isAtRoot) {\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        });\r\n    }\r\n    /**\r\n     * Skips strings and whilespace until the predicate is true.\r\n     */\r\n    function skipUntil(callback) {\r\n        while (pos < source.length) {\r\n            let ch = source.charAt(pos);\r\n            if (callback(ch)) {\r\n                return;\r\n            }\r\n            if (isWhiteSpace(ch)) {\r\n                pos++;\r\n                continue;\r\n            }\r\n            if (isStringQuote(ch)) {\r\n                skipString();\r\n                continue;\r\n            }\r\n            pos++;\r\n        }\r\n    }\r\n    /**\r\n     * Given the current position is at a string quote, skips the entire string.\r\n     */\r\n    function skipString() {\r\n        const quote = source.charAt(pos);\r\n        pos++;\r\n        while (pos < source.length) {\r\n            const ch = source.charAt(pos);\r\n            const prev = source.charAt(pos - 1);\r\n            // Checks if the quote was escaped.\r\n            if (ch === quote && prev !== '\\\\') {\r\n                pos++;\r\n                return;\r\n            }\r\n            // Template strings are a bit tougher, we want to skip the interpolated values.\r\n            if (quote === '`') {\r\n                const next = source.charAt(pos + 1);\r\n                if (next === '$') {\r\n                    const afterDollar = source.charAt(pos + 2);\r\n                    if (afterDollar === '{') {\r\n                        // This is the start of an interpolation; skip the ${\r\n                        pos = pos + 2;\r\n                        // Skip strings and whitespace until we reach the ending }.\r\n                        // This includes skipping nested interpolated strings. :D\r\n                        skipUntil(ch => ch === '}');\r\n                    }\r\n                }\r\n            }\r\n            pos++;\r\n        }\r\n    }\r\n    /**\r\n     * Creates a token from the current state.\r\n     */\r\n    function createToken() {\r\n        if (value) {\r\n            return { value, type };\r\n        }\r\n        return { type };\r\n    }\r\n    /**\r\n     * Determines if we are done parsing.\r\n     */\r\n    function done() {\r\n        return type === 'EOF';\r\n    }\r\n}\r\n/**\r\n * Determines if the given character is a whitespace character.\r\n *\r\n * @param  {string}  ch\r\n * @return {Boolean}\r\n */\r\nfunction isWhiteSpace(ch) {\r\n    switch (ch) {\r\n        case '\\r':\r\n        case '\\n':\r\n        case ' ':\r\n            return true;\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * Determines if the specified character is a string quote.\r\n * @param  {string}  ch\r\n * @return {Boolean}\r\n */\r\nfunction isStringQuote(ch) {\r\n    switch (ch) {\r\n        case \"'\":\r\n        case '\"':\r\n        case '`':\r\n            return true;\r\n    }\r\n    return false;\r\n}\r\n// NOTE: I've added the `.` character so that member expression paths\r\n// are seen as identifiers. This is so we don't get a constructor token for\r\n// stuff like `MyClass.prototype.constructor()`\r\nconst IDENT_START_EXPR = /^[_$a-zA-Z\\xA0-\\uFFFF]$/;\r\nconst IDENT_PART_EXPR = /^[._$a-zA-Z0-9\\xA0-\\uFFFF]$/;\r\n/**\r\n * Determines if the character is a valid JS identifier start character.\r\n */\r\nfunction isIdentifierStart(ch) {\r\n    return IDENT_START_EXPR.test(ch);\r\n}\r\n/**\r\n * Determines if the character is a valid JS identifier start character.\r\n */\r\nfunction isIdentifierPart(ch) {\r\n    return IDENT_PART_EXPR.test(ch);\r\n}\n\n/**\r\n * Quick flatten utility to flatten a 2-dimensional array.\r\n *\r\n * @param  {Array<Array<Item>>} array\r\n * The array to flatten.\r\n *\r\n * @return {Array<Item>}\r\n * The flattened array.\r\n */\r\nfunction flatten(array) {\r\n    const result = [];\r\n    array.forEach(arr => {\r\n        arr.forEach(item => {\r\n            result.push(item);\r\n        });\r\n    });\r\n    return result;\r\n}\r\n/**\r\n * Creates a { name: value } object if the input isn't already in that format.\r\n *\r\n * @param  {string|object} name\r\n * Either a string or an object.\r\n *\r\n * @param  {*} value\r\n * The value, only used if name is not an object.\r\n *\r\n * @return {object}\r\n */\r\nfunction nameValueToObject(name, value) {\r\n    let obj = name;\r\n    if (typeof obj === 'string' || typeof obj === 'symbol') {\r\n        return { [name]: value };\r\n    }\r\n    return obj;\r\n}\r\n/**\r\n * Returns the last item in the array.\r\n *\r\n * @param  {*[]} arr\r\n * The array.\r\n *\r\n * @return {*}\r\n * The last element.\r\n */\r\nfunction last(arr) {\r\n    return arr[arr.length - 1];\r\n}\r\n/**\r\n * Determines if the given function is a class.\r\n *\r\n * @param  {Function} fn\r\n * @return {Boolean}\r\n */\r\nfunction isClass(fn) {\r\n    /*tslint:disable-next-line*/\r\n    if (typeof fn !== 'function') {\r\n        return false;\r\n    }\r\n    // Should only need 2 tokens.\r\n    const tokenizer = createTokenizer(fn.toString());\r\n    const first = tokenizer.next();\r\n    if (first.type === 'class') {\r\n        return true;\r\n    }\r\n    const second = tokenizer.next();\r\n    if (first.type === 'function' && second.value) {\r\n        if (second.value[0] === second.value[0].toUpperCase()) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * Determines if the given value is a function.\r\n *\r\n * @param  {Any} val\r\n * Any value to check if it's a function.\r\n *\r\n * @return {Boolean}\r\n * true if the value is a function, false otherwise.\r\n */\r\nfunction isFunction(val) {\r\n    return typeof val === 'function';\r\n}\r\n/**\r\n * Returns the unique items in the array.\r\n *\r\n * @param {Array<T>}\r\n * The array to remove dupes from.\r\n *\r\n * @return {Array<T>}\r\n * The deduped array.\r\n */\r\nfunction uniq(arr) {\r\n    const result = [];\r\n    for (const idx in arr) {\r\n        const item = arr[idx];\r\n        if (result.indexOf(item) === -1) {\r\n            result.push(item);\r\n        }\r\n    }\r\n    return result;\r\n}\n\n// Regex to extract the module name.\r\nconst nameExpr = /(.*)\\..*/i;\r\n/**\r\n * Internal method for globbing a single pattern.\r\n *\r\n * @param  {String} globPattern\r\n * The glob pattern.\r\n *\r\n * @param  {String} opts.cwd\r\n * Current working directory, used for resolving filepaths.\r\n * Defaults to `process.cwd()`.\r\n *\r\n * @return {[{name, path, opts}]}\r\n * The module names and paths.\r\n *\r\n * @api private\r\n */\r\nfunction _listModules(globPattern, opts) {\r\n    opts = Object.assign({ cwd: process.cwd(), glob: sync }, opts);\r\n    let patternOpts = null;\r\n    if (globPattern instanceof Array) {\r\n        patternOpts = globPattern[1];\r\n        globPattern = globPattern[0];\r\n    }\r\n    const result = opts.glob(globPattern, { cwd: opts.cwd });\r\n    const mapped = result.map(p => ({\r\n        name: nameExpr.exec(basename(p))[1],\r\n        path: resolve(opts.cwd, p),\r\n        opts: patternOpts\r\n    }));\r\n    return mapped;\r\n}\r\n/**\r\n * Returns a list of {name, path} pairs,\r\n * where the name is the module name, and path is the actual\r\n * full path to the module.\r\n *\r\n * @param  {String|Array<String>} globPatterns\r\n * The glob pattern as a string or an array of strings.\r\n *\r\n * @param  {String} opts.cwd\r\n * Current working directory, used for resolving filepaths.\r\n * Defaults to `process.cwd()`.\r\n *\r\n * @return {[{name, path}]}\r\n * An array of objects with the module names and paths.\r\n */\r\nfunction listModules(globPatterns, opts) {\r\n    if (Array.isArray(globPatterns)) {\r\n        return flatten(globPatterns.map(p => _listModules(p, opts)));\r\n    }\r\n    return _listModules(globPatterns, opts);\r\n}\n\n/**\r\n * Lifetime types.\r\n */\r\nconst Lifetime = {\r\n    /**\r\n     * The registration will be resolved once and only once.\r\n     * @type {String}\r\n     */\r\n    SINGLETON: 'SINGLETON',\r\n    /**\r\n     * The registration will be resolved every time (never cached).\r\n     * @type {String}\r\n     */\r\n    TRANSIENT: 'TRANSIENT',\r\n    /**\r\n     * The registration will be resolved once per scope.\r\n     * @type {String}\r\n     */\r\n    SCOPED: 'SCOPED'\r\n};\n\n/**\r\n * Resolution modes.\r\n */\r\nconst InjectionMode = {\r\n    /**\r\n     * The dependencies will be resolved by injecting the cradle proxy.\r\n     *\r\n     * @type {String}\r\n     */\r\n    PROXY: 'PROXY',\r\n    /**\r\n     * The dependencies will be resolved by inspecting parameter names of the function/constructor.\r\n     *\r\n     * @type {String}\r\n     */\r\n    CLASSIC: 'CLASSIC'\r\n};\n\n/*\r\n * Parses the parameter list of a function string, including ES6 class constructors.\r\n *\r\n * @param {string} source\r\n * The source of a function to extract the parameter list from\r\n *\r\n * @return {Array<Parameter>}\r\n * Returns an array of parameters.\r\n */\r\nfunction parseParameterList(source) {\r\n    const { next: _next, done } = createTokenizer(source);\r\n    const params = [];\r\n    let t = null;\r\n    nextToken();\r\n    while (!done()) {\r\n        switch (t.type) {\r\n            case 'class':\r\n                skipUntilConstructor();\r\n                // Next token is the constructor identifier.\r\n                nextToken();\r\n                break;\r\n            case 'function':\r\n                const next = nextToken();\r\n                if (next.type === 'ident' || next.type === '*') {\r\n                    // This is the function name or a generator star. Skip it.\r\n                    nextToken();\r\n                }\r\n                break;\r\n            case '(':\r\n                // Start parsing parameter names.\r\n                parseParams();\r\n                break;\r\n            case ')':\r\n                // We're now out of the parameter list.\r\n                return params;\r\n            case 'ident':\r\n                // Likely a paren-less arrow function\r\n                // which can have no default args.\r\n                const param = { name: t.value, optional: false };\r\n                if (t.value === 'async') {\r\n                    // Given it's the very first token, we can assume it's an async function,\r\n                    // so skip the async keyword if the next token is not an equals sign, in which\r\n                    // case it is a single-arg arrow func.\r\n                    const next = nextToken();\r\n                    if (next && next.type !== '=') {\r\n                        break;\r\n                    }\r\n                }\r\n                params.push(param);\r\n                return params;\r\n            /* istanbul ignore next */\r\n            default:\r\n                throw unexpected();\r\n        }\r\n    }\r\n    return params;\r\n    /**\r\n     * After having been placed within the parameter list of\r\n     * a function, parses the parameters.\r\n     */\r\n    function parseParams() {\r\n        // Current token is a left-paren\r\n        let param = { name: '', optional: false };\r\n        while (!done()) {\r\n            nextToken();\r\n            switch (t.type) {\r\n                case 'ident':\r\n                    param.name = t.value;\r\n                    break;\r\n                case '=':\r\n                    param.optional = true;\r\n                    break;\r\n                case ',':\r\n                    params.push(param);\r\n                    param = { name: '', optional: false };\r\n                    break;\r\n                case ')':\r\n                    if (param.name) {\r\n                        params.push(param);\r\n                    }\r\n                    return;\r\n                /* istanbul ignore next */\r\n                default:\r\n                    throw unexpected();\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Skips until we reach the constructor identifier.\r\n     */\r\n    function skipUntilConstructor() {\r\n        while (!isConstructorToken() && !done()) {\r\n            nextToken(1 /* Dumb */);\r\n        }\r\n    }\r\n    /**\r\n     * Determines if the current token represents a constructor, and the next token after it is a paren\r\n     */\r\n    function isConstructorToken() {\r\n        return t.type === 'ident' && t.value === 'constructor';\r\n    }\r\n    /**\r\n     * Advances the tokenizer and stores the previous token in history\r\n     */\r\n    function nextToken(flags = 0 /* None */) {\r\n        t = _next(flags);\r\n        return t;\r\n    }\r\n    /**\r\n     * Returns an error describing an unexpected token.\r\n     */\r\n    /* istanbul ignore next */\r\n    function unexpected() {\r\n        return new SyntaxError(`Parsing parameter list, did not expect ${t.type} token${t.value ? ` (${t.value})` : ''}`);\r\n    }\r\n}\n\n/**\r\n * RESOLVER symbol can be used by modules loaded by\r\n * `loadModules` to configure their lifetime, injection mode, etc.\r\n */\r\nconst RESOLVER = Symbol('Awilix Resolver Config');\r\n/**\r\n * Creates a simple value resolver where the given value will always be resolved.\r\n *\r\n * @param  {string} name\r\n * The name to register the value as.\r\n *\r\n * @param  {*} value\r\n * The value to resolve.\r\n *\r\n * @return {object}\r\n * The resolver.\r\n */\r\nfunction asValue(value) {\r\n    return {\r\n        resolve: () => value\r\n    };\r\n}\r\n/**\r\n * Creates a factory resolver, where the given factory function\r\n * will be invoked with `new` when requested.\r\n *\r\n * @param  {string} name\r\n * The name to register the value as.\r\n *\r\n * @param  {Function} fn\r\n * The function to register.\r\n *\r\n * @param {object} opts\r\n * Additional options for the resolver.\r\n *\r\n * @return {object}\r\n * The resolver.\r\n */\r\nfunction asFunction(fn, opts) {\r\n    if (!isFunction(fn)) {\r\n        throw new AwilixTypeError('asFunction', 'fn', 'function', fn);\r\n    }\r\n    const defaults = {\r\n        lifetime: Lifetime.TRANSIENT\r\n    };\r\n    opts = makeOptions(defaults, opts, fn[RESOLVER]);\r\n    const resolve = generateResolve(fn);\r\n    let result = Object.assign({ resolve }, opts);\r\n    return createDisposableResolver(createBuildResolver(result));\r\n}\r\n/**\r\n * Like a factory resolver, but for classes that require `new`.\r\n *\r\n * @param  {string} name\r\n * The name to register the value as.\r\n *\r\n * @param  {Class} Type\r\n * The function to register.\r\n *\r\n * @param {object} opts\r\n * Additional options for the resolver.\r\n *\r\n * @return {object}\r\n * The resolver.\r\n */\r\nfunction asClass(Type, opts) {\r\n    if (!isFunction(Type)) {\r\n        throw new AwilixTypeError('asClass', 'Type', 'class', Type);\r\n    }\r\n    const defaults = {\r\n        lifetime: Lifetime.TRANSIENT\r\n    };\r\n    opts = makeOptions(defaults, opts, Type[RESOLVER]);\r\n    // A function to handle object construction for us, as to make the generateResolve more reusable\r\n    const newClass = function newClass() {\r\n        return Reflect.construct(Type, arguments);\r\n    };\r\n    const resolve = generateResolve(newClass, Type);\r\n    return createDisposableResolver(createBuildResolver(Object.assign({}, opts, { resolve })));\r\n}\r\n/**\r\n * Resolves to the specified registration.\r\n */\r\nfunction aliasTo(name) {\r\n    return {\r\n        resolve(container) {\r\n            return container.resolve(name);\r\n        }\r\n    };\r\n}\r\n/**\r\n * Given an options object, creates a fluid interface\r\n * to manage it.\r\n *\r\n * @param {*} obj\r\n * The object to return.\r\n *\r\n * @return {object}\r\n * The interface.\r\n */\r\nfunction createBuildResolver(obj) {\r\n    function setLifetime(value) {\r\n        return createBuildResolver(Object.assign({}, this, { lifetime: value }));\r\n    }\r\n    function setInjectionMode(value) {\r\n        return createBuildResolver(Object.assign({}, this, { injectionMode: value }));\r\n    }\r\n    function inject(injector) {\r\n        return createBuildResolver(Object.assign({}, this, { injector }));\r\n    }\r\n    return updateResolver(obj, {\r\n        setLifetime,\r\n        inject,\r\n        transient: partial(setLifetime, Lifetime.TRANSIENT),\r\n        scoped: partial(setLifetime, Lifetime.SCOPED),\r\n        singleton: partial(setLifetime, Lifetime.SINGLETON),\r\n        setInjectionMode,\r\n        proxy: partial(setInjectionMode, InjectionMode.PROXY),\r\n        classic: partial(setInjectionMode, InjectionMode.CLASSIC)\r\n    });\r\n}\r\n/**\r\n * Given a resolver, returns an object with methods to manage the disposer\r\n * function.\r\n * @param obj\r\n */\r\nfunction createDisposableResolver(obj) {\r\n    function disposer(dispose) {\r\n        return createDisposableResolver(Object.assign({}, this, { dispose }));\r\n    }\r\n    return updateResolver(obj, {\r\n        disposer\r\n    });\r\n}\r\n/**\r\n * Partially apply arguments to the given function.\r\n */\r\nfunction partial(fn, arg1) {\r\n    return function partiallyApplied() {\r\n        return fn.call(this, arg1);\r\n    };\r\n}\r\n/**\r\n * Makes an options object based on defaults.\r\n *\r\n * @param  {object} defaults\r\n * Default options.\r\n *\r\n * @param  {...} rest\r\n * The input to check and possibly assign to the resulting object\r\n *\r\n * @return {object}\r\n */\r\nfunction makeOptions(defaults, ...rest) {\r\n    return Object.assign({}, defaults, ...rest);\r\n}\r\n/**\r\n * Creates a new resolver with props merged from both.\r\n *\r\n * @param source\r\n * @param target\r\n */\r\nfunction updateResolver(source, target) {\r\n    const result = Object.assign({}, source, target);\r\n    return result;\r\n}\r\n/**\r\n * Returns a wrapped `resolve` function that provides values\r\n * from the injector and defers to `container.resolve`.\r\n *\r\n * @param  {AwilixContainer} container\r\n * @param  {Object} locals\r\n * @return {Function}\r\n */\r\nfunction wrapWithLocals(container, locals) {\r\n    return function wrappedResolve(name, resolveOpts) {\r\n        if (name in locals) {\r\n            return locals[name];\r\n        }\r\n        return container.resolve(name, resolveOpts);\r\n    };\r\n}\r\n/**\r\n * Returns a new Proxy that checks the result from `injector`\r\n * for values before delegating to the actual container.\r\n *\r\n * @param  {Object} cradle\r\n * @param  {Function} injector\r\n * @return {Proxy}\r\n */\r\nfunction createInjectorProxy(container, injector) {\r\n    const locals = injector(container);\r\n    const allKeys = uniq([\r\n        ...Reflect.ownKeys(container.cradle),\r\n        ...Reflect.ownKeys(locals)\r\n    ]);\r\n    // TODO: Lots of duplication here from the container proxy.\r\n    // Need to refactor.\r\n    const proxy = new Proxy({}, {\r\n        /**\r\n         * Resolves the value by first checking the locals, then the container.\r\n         */\r\n        get(target, name) {\r\n            if (name === Symbol.iterator) {\r\n                return function* iterateRegistrationsAndLocals() {\r\n                    for (const prop in container.cradle) {\r\n                        yield prop;\r\n                    }\r\n                    for (const prop in locals) {\r\n                        yield prop;\r\n                    }\r\n                };\r\n            }\r\n            if (name in locals) {\r\n                return locals[name];\r\n            }\r\n            return container.resolve(name);\r\n        },\r\n        /**\r\n         * Used for `Object.keys`.\r\n         */\r\n        ownKeys() {\r\n            return allKeys;\r\n        },\r\n        /**\r\n         * Used for `Object.keys`.\r\n         */\r\n        getOwnPropertyDescriptor(target, key) {\r\n            if (allKeys.indexOf(key) > -1) {\r\n                return {\r\n                    enumerable: true,\r\n                    configurable: true\r\n                };\r\n            }\r\n            return undefined;\r\n        }\r\n    });\r\n    return proxy;\r\n}\r\n/**\r\n * Returns a resolve function used to construct the dependency graph\r\n *\r\n * @this {Registration}\r\n * The `this` context is a resolver.\r\n *\r\n * @param {Function} fn\r\n * The function to construct\r\n *\r\n * @param {Function} dependencyParseTarget\r\n * The function to parse for the dependencies of the construction target\r\n *\r\n * @param {boolean} isFunction\r\n * Is the resolution target an actual function or a mask for a constructor?\r\n *\r\n * @return {Function}\r\n * The function used for dependency resolution\r\n */\r\nfunction generateResolve(fn, dependencyParseTarget) {\r\n    // If the function used for dependency parsing is falsy, use the supplied function\r\n    if (!dependencyParseTarget) {\r\n        dependencyParseTarget = fn;\r\n    }\r\n    // Parse out the dependencies\r\n    // NOTE: we do this regardless of whether PROXY is used or not,\r\n    // because if this fails, we want it to fail early (at startup) rather\r\n    // than at resolution time.\r\n    const dependencies = parseDependencies(dependencyParseTarget);\r\n    // Use a regular function instead of an arrow function to facilitate binding to the resolver.\r\n    return function resolve(container) {\r\n        // Because the container holds a global reolutionMode we need to determine it in the proper order of precedence:\r\n        // resolver -> container -> default value\r\n        const injectionMode = this.injectionMode ||\r\n            container.options.injectionMode ||\r\n            InjectionMode.PROXY;\r\n        if (injectionMode !== InjectionMode.CLASSIC) {\r\n            // If we have a custom injector, we need to wrap the cradle.\r\n            const cradle = this.injector\r\n                ? createInjectorProxy(container, this.injector)\r\n                : container.cradle;\r\n            // Return the target injected with the cradle\r\n            return fn(cradle);\r\n        }\r\n        // We have dependencies so we need to resolve them manually\r\n        if (dependencies.length > 0) {\r\n            const resolve = this.injector\r\n                ? wrapWithLocals(container, this.injector(container))\r\n                : container.resolve;\r\n            const children = dependencies.map(p => resolve(p.name, { allowUnregistered: p.optional }));\r\n            return fn(...children);\r\n        }\r\n        return fn();\r\n    };\r\n}\r\n/**\r\n * Parses the dependencies from the given function.\r\n * If it's a class and has an extends clause, and no reported dependencies, attempt to parse it's super constructor.\r\n */\r\nfunction parseDependencies(fn) {\r\n    const result = parseParameterList(fn.toString());\r\n    if (result.length > 0) {\r\n        return result;\r\n    }\r\n    const parent = Object.getPrototypeOf(fn);\r\n    if (typeof parent === 'function' && parent !== Function.prototype) {\r\n        // Try to parse the parent\r\n        return parseDependencies(parent);\r\n    }\r\n    return result;\r\n}\n\nconst camelCase = require('camel-case');\r\nconst nameFormatters = {\r\n    camelCase\r\n};\r\n/**\r\n * Given an array of glob strings, will call `require`\r\n * on them, and call their default exported function with the\r\n * container as the first parameter.\r\n *\r\n * @param  {AwilixContainer} dependencies.container\r\n * The container to install loaded modules in.\r\n *\r\n * @param  {Function} dependencies.listModules\r\n * The listModules function to use for listing modules.\r\n *\r\n * @param  {Function} dependencies.require\r\n * The require function - it's a dependency because it makes testing easier.\r\n *\r\n * @param  {String[]} globPatterns\r\n * The array of globs to use when loading modules.\r\n *\r\n * @param  {Object} opts\r\n * Passed to `listModules`, e.g. `{ cwd: '...' }`.\r\n *\r\n * @param  {(string, ModuleDescriptor) => string} opts.formatName\r\n * Used to format the name the module is registered with in the container.\r\n *\r\n * @return {Object}\r\n * Returns an object describing the result.\r\n */\r\nfunction loadModules(dependencies, globPatterns, opts) {\r\n    const container = dependencies.container;\r\n    opts = optsWithDefaults(opts, container);\r\n    const modules = dependencies.listModules(globPatterns, opts);\r\n    const result = modules.map(m => {\r\n        const items = [];\r\n        const loaded = dependencies.require(m.path);\r\n        // Meh, it happens.\r\n        if (!loaded) {\r\n            return items;\r\n        }\r\n        if (isFunction(loaded)) {\r\n            // for module.exports = ...\r\n            items.push({\r\n                name: m.name,\r\n                path: m.path,\r\n                value: loaded,\r\n                opts: m.opts\r\n            });\r\n            return items;\r\n        }\r\n        if (loaded.default && isFunction(loaded.default)) {\r\n            // ES6 default export\r\n            items.push({\r\n                name: m.name,\r\n                path: m.path,\r\n                value: loaded.default,\r\n                opts: m.opts\r\n            });\r\n        }\r\n        // loop through non-default exports, but require the RESOLVER property set for\r\n        // it to be a valid service module export.\r\n        for (const key of Object.keys(loaded)) {\r\n            if (key === 'default') {\r\n                // default case handled separately due to its different name (file name)\r\n                continue;\r\n            }\r\n            if (isFunction(loaded[key]) && RESOLVER in loaded[key]) {\r\n                items.push({\r\n                    name: key,\r\n                    path: m.path,\r\n                    value: loaded[key],\r\n                    opts: m.opts\r\n                });\r\n            }\r\n        }\r\n        return items;\r\n    });\r\n    result\r\n        .reduce((acc, cur) => acc.concat(cur), [])\r\n        .filter(x => x)\r\n        .forEach(registerDescriptor.bind(null, container, opts));\r\n    return {\r\n        loadedModules: modules\r\n    };\r\n}\r\n/**\r\n * Returns a new options object with defaults applied.\r\n */\r\nfunction optsWithDefaults(opts, container) {\r\n    return Object.assign({ \r\n        // Does a somewhat-deep merge on the registration options.\r\n        resolverOptions: Object.assign({ lifetime: Lifetime.TRANSIENT }, (opts && opts.resolverOptions)) }, opts);\r\n}\r\n/**\r\n * Given a module descriptor, reads it and registers it's value with the container.\r\n *\r\n * @param {AwilixContainer} container\r\n * @param {LoadModulesOptions} opts\r\n * @param {ModuleDescriptor} moduleDescriptor\r\n */\r\nfunction registerDescriptor(container, opts, moduleDescriptor) {\r\n    const inlineConfig = moduleDescriptor.value[RESOLVER];\r\n    let name = inlineConfig && inlineConfig.name;\r\n    if (!name) {\r\n        name = moduleDescriptor.name;\r\n        let formatter = opts.formatName;\r\n        if (formatter) {\r\n            if (typeof formatter === 'string') {\r\n                formatter = nameFormatters[formatter];\r\n            }\r\n            if (formatter) {\r\n                name = formatter(name, moduleDescriptor);\r\n            }\r\n        }\r\n    }\r\n    let moduleDescriptorOpts = moduleDescriptor.opts;\r\n    if (typeof moduleDescriptorOpts === 'string') {\r\n        moduleDescriptorOpts = { lifetime: moduleDescriptorOpts };\r\n    }\r\n    const regOpts = Object.assign({}, opts.resolverOptions, moduleDescriptorOpts, inlineConfig);\r\n    const reg = regOpts.register\r\n        ? regOpts.register\r\n        : isClass(moduleDescriptor.value)\r\n            ? asClass\r\n            : asFunction;\r\n    container.register(name, reg(moduleDescriptor.value, regOpts));\r\n}\n\n/**\r\n * Family tree symbol.\r\n * @type {Symbol}\r\n */\r\nconst FAMILY_TREE = Symbol('familyTree');\r\n/**\r\n * Roll Up Registrations symbol.\r\n * @type {Symbol}\r\n */\r\nconst ROLL_UP_REGISTRATIONS = Symbol('rollUpRegistrations');\r\n/**\r\n * Creates an Awilix container instance.\r\n *\r\n * @param {Function} options.require\r\n * The require function to use. Defaults to require.\r\n *\r\n * @param {string} options.injectionMode\r\n * The mode used by the container to resolve dependencies. Defaults to 'Proxy'.\r\n *\r\n * @return {object}\r\n * The container.\r\n */\r\nfunction createContainer(options, parentContainer) {\r\n    options = Object.assign({ injectionMode: InjectionMode.PROXY }, options);\r\n    // The resolution stack is used to keep track\r\n    // of what modules are being resolved, so when\r\n    // an error occurs, we have something to present\r\n    // to the poor developer who fucked up.\r\n    let resolutionStack = [];\r\n    // For performance reasons, we store\r\n    // the rolled-up registrations when starting a resolve.\r\n    let computedRegistrations = null;\r\n    // Internal registration store for this container.\r\n    const registrations = {};\r\n    /**\r\n     * The `Proxy` that is passed to functions so they can resolve their dependencies without\r\n     * knowing where they come from. I call it the \"cradle\" because\r\n     * it is where registered things come to life at resolution-time.\r\n     */\r\n    const cradle = new Proxy({\r\n        [inspect.custom]: inspectCradle\r\n    }, {\r\n        /**\r\n         * The `get` handler is invoked whenever a get-call for `container.cradle.*` is made.\r\n         *\r\n         * @param  {object} target\r\n         * The proxy target. Irrelevant.\r\n         *\r\n         * @param  {string} name\r\n         * The property name.\r\n         *\r\n         * @return {*}\r\n         * Whatever the resolve call returns.\r\n         */\r\n        get: (target, name) => resolve(name),\r\n        /**\r\n         * Setting things on the cradle throws an error.\r\n         *\r\n         * @param  {object} target\r\n         * @param  {string} name\r\n         */\r\n        set: (_target, name, value) => {\r\n            throw new Error(`Attempted setting property \"${name}\" on container cradle - this is not allowed.`);\r\n        },\r\n        /**\r\n         * Used for `Object.keys`.\r\n         */\r\n        ownKeys() {\r\n            return Array.from(cradle);\r\n        },\r\n        /**\r\n         * Used for `Object.keys`.\r\n         */\r\n        getOwnPropertyDescriptor(target, key) {\r\n            const regs = rollUpRegistrations();\r\n            if (Object.getOwnPropertyDescriptor(regs, key)) {\r\n                return {\r\n                    enumerable: true,\r\n                    configurable: true\r\n                };\r\n            }\r\n            return undefined;\r\n        }\r\n    });\r\n    // The container being exposed.\r\n    const container = {\r\n        options,\r\n        cradle: cradle,\r\n        inspect: inspect$1,\r\n        cache: new Map(),\r\n        loadModules: loadModules$1,\r\n        createScope,\r\n        register: register,\r\n        build,\r\n        resolve,\r\n        has,\r\n        dispose,\r\n        [inspect.custom]: inspect$1,\r\n        // tslint:disable-next-line\r\n        [ROLL_UP_REGISTRATIONS]: rollUpRegistrations,\r\n        get registrations() {\r\n            return rollUpRegistrations();\r\n        }\r\n    };\r\n    // Track the family tree.\r\n    const familyTree = parentContainer\r\n        ? [container].concat(parentContainer[FAMILY_TREE])\r\n        : [container];\r\n    container[FAMILY_TREE] = familyTree;\r\n    // We need a reference to the root container,\r\n    // so we can retrieve and store singletons.\r\n    const rootContainer = last(familyTree);\r\n    return container;\r\n    /**\r\n     * Used by util.inspect (which is used by console.log).\r\n     */\r\n    function inspect$1(depth, opts) {\r\n        return `[AwilixContainer (${parentContainer ? 'scoped, ' : ''}registrations: ${Object.keys(container.registrations).length})]`;\r\n    }\r\n    /**\r\n     * Rolls up registrations from the family tree.\r\n     * This is cached until `bustCache` clears it.\r\n     *\r\n     * @param {boolean} bustCache\r\n     * Forces a recomputation.\r\n     *\r\n     * @return {object}\r\n     * The merged registrations object.\r\n     */\r\n    function rollUpRegistrations(bustCache = false) {\r\n        if (computedRegistrations && !bustCache) {\r\n            return computedRegistrations;\r\n        }\r\n        computedRegistrations = Object.assign({}, (parentContainer &&\r\n            parentContainer[ROLL_UP_REGISTRATIONS](bustCache)), registrations);\r\n        return computedRegistrations;\r\n    }\r\n    /**\r\n     * Used for providing an iterator to the cradle.\r\n     */\r\n    function* registrationNamesIterator() {\r\n        const registrations = rollUpRegistrations();\r\n        for (const registrationName in registrations) {\r\n            yield registrationName;\r\n        }\r\n    }\r\n    /**\r\n     * Creates a scoped container.\r\n     *\r\n     * @return {object}\r\n     * The scoped container.\r\n     */\r\n    function createScope() {\r\n        return createContainer(options, container);\r\n    }\r\n    /**\r\n     * Adds a registration for a resolver.\r\n     */\r\n    function register(arg1, arg2) {\r\n        const obj = nameValueToObject(arg1, arg2);\r\n        const keys = [...Object.keys(obj), ...Object.getOwnPropertySymbols(obj)];\r\n        for (const key of keys) {\r\n            const value = obj[key];\r\n            registrations[key] = value;\r\n        }\r\n        // Invalidates the computed registrations.\r\n        computedRegistrations = null;\r\n        return container;\r\n    }\r\n    /**\r\n     * Returned to `util.inspect` when attempting to resolve\r\n     * a custom inspector function on the cradle.\r\n     */\r\n    function inspectCradle() {\r\n        return '[AwilixContainer.cradle]';\r\n    }\r\n    /**\r\n     * Resolves the registration with the given name.\r\n     *\r\n     * @param {string | symbol} name\r\n     * The name of the registration to resolve.\r\n     *\r\n     * @param {ResolveOptions} resolveOpts\r\n     * The resolve options.\r\n     *\r\n     * @return {any}\r\n     * Whatever was resolved.\r\n     */\r\n    function resolve(name, resolveOpts) {\r\n        resolveOpts = resolveOpts || {};\r\n        if (!resolutionStack.length) {\r\n            // Root resolve busts the registration cache.\r\n            rollUpRegistrations(true);\r\n        }\r\n        try {\r\n            // Grab the registration by name.\r\n            const resolver = computedRegistrations[name];\r\n            if (resolutionStack.indexOf(name) > -1) {\r\n                throw new AwilixResolutionError(name, resolutionStack, 'Cyclic dependencies detected.');\r\n            }\r\n            // Used in console.log.\r\n            if (name === 'constructor') {\r\n                return createContainer;\r\n            }\r\n            if (!resolver) {\r\n                // The following checks ensure that console.log on the cradle does not\r\n                // throw an error (issue #7).\r\n                if (name === inspect.custom || name === 'inspect') {\r\n                    return inspectCradle;\r\n                }\r\n                // Edge case: Promise unwrapping will look for a \"then\" property and attempt to call it.\r\n                // Return undefined so that we won't cause a resolution error. (issue #109)\r\n                if (name === 'then') {\r\n                    return undefined;\r\n                }\r\n                // When using `Array.from` or spreading the cradle, this will\r\n                // return the registration names.\r\n                if (name === Symbol.iterator) {\r\n                    return registrationNamesIterator;\r\n                }\r\n                if (resolveOpts.allowUnregistered) {\r\n                    return undefined;\r\n                }\r\n                throw new AwilixResolutionError(name, resolutionStack);\r\n            }\r\n            // Pushes the currently-resolving module name onto the stack\r\n            resolutionStack.push(name);\r\n            // Do the thing\r\n            let cached;\r\n            let resolved;\r\n            switch (resolver.lifetime || Lifetime.TRANSIENT) {\r\n                case Lifetime.TRANSIENT:\r\n                    // Transient lifetime means resolve every time.\r\n                    resolved = resolver.resolve(container);\r\n                    break;\r\n                case Lifetime.SINGLETON:\r\n                    // Singleton lifetime means cache at all times, regardless of scope.\r\n                    cached = rootContainer.cache.get(name);\r\n                    if (!cached) {\r\n                        resolved = resolver.resolve(container);\r\n                        rootContainer.cache.set(name, { resolver, value: resolved });\r\n                    }\r\n                    else {\r\n                        resolved = cached.value;\r\n                    }\r\n                    break;\r\n                case Lifetime.SCOPED:\r\n                    // Scoped lifetime means that the container\r\n                    // that resolves the registration also caches it.\r\n                    // When a registration is not found, we travel up\r\n                    // the family tree until we find one that is cached.\r\n                    cached = container.cache.get(name);\r\n                    if (cached !== undefined) {\r\n                        // We found one!\r\n                        resolved = cached.value;\r\n                        break;\r\n                    }\r\n                    // If we still have not found one, we need to resolve and cache it.\r\n                    resolved = resolver.resolve(container);\r\n                    container.cache.set(name, { resolver, value: resolved });\r\n                    break;\r\n                default:\r\n                    throw new AwilixResolutionError(name, resolutionStack, `Unknown lifetime \"${resolver.lifetime}\"`);\r\n            }\r\n            // Pop it from the stack again, ready for the next resolution\r\n            resolutionStack.pop();\r\n            return resolved;\r\n        }\r\n        catch (err) {\r\n            // When we get an error we need to reset the stack.\r\n            resolutionStack = [];\r\n            throw err;\r\n        }\r\n    }\r\n    /**\r\n     * Checks if the registration with the given name exists.\r\n     *\r\n     * @param {string | symbol} name\r\n     * The name of the registration to resolve.\r\n     *\r\n     * @return {boolean}\r\n     * Whether or not the registration exists.\r\n     */\r\n    function has(name) {\r\n        return name in rollUpRegistrations();\r\n    }\r\n    /**\r\n     * Given a registration, class or function, builds it up and returns it.\r\n     * Does not cache it, this means that any lifetime configured in case of passing\r\n     * a registration will not be used.\r\n     *\r\n     * @param {Resolver|Class|Function} targetOrResolver\r\n     * @param {ResolverOptions} opts\r\n     */\r\n    function build(targetOrResolver, opts) {\r\n        if (targetOrResolver && targetOrResolver.resolve) {\r\n            return targetOrResolver.resolve(container);\r\n        }\r\n        const funcName = 'build';\r\n        const paramName = 'targetOrResolver';\r\n        AwilixTypeError.assert(targetOrResolver, funcName, paramName, 'a registration, function or class', targetOrResolver);\r\n        AwilixTypeError.assert(typeof targetOrResolver === 'function', funcName, paramName, 'a function or class', targetOrResolver);\r\n        const resolver = isClass(targetOrResolver)\r\n            ? asClass(targetOrResolver, opts)\r\n            : asFunction(targetOrResolver, opts);\r\n        return resolver.resolve(container);\r\n    }\r\n    /**\r\n     * Binds `lib/loadModules` to this container, and provides\r\n     * real implementations of it's dependencies.\r\n     *\r\n     * Additionally, any modules using the `dependsOn` API\r\n     * will be resolved.\r\n     *\r\n     * @see lib/loadModules.js documentation.\r\n     */\r\n    function loadModules$1(globPatterns, opts) {\r\n        const _loadModulesDeps = {\r\n            require: options.require ||\r\n                function (uri) {\r\n                    return require(uri);\r\n                },\r\n            listModules,\r\n            container\r\n        };\r\n        loadModules(_loadModulesDeps, globPatterns, opts);\r\n        return container;\r\n    }\r\n    /**\r\n     * Disposes this container and it's children, calling the disposer\r\n     * on all disposable registrations and clearing the cache.\r\n     */\r\n    function dispose() {\r\n        const entries = Array.from(container.cache.entries());\r\n        container.cache.clear();\r\n        return Promise.all(entries.map(([name, entry]) => {\r\n            const { resolver, value } = entry;\r\n            const disposable = resolver;\r\n            if (disposable.dispose) {\r\n                return Promise.resolve().then(() => disposable.dispose(value));\r\n            }\r\n            return Promise.resolve();\r\n        })).then(() => undefined);\r\n    }\r\n}\n\nexport { AwilixError, AwilixResolutionError, AwilixTypeError, ExtendableError, InjectionMode, Lifetime, RESOLVER, aliasTo, asClass, asFunction, asValue, createBuildResolver, createContainer, createDisposableResolver, listModules };\n","// Approach:\n//\n// 1. Get the minimatch set\n// 2. For each pattern in the set, PROCESS(pattern, false)\n// 3. Store matches per-set, then uniq them\n//\n// PROCESS(pattern, inGlobStar)\n// Get the first [n] items from pattern that are all strings\n// Join these together.  This is PREFIX.\n//   If there is no more remaining, then stat(PREFIX) and\n//   add to matches if it succeeds.  END.\n//\n// If inGlobStar and PREFIX is symlink and points to dir\n//   set ENTRIES = []\n// else readdir(PREFIX) as ENTRIES\n//   If fail, END\n//\n// with ENTRIES\n//   If pattern[n] is GLOBSTAR\n//     // handle the case where the globstar match is empty\n//     // by pruning it out, and testing the resulting pattern\n//     PROCESS(pattern[0..n] + pattern[n+1 .. $], false)\n//     // handle other cases.\n//     for ENTRY in ENTRIES (not dotfiles)\n//       // attach globstar + tail onto the entry\n//       // Mark that this entry is a globstar match\n//       PROCESS(pattern[0..n] + ENTRY + pattern[n .. $], true)\n//\n//   else // not globstar\n//     for ENTRY in ENTRIES (not dotfiles, unless pattern[n] is dot)\n//       Test ENTRY against pattern[n]\n//       If fails, continue\n//       If passes, PROCESS(pattern[0..n] + item + pattern[n+1 .. $])\n//\n// Caveat:\n//   Cache all stats and readdirs results to minimize syscall.  Since all\n//   we ever care about is existence and directory-ness, we can just keep\n//   `true` for files, and [children,...] for directories, or `false` for\n//   things that don't exist.\n\nmodule.exports = glob\n\nvar fs = require('fs')\nvar rp = require('fs.realpath')\nvar minimatch = require('minimatch')\nvar Minimatch = minimatch.Minimatch\nvar inherits = require('inherits')\nvar EE = require('events').EventEmitter\nvar path = require('path')\nvar assert = require('assert')\nvar isAbsolute = require('path-is-absolute')\nvar globSync = require('./sync.js')\nvar common = require('./common.js')\nvar alphasort = common.alphasort\nvar alphasorti = common.alphasorti\nvar setopts = common.setopts\nvar ownProp = common.ownProp\nvar inflight = require('inflight')\nvar util = require('util')\nvar childrenIgnored = common.childrenIgnored\nvar isIgnored = common.isIgnored\n\nvar once = require('once')\n\nfunction glob (pattern, options, cb) {\n  if (typeof options === 'function') cb = options, options = {}\n  if (!options) options = {}\n\n  if (options.sync) {\n    if (cb)\n      throw new TypeError('callback provided to sync glob')\n    return globSync(pattern, options)\n  }\n\n  return new Glob(pattern, options, cb)\n}\n\nglob.sync = globSync\nvar GlobSync = glob.GlobSync = globSync.GlobSync\n\n// old api surface\nglob.glob = glob\n\nfunction extend (origin, add) {\n  if (add === null || typeof add !== 'object') {\n    return origin\n  }\n\n  var keys = Object.keys(add)\n  var i = keys.length\n  while (i--) {\n    origin[keys[i]] = add[keys[i]]\n  }\n  return origin\n}\n\nglob.hasMagic = function (pattern, options_) {\n  var options = extend({}, options_)\n  options.noprocess = true\n\n  var g = new Glob(pattern, options)\n  var set = g.minimatch.set\n\n  if (!pattern)\n    return false\n\n  if (set.length > 1)\n    return true\n\n  for (var j = 0; j < set[0].length; j++) {\n    if (typeof set[0][j] !== 'string')\n      return true\n  }\n\n  return false\n}\n\nglob.Glob = Glob\ninherits(Glob, EE)\nfunction Glob (pattern, options, cb) {\n  if (typeof options === 'function') {\n    cb = options\n    options = null\n  }\n\n  if (options && options.sync) {\n    if (cb)\n      throw new TypeError('callback provided to sync glob')\n    return new GlobSync(pattern, options)\n  }\n\n  if (!(this instanceof Glob))\n    return new Glob(pattern, options, cb)\n\n  setopts(this, pattern, options)\n  this._didRealPath = false\n\n  // process each pattern in the minimatch set\n  var n = this.minimatch.set.length\n\n  // The matches are stored as {<filename>: true,...} so that\n  // duplicates are automagically pruned.\n  // Later, we do an Object.keys() on these.\n  // Keep them as a list so we can fill in when nonull is set.\n  this.matches = new Array(n)\n\n  if (typeof cb === 'function') {\n    cb = once(cb)\n    this.on('error', cb)\n    this.on('end', function (matches) {\n      cb(null, matches)\n    })\n  }\n\n  var self = this\n  this._processing = 0\n\n  this._emitQueue = []\n  this._processQueue = []\n  this.paused = false\n\n  if (this.noprocess)\n    return this\n\n  if (n === 0)\n    return done()\n\n  var sync = true\n  for (var i = 0; i < n; i ++) {\n    this._process(this.minimatch.set[i], i, false, done)\n  }\n  sync = false\n\n  function done () {\n    --self._processing\n    if (self._processing <= 0) {\n      if (sync) {\n        process.nextTick(function () {\n          self._finish()\n        })\n      } else {\n        self._finish()\n      }\n    }\n  }\n}\n\nGlob.prototype._finish = function () {\n  assert(this instanceof Glob)\n  if (this.aborted)\n    return\n\n  if (this.realpath && !this._didRealpath)\n    return this._realpath()\n\n  common.finish(this)\n  this.emit('end', this.found)\n}\n\nGlob.prototype._realpath = function () {\n  if (this._didRealpath)\n    return\n\n  this._didRealpath = true\n\n  var n = this.matches.length\n  if (n === 0)\n    return this._finish()\n\n  var self = this\n  for (var i = 0; i < this.matches.length; i++)\n    this._realpathSet(i, next)\n\n  function next () {\n    if (--n === 0)\n      self._finish()\n  }\n}\n\nGlob.prototype._realpathSet = function (index, cb) {\n  var matchset = this.matches[index]\n  if (!matchset)\n    return cb()\n\n  var found = Object.keys(matchset)\n  var self = this\n  var n = found.length\n\n  if (n === 0)\n    return cb()\n\n  var set = this.matches[index] = Object.create(null)\n  found.forEach(function (p, i) {\n    // If there's a problem with the stat, then it means that\n    // one or more of the links in the realpath couldn't be\n    // resolved.  just return the abs value in that case.\n    p = self._makeAbs(p)\n    rp.realpath(p, self.realpathCache, function (er, real) {\n      if (!er)\n        set[real] = true\n      else if (er.syscall === 'stat')\n        set[p] = true\n      else\n        self.emit('error', er) // srsly wtf right here\n\n      if (--n === 0) {\n        self.matches[index] = set\n        cb()\n      }\n    })\n  })\n}\n\nGlob.prototype._mark = function (p) {\n  return common.mark(this, p)\n}\n\nGlob.prototype._makeAbs = function (f) {\n  return common.makeAbs(this, f)\n}\n\nGlob.prototype.abort = function () {\n  this.aborted = true\n  this.emit('abort')\n}\n\nGlob.prototype.pause = function () {\n  if (!this.paused) {\n    this.paused = true\n    this.emit('pause')\n  }\n}\n\nGlob.prototype.resume = function () {\n  if (this.paused) {\n    this.emit('resume')\n    this.paused = false\n    if (this._emitQueue.length) {\n      var eq = this._emitQueue.slice(0)\n      this._emitQueue.length = 0\n      for (var i = 0; i < eq.length; i ++) {\n        var e = eq[i]\n        this._emitMatch(e[0], e[1])\n      }\n    }\n    if (this._processQueue.length) {\n      var pq = this._processQueue.slice(0)\n      this._processQueue.length = 0\n      for (var i = 0; i < pq.length; i ++) {\n        var p = pq[i]\n        this._processing--\n        this._process(p[0], p[1], p[2], p[3])\n      }\n    }\n  }\n}\n\nGlob.prototype._process = function (pattern, index, inGlobStar, cb) {\n  assert(this instanceof Glob)\n  assert(typeof cb === 'function')\n\n  if (this.aborted)\n    return\n\n  this._processing++\n  if (this.paused) {\n    this._processQueue.push([pattern, index, inGlobStar, cb])\n    return\n  }\n\n  //console.error('PROCESS %d', this._processing, pattern)\n\n  // Get the first [n] parts of pattern that are all strings.\n  var n = 0\n  while (typeof pattern[n] === 'string') {\n    n ++\n  }\n  // now n is the index of the first one that is *not* a string.\n\n  // see if there's anything else\n  var prefix\n  switch (n) {\n    // if not, then this is rather simple\n    case pattern.length:\n      this._processSimple(pattern.join('/'), index, cb)\n      return\n\n    case 0:\n      // pattern *starts* with some non-trivial item.\n      // going to readdir(cwd), but not include the prefix in matches.\n      prefix = null\n      break\n\n    default:\n      // pattern has some string bits in the front.\n      // whatever it starts with, whether that's 'absolute' like /foo/bar,\n      // or 'relative' like '../baz'\n      prefix = pattern.slice(0, n).join('/')\n      break\n  }\n\n  var remain = pattern.slice(n)\n\n  // get the list of entries.\n  var read\n  if (prefix === null)\n    read = '.'\n  else if (isAbsolute(prefix) || isAbsolute(pattern.join('/'))) {\n    if (!prefix || !isAbsolute(prefix))\n      prefix = '/' + prefix\n    read = prefix\n  } else\n    read = prefix\n\n  var abs = this._makeAbs(read)\n\n  //if ignored, skip _processing\n  if (childrenIgnored(this, read))\n    return cb()\n\n  var isGlobStar = remain[0] === minimatch.GLOBSTAR\n  if (isGlobStar)\n    this._processGlobStar(prefix, read, abs, remain, index, inGlobStar, cb)\n  else\n    this._processReaddir(prefix, read, abs, remain, index, inGlobStar, cb)\n}\n\nGlob.prototype._processReaddir = function (prefix, read, abs, remain, index, inGlobStar, cb) {\n  var self = this\n  this._readdir(abs, inGlobStar, function (er, entries) {\n    return self._processReaddir2(prefix, read, abs, remain, index, inGlobStar, entries, cb)\n  })\n}\n\nGlob.prototype._processReaddir2 = function (prefix, read, abs, remain, index, inGlobStar, entries, cb) {\n\n  // if the abs isn't a dir, then nothing can match!\n  if (!entries)\n    return cb()\n\n  // It will only match dot entries if it starts with a dot, or if\n  // dot is set.  Stuff like @(.foo|.bar) isn't allowed.\n  var pn = remain[0]\n  var negate = !!this.minimatch.negate\n  var rawGlob = pn._glob\n  var dotOk = this.dot || rawGlob.charAt(0) === '.'\n\n  var matchedEntries = []\n  for (var i = 0; i < entries.length; i++) {\n    var e = entries[i]\n    if (e.charAt(0) !== '.' || dotOk) {\n      var m\n      if (negate && !prefix) {\n        m = !e.match(pn)\n      } else {\n        m = e.match(pn)\n      }\n      if (m)\n        matchedEntries.push(e)\n    }\n  }\n\n  //console.error('prd2', prefix, entries, remain[0]._glob, matchedEntries)\n\n  var len = matchedEntries.length\n  // If there are no matched entries, then nothing matches.\n  if (len === 0)\n    return cb()\n\n  // if this is the last remaining pattern bit, then no need for\n  // an additional stat *unless* the user has specified mark or\n  // stat explicitly.  We know they exist, since readdir returned\n  // them.\n\n  if (remain.length === 1 && !this.mark && !this.stat) {\n    if (!this.matches[index])\n      this.matches[index] = Object.create(null)\n\n    for (var i = 0; i < len; i ++) {\n      var e = matchedEntries[i]\n      if (prefix) {\n        if (prefix !== '/')\n          e = prefix + '/' + e\n        else\n          e = prefix + e\n      }\n\n      if (e.charAt(0) === '/' && !this.nomount) {\n        e = path.join(this.root, e)\n      }\n      this._emitMatch(index, e)\n    }\n    // This was the last one, and no stats were needed\n    return cb()\n  }\n\n  // now test all matched entries as stand-ins for that part\n  // of the pattern.\n  remain.shift()\n  for (var i = 0; i < len; i ++) {\n    var e = matchedEntries[i]\n    var newPattern\n    if (prefix) {\n      if (prefix !== '/')\n        e = prefix + '/' + e\n      else\n        e = prefix + e\n    }\n    this._process([e].concat(remain), index, inGlobStar, cb)\n  }\n  cb()\n}\n\nGlob.prototype._emitMatch = function (index, e) {\n  if (this.aborted)\n    return\n\n  if (isIgnored(this, e))\n    return\n\n  if (this.paused) {\n    this._emitQueue.push([index, e])\n    return\n  }\n\n  var abs = isAbsolute(e) ? e : this._makeAbs(e)\n\n  if (this.mark)\n    e = this._mark(e)\n\n  if (this.absolute)\n    e = abs\n\n  if (this.matches[index][e])\n    return\n\n  if (this.nodir) {\n    var c = this.cache[abs]\n    if (c === 'DIR' || Array.isArray(c))\n      return\n  }\n\n  this.matches[index][e] = true\n\n  var st = this.statCache[abs]\n  if (st)\n    this.emit('stat', e, st)\n\n  this.emit('match', e)\n}\n\nGlob.prototype._readdirInGlobStar = function (abs, cb) {\n  if (this.aborted)\n    return\n\n  // follow all symlinked directories forever\n  // just proceed as if this is a non-globstar situation\n  if (this.follow)\n    return this._readdir(abs, false, cb)\n\n  var lstatkey = 'lstat\\0' + abs\n  var self = this\n  var lstatcb = inflight(lstatkey, lstatcb_)\n\n  if (lstatcb)\n    fs.lstat(abs, lstatcb)\n\n  function lstatcb_ (er, lstat) {\n    if (er && er.code === 'ENOENT')\n      return cb()\n\n    var isSym = lstat && lstat.isSymbolicLink()\n    self.symlinks[abs] = isSym\n\n    // If it's not a symlink or a dir, then it's definitely a regular file.\n    // don't bother doing a readdir in that case.\n    if (!isSym && lstat && !lstat.isDirectory()) {\n      self.cache[abs] = 'FILE'\n      cb()\n    } else\n      self._readdir(abs, false, cb)\n  }\n}\n\nGlob.prototype._readdir = function (abs, inGlobStar, cb) {\n  if (this.aborted)\n    return\n\n  cb = inflight('readdir\\0'+abs+'\\0'+inGlobStar, cb)\n  if (!cb)\n    return\n\n  //console.error('RD %j %j', +inGlobStar, abs)\n  if (inGlobStar && !ownProp(this.symlinks, abs))\n    return this._readdirInGlobStar(abs, cb)\n\n  if (ownProp(this.cache, abs)) {\n    var c = this.cache[abs]\n    if (!c || c === 'FILE')\n      return cb()\n\n    if (Array.isArray(c))\n      return cb(null, c)\n  }\n\n  var self = this\n  fs.readdir(abs, readdirCb(this, abs, cb))\n}\n\nfunction readdirCb (self, abs, cb) {\n  return function (er, entries) {\n    if (er)\n      self._readdirError(abs, er, cb)\n    else\n      self._readdirEntries(abs, entries, cb)\n  }\n}\n\nGlob.prototype._readdirEntries = function (abs, entries, cb) {\n  if (this.aborted)\n    return\n\n  // if we haven't asked to stat everything, then just\n  // assume that everything in there exists, so we can avoid\n  // having to stat it a second time.\n  if (!this.mark && !this.stat) {\n    for (var i = 0; i < entries.length; i ++) {\n      var e = entries[i]\n      if (abs === '/')\n        e = abs + e\n      else\n        e = abs + '/' + e\n      this.cache[e] = true\n    }\n  }\n\n  this.cache[abs] = entries\n  return cb(null, entries)\n}\n\nGlob.prototype._readdirError = function (f, er, cb) {\n  if (this.aborted)\n    return\n\n  // handle errors, and cache the information\n  switch (er.code) {\n    case 'ENOTSUP': // https://github.com/isaacs/node-glob/issues/205\n    case 'ENOTDIR': // totally normal. means it *does* exist.\n      var abs = this._makeAbs(f)\n      this.cache[abs] = 'FILE'\n      if (abs === this.cwdAbs) {\n        var error = new Error(er.code + ' invalid cwd ' + this.cwd)\n        error.path = this.cwd\n        error.code = er.code\n        this.emit('error', error)\n        this.abort()\n      }\n      break\n\n    case 'ENOENT': // not terribly unusual\n    case 'ELOOP':\n    case 'ENAMETOOLONG':\n    case 'UNKNOWN':\n      this.cache[this._makeAbs(f)] = false\n      break\n\n    default: // some unusual error.  Treat as failure.\n      this.cache[this._makeAbs(f)] = false\n      if (this.strict) {\n        this.emit('error', er)\n        // If the error is handled, then we abort\n        // if not, we threw out of here\n        this.abort()\n      }\n      if (!this.silent)\n        console.error('glob error', er)\n      break\n  }\n\n  return cb()\n}\n\nGlob.prototype._processGlobStar = function (prefix, read, abs, remain, index, inGlobStar, cb) {\n  var self = this\n  this._readdir(abs, inGlobStar, function (er, entries) {\n    self._processGlobStar2(prefix, read, abs, remain, index, inGlobStar, entries, cb)\n  })\n}\n\n\nGlob.prototype._processGlobStar2 = function (prefix, read, abs, remain, index, inGlobStar, entries, cb) {\n  //console.error('pgs2', prefix, remain[0], entries)\n\n  // no entries means not a dir, so it can never have matches\n  // foo.txt/** doesn't match foo.txt\n  if (!entries)\n    return cb()\n\n  // test without the globstar, and with every child both below\n  // and replacing the globstar.\n  var remainWithoutGlobStar = remain.slice(1)\n  var gspref = prefix ? [ prefix ] : []\n  var noGlobStar = gspref.concat(remainWithoutGlobStar)\n\n  // the noGlobStar pattern exits the inGlobStar state\n  this._process(noGlobStar, index, false, cb)\n\n  var isSym = this.symlinks[abs]\n  var len = entries.length\n\n  // If it's a symlink, and we're in a globstar, then stop\n  if (isSym && inGlobStar)\n    return cb()\n\n  for (var i = 0; i < len; i++) {\n    var e = entries[i]\n    if (e.charAt(0) === '.' && !this.dot)\n      continue\n\n    // these two cases enter the inGlobStar state\n    var instead = gspref.concat(entries[i], remainWithoutGlobStar)\n    this._process(instead, index, true, cb)\n\n    var below = gspref.concat(entries[i], remain)\n    this._process(below, index, true, cb)\n  }\n\n  cb()\n}\n\nGlob.prototype._processSimple = function (prefix, index, cb) {\n  // XXX review this.  Shouldn't it be doing the mounting etc\n  // before doing stat?  kinda weird?\n  var self = this\n  this._stat(prefix, function (er, exists) {\n    self._processSimple2(prefix, index, er, exists, cb)\n  })\n}\nGlob.prototype._processSimple2 = function (prefix, index, er, exists, cb) {\n\n  //console.error('ps2', prefix, exists)\n\n  if (!this.matches[index])\n    this.matches[index] = Object.create(null)\n\n  // If it doesn't exist, then just mark the lack of results\n  if (!exists)\n    return cb()\n\n  if (prefix && isAbsolute(prefix) && !this.nomount) {\n    var trail = /[\\/\\\\]$/.test(prefix)\n    if (prefix.charAt(0) === '/') {\n      prefix = path.join(this.root, prefix)\n    } else {\n      prefix = path.resolve(this.root, prefix)\n      if (trail)\n        prefix += '/'\n    }\n  }\n\n  if (process.platform === 'win32')\n    prefix = prefix.replace(/\\\\/g, '/')\n\n  // Mark this as a match\n  this._emitMatch(index, prefix)\n  cb()\n}\n\n// Returns either 'DIR', 'FILE', or false\nGlob.prototype._stat = function (f, cb) {\n  var abs = this._makeAbs(f)\n  var needDir = f.slice(-1) === '/'\n\n  if (f.length > this.maxLength)\n    return cb()\n\n  if (!this.stat && ownProp(this.cache, abs)) {\n    var c = this.cache[abs]\n\n    if (Array.isArray(c))\n      c = 'DIR'\n\n    // It exists, but maybe not how we need it\n    if (!needDir || c === 'DIR')\n      return cb(null, c)\n\n    if (needDir && c === 'FILE')\n      return cb()\n\n    // otherwise we have to stat, because maybe c=true\n    // if we know it exists, but not what it is.\n  }\n\n  var exists\n  var stat = this.statCache[abs]\n  if (stat !== undefined) {\n    if (stat === false)\n      return cb(null, stat)\n    else {\n      var type = stat.isDirectory() ? 'DIR' : 'FILE'\n      if (needDir && type === 'FILE')\n        return cb()\n      else\n        return cb(null, type, stat)\n    }\n  }\n\n  var self = this\n  var statcb = inflight('stat\\0' + abs, lstatcb_)\n  if (statcb)\n    fs.lstat(abs, statcb)\n\n  function lstatcb_ (er, lstat) {\n    if (lstat && lstat.isSymbolicLink()) {\n      // If it's a symlink, then treat it as the target, unless\n      // the target does not exist, then treat it as a file.\n      return fs.stat(abs, function (er, stat) {\n        if (er)\n          self._stat2(f, abs, null, lstat, cb)\n        else\n          self._stat2(f, abs, er, stat, cb)\n      })\n    } else {\n      self._stat2(f, abs, er, lstat, cb)\n    }\n  }\n}\n\nGlob.prototype._stat2 = function (f, abs, er, stat, cb) {\n  if (er && (er.code === 'ENOENT' || er.code === 'ENOTDIR')) {\n    this.statCache[abs] = false\n    return cb()\n  }\n\n  var needDir = f.slice(-1) === '/'\n  this.statCache[abs] = stat\n\n  if (abs.slice(-1) === '/' && stat && !stat.isDirectory())\n    return cb(null, false, stat)\n\n  var c = true\n  if (stat)\n    c = stat.isDirectory() ? 'DIR' : 'FILE'\n  this.cache[abs] = this.cache[abs] || c\n\n  if (needDir && c === 'FILE')\n    return cb()\n\n  return cb(null, c, stat)\n}\n","module.exports = require(\"fs\");","module.exports = realpath\nrealpath.realpath = realpath\nrealpath.sync = realpathSync\nrealpath.realpathSync = realpathSync\nrealpath.monkeypatch = monkeypatch\nrealpath.unmonkeypatch = unmonkeypatch\n\nvar fs = require('fs')\nvar origRealpath = fs.realpath\nvar origRealpathSync = fs.realpathSync\n\nvar version = process.version\nvar ok = /^v[0-5]\\./.test(version)\nvar old = require('./old.js')\n\nfunction newError (er) {\n  return er && er.syscall === 'realpath' && (\n    er.code === 'ELOOP' ||\n    er.code === 'ENOMEM' ||\n    er.code === 'ENAMETOOLONG'\n  )\n}\n\nfunction realpath (p, cache, cb) {\n  if (ok) {\n    return origRealpath(p, cache, cb)\n  }\n\n  if (typeof cache === 'function') {\n    cb = cache\n    cache = null\n  }\n  origRealpath(p, cache, function (er, result) {\n    if (newError(er)) {\n      old.realpath(p, cache, cb)\n    } else {\n      cb(er, result)\n    }\n  })\n}\n\nfunction realpathSync (p, cache) {\n  if (ok) {\n    return origRealpathSync(p, cache)\n  }\n\n  try {\n    return origRealpathSync(p, cache)\n  } catch (er) {\n    if (newError(er)) {\n      return old.realpathSync(p, cache)\n    } else {\n      throw er\n    }\n  }\n}\n\nfunction monkeypatch () {\n  fs.realpath = realpath\n  fs.realpathSync = realpathSync\n}\n\nfunction unmonkeypatch () {\n  fs.realpath = origRealpath\n  fs.realpathSync = origRealpathSync\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar pathModule = require('path');\nvar isWindows = process.platform === 'win32';\nvar fs = require('fs');\n\n// JavaScript implementation of realpath, ported from node pre-v6\n\nvar DEBUG = process.env.NODE_DEBUG && /fs/.test(process.env.NODE_DEBUG);\n\nfunction rethrow() {\n  // Only enable in debug mode. A backtrace uses ~1000 bytes of heap space and\n  // is fairly slow to generate.\n  var callback;\n  if (DEBUG) {\n    var backtrace = new Error;\n    callback = debugCallback;\n  } else\n    callback = missingCallback;\n\n  return callback;\n\n  function debugCallback(err) {\n    if (err) {\n      backtrace.message = err.message;\n      err = backtrace;\n      missingCallback(err);\n    }\n  }\n\n  function missingCallback(err) {\n    if (err) {\n      if (process.throwDeprecation)\n        throw err;  // Forgot a callback but don't know where? Use NODE_DEBUG=fs\n      else if (!process.noDeprecation) {\n        var msg = 'fs: missing callback ' + (err.stack || err.message);\n        if (process.traceDeprecation)\n          console.trace(msg);\n        else\n          console.error(msg);\n      }\n    }\n  }\n}\n\nfunction maybeCallback(cb) {\n  return typeof cb === 'function' ? cb : rethrow();\n}\n\nvar normalize = pathModule.normalize;\n\n// Regexp that finds the next partion of a (partial) path\n// result is [base_with_slash, base], e.g. ['somedir/', 'somedir']\nif (isWindows) {\n  var nextPartRe = /(.*?)(?:[\\/\\\\]+|$)/g;\n} else {\n  var nextPartRe = /(.*?)(?:[\\/]+|$)/g;\n}\n\n// Regex to find the device root, including trailing slash. E.g. 'c:\\\\'.\nif (isWindows) {\n  var splitRootRe = /^(?:[a-zA-Z]:|[\\\\\\/]{2}[^\\\\\\/]+[\\\\\\/][^\\\\\\/]+)?[\\\\\\/]*/;\n} else {\n  var splitRootRe = /^[\\/]*/;\n}\n\nexports.realpathSync = function realpathSync(p, cache) {\n  // make p is absolute\n  p = pathModule.resolve(p);\n\n  if (cache && Object.prototype.hasOwnProperty.call(cache, p)) {\n    return cache[p];\n  }\n\n  var original = p,\n      seenLinks = {},\n      knownHard = {};\n\n  // current character position in p\n  var pos;\n  // the partial path so far, including a trailing slash if any\n  var current;\n  // the partial path without a trailing slash (except when pointing at a root)\n  var base;\n  // the partial path scanned in the previous round, with slash\n  var previous;\n\n  start();\n\n  function start() {\n    // Skip over roots\n    var m = splitRootRe.exec(p);\n    pos = m[0].length;\n    current = m[0];\n    base = m[0];\n    previous = '';\n\n    // On windows, check that the root exists. On unix there is no need.\n    if (isWindows && !knownHard[base]) {\n      fs.lstatSync(base);\n      knownHard[base] = true;\n    }\n  }\n\n  // walk down the path, swapping out linked pathparts for their real\n  // values\n  // NB: p.length changes.\n  while (pos < p.length) {\n    // find the next part\n    nextPartRe.lastIndex = pos;\n    var result = nextPartRe.exec(p);\n    previous = current;\n    current += result[0];\n    base = previous + result[1];\n    pos = nextPartRe.lastIndex;\n\n    // continue if not a symlink\n    if (knownHard[base] || (cache && cache[base] === base)) {\n      continue;\n    }\n\n    var resolvedLink;\n    if (cache && Object.prototype.hasOwnProperty.call(cache, base)) {\n      // some known symbolic link.  no need to stat again.\n      resolvedLink = cache[base];\n    } else {\n      var stat = fs.lstatSync(base);\n      if (!stat.isSymbolicLink()) {\n        knownHard[base] = true;\n        if (cache) cache[base] = base;\n        continue;\n      }\n\n      // read the link if it wasn't read before\n      // dev/ino always return 0 on windows, so skip the check.\n      var linkTarget = null;\n      if (!isWindows) {\n        var id = stat.dev.toString(32) + ':' + stat.ino.toString(32);\n        if (seenLinks.hasOwnProperty(id)) {\n          linkTarget = seenLinks[id];\n        }\n      }\n      if (linkTarget === null) {\n        fs.statSync(base);\n        linkTarget = fs.readlinkSync(base);\n      }\n      resolvedLink = pathModule.resolve(previous, linkTarget);\n      // track this, if given a cache.\n      if (cache) cache[base] = resolvedLink;\n      if (!isWindows) seenLinks[id] = linkTarget;\n    }\n\n    // resolve the link, then start over\n    p = pathModule.resolve(resolvedLink, p.slice(pos));\n    start();\n  }\n\n  if (cache) cache[original] = p;\n\n  return p;\n};\n\n\nexports.realpath = function realpath(p, cache, cb) {\n  if (typeof cb !== 'function') {\n    cb = maybeCallback(cache);\n    cache = null;\n  }\n\n  // make p is absolute\n  p = pathModule.resolve(p);\n\n  if (cache && Object.prototype.hasOwnProperty.call(cache, p)) {\n    return process.nextTick(cb.bind(null, null, cache[p]));\n  }\n\n  var original = p,\n      seenLinks = {},\n      knownHard = {};\n\n  // current character position in p\n  var pos;\n  // the partial path so far, including a trailing slash if any\n  var current;\n  // the partial path without a trailing slash (except when pointing at a root)\n  var base;\n  // the partial path scanned in the previous round, with slash\n  var previous;\n\n  start();\n\n  function start() {\n    // Skip over roots\n    var m = splitRootRe.exec(p);\n    pos = m[0].length;\n    current = m[0];\n    base = m[0];\n    previous = '';\n\n    // On windows, check that the root exists. On unix there is no need.\n    if (isWindows && !knownHard[base]) {\n      fs.lstat(base, function(err) {\n        if (err) return cb(err);\n        knownHard[base] = true;\n        LOOP();\n      });\n    } else {\n      process.nextTick(LOOP);\n    }\n  }\n\n  // walk down the path, swapping out linked pathparts for their real\n  // values\n  function LOOP() {\n    // stop if scanned past end of path\n    if (pos >= p.length) {\n      if (cache) cache[original] = p;\n      return cb(null, p);\n    }\n\n    // find the next part\n    nextPartRe.lastIndex = pos;\n    var result = nextPartRe.exec(p);\n    previous = current;\n    current += result[0];\n    base = previous + result[1];\n    pos = nextPartRe.lastIndex;\n\n    // continue if not a symlink\n    if (knownHard[base] || (cache && cache[base] === base)) {\n      return process.nextTick(LOOP);\n    }\n\n    if (cache && Object.prototype.hasOwnProperty.call(cache, base)) {\n      // known symbolic link.  no need to stat again.\n      return gotResolvedLink(cache[base]);\n    }\n\n    return fs.lstat(base, gotStat);\n  }\n\n  function gotStat(err, stat) {\n    if (err) return cb(err);\n\n    // if not a symlink, skip to the next path part\n    if (!stat.isSymbolicLink()) {\n      knownHard[base] = true;\n      if (cache) cache[base] = base;\n      return process.nextTick(LOOP);\n    }\n\n    // stat & read the link if not read before\n    // call gotTarget as soon as the link target is known\n    // dev/ino always return 0 on windows, so skip the check.\n    if (!isWindows) {\n      var id = stat.dev.toString(32) + ':' + stat.ino.toString(32);\n      if (seenLinks.hasOwnProperty(id)) {\n        return gotTarget(null, seenLinks[id], base);\n      }\n    }\n    fs.stat(base, function(err) {\n      if (err) return cb(err);\n\n      fs.readlink(base, function(err, target) {\n        if (!isWindows) seenLinks[id] = target;\n        gotTarget(err, target);\n      });\n    });\n  }\n\n  function gotTarget(err, target, base) {\n    if (err) return cb(err);\n\n    var resolvedLink = pathModule.resolve(previous, target);\n    if (cache) cache[base] = resolvedLink;\n    gotResolvedLink(resolvedLink);\n  }\n\n  function gotResolvedLink(resolvedLink) {\n    // resolve the link, then start over\n    p = pathModule.resolve(resolvedLink, p.slice(pos));\n    start();\n  }\n};\n","module.exports = require(\"path\");","module.exports = minimatch\nminimatch.Minimatch = Minimatch\n\nvar path = { sep: '/' }\ntry {\n  path = require('path')\n} catch (er) {}\n\nvar GLOBSTAR = minimatch.GLOBSTAR = Minimatch.GLOBSTAR = {}\nvar expand = require('brace-expansion')\n\nvar plTypes = {\n  '!': { open: '(?:(?!(?:', close: '))[^/]*?)'},\n  '?': { open: '(?:', close: ')?' },\n  '+': { open: '(?:', close: ')+' },\n  '*': { open: '(?:', close: ')*' },\n  '@': { open: '(?:', close: ')' }\n}\n\n// any single thing other than /\n// don't need to escape / when using new RegExp()\nvar qmark = '[^/]'\n\n// * => any number of characters\nvar star = qmark + '*?'\n\n// ** when dots are allowed.  Anything goes, except .. and .\n// not (^ or / followed by one or two dots followed by $ or /),\n// followed by anything, any number of times.\nvar twoStarDot = '(?:(?!(?:\\\\\\/|^)(?:\\\\.{1,2})($|\\\\\\/)).)*?'\n\n// not a ^ or / followed by a dot,\n// followed by anything, any number of times.\nvar twoStarNoDot = '(?:(?!(?:\\\\\\/|^)\\\\.).)*?'\n\n// characters that need to be escaped in RegExp.\nvar reSpecials = charSet('().*{}+?[]^$\\\\!')\n\n// \"abc\" -> { a:true, b:true, c:true }\nfunction charSet (s) {\n  return s.split('').reduce(function (set, c) {\n    set[c] = true\n    return set\n  }, {})\n}\n\n// normalizes slashes.\nvar slashSplit = /\\/+/\n\nminimatch.filter = filter\nfunction filter (pattern, options) {\n  options = options || {}\n  return function (p, i, list) {\n    return minimatch(p, pattern, options)\n  }\n}\n\nfunction ext (a, b) {\n  a = a || {}\n  b = b || {}\n  var t = {}\n  Object.keys(b).forEach(function (k) {\n    t[k] = b[k]\n  })\n  Object.keys(a).forEach(function (k) {\n    t[k] = a[k]\n  })\n  return t\n}\n\nminimatch.defaults = function (def) {\n  if (!def || !Object.keys(def).length) return minimatch\n\n  var orig = minimatch\n\n  var m = function minimatch (p, pattern, options) {\n    return orig.minimatch(p, pattern, ext(def, options))\n  }\n\n  m.Minimatch = function Minimatch (pattern, options) {\n    return new orig.Minimatch(pattern, ext(def, options))\n  }\n\n  return m\n}\n\nMinimatch.defaults = function (def) {\n  if (!def || !Object.keys(def).length) return Minimatch\n  return minimatch.defaults(def).Minimatch\n}\n\nfunction minimatch (p, pattern, options) {\n  if (typeof pattern !== 'string') {\n    throw new TypeError('glob pattern string required')\n  }\n\n  if (!options) options = {}\n\n  // shortcut: comments match nothing.\n  if (!options.nocomment && pattern.charAt(0) === '#') {\n    return false\n  }\n\n  // \"\" only matches \"\"\n  if (pattern.trim() === '') return p === ''\n\n  return new Minimatch(pattern, options).match(p)\n}\n\nfunction Minimatch (pattern, options) {\n  if (!(this instanceof Minimatch)) {\n    return new Minimatch(pattern, options)\n  }\n\n  if (typeof pattern !== 'string') {\n    throw new TypeError('glob pattern string required')\n  }\n\n  if (!options) options = {}\n  pattern = pattern.trim()\n\n  // windows support: need to use /, not \\\n  if (path.sep !== '/') {\n    pattern = pattern.split(path.sep).join('/')\n  }\n\n  this.options = options\n  this.set = []\n  this.pattern = pattern\n  this.regexp = null\n  this.negate = false\n  this.comment = false\n  this.empty = false\n\n  // make the set of regexps etc.\n  this.make()\n}\n\nMinimatch.prototype.debug = function () {}\n\nMinimatch.prototype.make = make\nfunction make () {\n  // don't do it more than once.\n  if (this._made) return\n\n  var pattern = this.pattern\n  var options = this.options\n\n  // empty patterns and comments match nothing.\n  if (!options.nocomment && pattern.charAt(0) === '#') {\n    this.comment = true\n    return\n  }\n  if (!pattern) {\n    this.empty = true\n    return\n  }\n\n  // step 1: figure out negation, etc.\n  this.parseNegate()\n\n  // step 2: expand braces\n  var set = this.globSet = this.braceExpand()\n\n  if (options.debug) this.debug = console.error\n\n  this.debug(this.pattern, set)\n\n  // step 3: now we have a set, so turn each one into a series of path-portion\n  // matching patterns.\n  // These will be regexps, except in the case of \"**\", which is\n  // set to the GLOBSTAR object for globstar behavior,\n  // and will not contain any / characters\n  set = this.globParts = set.map(function (s) {\n    return s.split(slashSplit)\n  })\n\n  this.debug(this.pattern, set)\n\n  // glob --> regexps\n  set = set.map(function (s, si, set) {\n    return s.map(this.parse, this)\n  }, this)\n\n  this.debug(this.pattern, set)\n\n  // filter out everything that didn't compile properly.\n  set = set.filter(function (s) {\n    return s.indexOf(false) === -1\n  })\n\n  this.debug(this.pattern, set)\n\n  this.set = set\n}\n\nMinimatch.prototype.parseNegate = parseNegate\nfunction parseNegate () {\n  var pattern = this.pattern\n  var negate = false\n  var options = this.options\n  var negateOffset = 0\n\n  if (options.nonegate) return\n\n  for (var i = 0, l = pattern.length\n    ; i < l && pattern.charAt(i) === '!'\n    ; i++) {\n    negate = !negate\n    negateOffset++\n  }\n\n  if (negateOffset) this.pattern = pattern.substr(negateOffset)\n  this.negate = negate\n}\n\n// Brace expansion:\n// a{b,c}d -> abd acd\n// a{b,}c -> abc ac\n// a{0..3}d -> a0d a1d a2d a3d\n// a{b,c{d,e}f}g -> abg acdfg acefg\n// a{b,c}d{e,f}g -> abdeg acdeg abdeg abdfg\n//\n// Invalid sets are not expanded.\n// a{2..}b -> a{2..}b\n// a{b}c -> a{b}c\nminimatch.braceExpand = function (pattern, options) {\n  return braceExpand(pattern, options)\n}\n\nMinimatch.prototype.braceExpand = braceExpand\n\nfunction braceExpand (pattern, options) {\n  if (!options) {\n    if (this instanceof Minimatch) {\n      options = this.options\n    } else {\n      options = {}\n    }\n  }\n\n  pattern = typeof pattern === 'undefined'\n    ? this.pattern : pattern\n\n  if (typeof pattern === 'undefined') {\n    throw new TypeError('undefined pattern')\n  }\n\n  if (options.nobrace ||\n    !pattern.match(/\\{.*\\}/)) {\n    // shortcut. no need to expand.\n    return [pattern]\n  }\n\n  return expand(pattern)\n}\n\n// parse a component of the expanded set.\n// At this point, no pattern may contain \"/\" in it\n// so we're going to return a 2d array, where each entry is the full\n// pattern, split on '/', and then turned into a regular expression.\n// A regexp is made at the end which joins each array with an\n// escaped /, and another full one which joins each regexp with |.\n//\n// Following the lead of Bash 4.1, note that \"**\" only has special meaning\n// when it is the *only* thing in a path portion.  Otherwise, any series\n// of * is equivalent to a single *.  Globstar behavior is enabled by\n// default, and can be disabled by setting options.noglobstar.\nMinimatch.prototype.parse = parse\nvar SUBPARSE = {}\nfunction parse (pattern, isSub) {\n  if (pattern.length > 1024 * 64) {\n    throw new TypeError('pattern is too long')\n  }\n\n  var options = this.options\n\n  // shortcuts\n  if (!options.noglobstar && pattern === '**') return GLOBSTAR\n  if (pattern === '') return ''\n\n  var re = ''\n  var hasMagic = !!options.nocase\n  var escaping = false\n  // ? => one single character\n  var patternListStack = []\n  var negativeLists = []\n  var stateChar\n  var inClass = false\n  var reClassStart = -1\n  var classStart = -1\n  // . and .. never match anything that doesn't start with .,\n  // even when options.dot is set.\n  var patternStart = pattern.charAt(0) === '.' ? '' // anything\n  // not (start or / followed by . or .. followed by / or end)\n  : options.dot ? '(?!(?:^|\\\\\\/)\\\\.{1,2}(?:$|\\\\\\/))'\n  : '(?!\\\\.)'\n  var self = this\n\n  function clearStateChar () {\n    if (stateChar) {\n      // we had some state-tracking character\n      // that wasn't consumed by this pass.\n      switch (stateChar) {\n        case '*':\n          re += star\n          hasMagic = true\n        break\n        case '?':\n          re += qmark\n          hasMagic = true\n        break\n        default:\n          re += '\\\\' + stateChar\n        break\n      }\n      self.debug('clearStateChar %j %j', stateChar, re)\n      stateChar = false\n    }\n  }\n\n  for (var i = 0, len = pattern.length, c\n    ; (i < len) && (c = pattern.charAt(i))\n    ; i++) {\n    this.debug('%s\\t%s %s %j', pattern, i, re, c)\n\n    // skip over any that are escaped.\n    if (escaping && reSpecials[c]) {\n      re += '\\\\' + c\n      escaping = false\n      continue\n    }\n\n    switch (c) {\n      case '/':\n        // completely not allowed, even escaped.\n        // Should already be path-split by now.\n        return false\n\n      case '\\\\':\n        clearStateChar()\n        escaping = true\n      continue\n\n      // the various stateChar values\n      // for the \"extglob\" stuff.\n      case '?':\n      case '*':\n      case '+':\n      case '@':\n      case '!':\n        this.debug('%s\\t%s %s %j <-- stateChar', pattern, i, re, c)\n\n        // all of those are literals inside a class, except that\n        // the glob [!a] means [^a] in regexp\n        if (inClass) {\n          this.debug('  in class')\n          if (c === '!' && i === classStart + 1) c = '^'\n          re += c\n          continue\n        }\n\n        // if we already have a stateChar, then it means\n        // that there was something like ** or +? in there.\n        // Handle the stateChar, then proceed with this one.\n        self.debug('call clearStateChar %j', stateChar)\n        clearStateChar()\n        stateChar = c\n        // if extglob is disabled, then +(asdf|foo) isn't a thing.\n        // just clear the statechar *now*, rather than even diving into\n        // the patternList stuff.\n        if (options.noext) clearStateChar()\n      continue\n\n      case '(':\n        if (inClass) {\n          re += '('\n          continue\n        }\n\n        if (!stateChar) {\n          re += '\\\\('\n          continue\n        }\n\n        patternListStack.push({\n          type: stateChar,\n          start: i - 1,\n          reStart: re.length,\n          open: plTypes[stateChar].open,\n          close: plTypes[stateChar].close\n        })\n        // negation is (?:(?!js)[^/]*)\n        re += stateChar === '!' ? '(?:(?!(?:' : '(?:'\n        this.debug('plType %j %j', stateChar, re)\n        stateChar = false\n      continue\n\n      case ')':\n        if (inClass || !patternListStack.length) {\n          re += '\\\\)'\n          continue\n        }\n\n        clearStateChar()\n        hasMagic = true\n        var pl = patternListStack.pop()\n        // negation is (?:(?!js)[^/]*)\n        // The others are (?:<pattern>)<type>\n        re += pl.close\n        if (pl.type === '!') {\n          negativeLists.push(pl)\n        }\n        pl.reEnd = re.length\n      continue\n\n      case '|':\n        if (inClass || !patternListStack.length || escaping) {\n          re += '\\\\|'\n          escaping = false\n          continue\n        }\n\n        clearStateChar()\n        re += '|'\n      continue\n\n      // these are mostly the same in regexp and glob\n      case '[':\n        // swallow any state-tracking char before the [\n        clearStateChar()\n\n        if (inClass) {\n          re += '\\\\' + c\n          continue\n        }\n\n        inClass = true\n        classStart = i\n        reClassStart = re.length\n        re += c\n      continue\n\n      case ']':\n        //  a right bracket shall lose its special\n        //  meaning and represent itself in\n        //  a bracket expression if it occurs\n        //  first in the list.  -- POSIX.2 2.8.3.2\n        if (i === classStart + 1 || !inClass) {\n          re += '\\\\' + c\n          escaping = false\n          continue\n        }\n\n        // handle the case where we left a class open.\n        // \"[z-a]\" is valid, equivalent to \"\\[z-a\\]\"\n        if (inClass) {\n          // split where the last [ was, make sure we don't have\n          // an invalid re. if so, re-walk the contents of the\n          // would-be class to re-translate any characters that\n          // were passed through as-is\n          // TODO: It would probably be faster to determine this\n          // without a try/catch and a new RegExp, but it's tricky\n          // to do safely.  For now, this is safe and works.\n          var cs = pattern.substring(classStart + 1, i)\n          try {\n            RegExp('[' + cs + ']')\n          } catch (er) {\n            // not a valid class!\n            var sp = this.parse(cs, SUBPARSE)\n            re = re.substr(0, reClassStart) + '\\\\[' + sp[0] + '\\\\]'\n            hasMagic = hasMagic || sp[1]\n            inClass = false\n            continue\n          }\n        }\n\n        // finish up the class.\n        hasMagic = true\n        inClass = false\n        re += c\n      continue\n\n      default:\n        // swallow any state char that wasn't consumed\n        clearStateChar()\n\n        if (escaping) {\n          // no need\n          escaping = false\n        } else if (reSpecials[c]\n          && !(c === '^' && inClass)) {\n          re += '\\\\'\n        }\n\n        re += c\n\n    } // switch\n  } // for\n\n  // handle the case where we left a class open.\n  // \"[abc\" is valid, equivalent to \"\\[abc\"\n  if (inClass) {\n    // split where the last [ was, and escape it\n    // this is a huge pita.  We now have to re-walk\n    // the contents of the would-be class to re-translate\n    // any characters that were passed through as-is\n    cs = pattern.substr(classStart + 1)\n    sp = this.parse(cs, SUBPARSE)\n    re = re.substr(0, reClassStart) + '\\\\[' + sp[0]\n    hasMagic = hasMagic || sp[1]\n  }\n\n  // handle the case where we had a +( thing at the *end*\n  // of the pattern.\n  // each pattern list stack adds 3 chars, and we need to go through\n  // and escape any | chars that were passed through as-is for the regexp.\n  // Go through and escape them, taking care not to double-escape any\n  // | chars that were already escaped.\n  for (pl = patternListStack.pop(); pl; pl = patternListStack.pop()) {\n    var tail = re.slice(pl.reStart + pl.open.length)\n    this.debug('setting tail', re, pl)\n    // maybe some even number of \\, then maybe 1 \\, followed by a |\n    tail = tail.replace(/((?:\\\\{2}){0,64})(\\\\?)\\|/g, function (_, $1, $2) {\n      if (!$2) {\n        // the | isn't already escaped, so escape it.\n        $2 = '\\\\'\n      }\n\n      // need to escape all those slashes *again*, without escaping the\n      // one that we need for escaping the | character.  As it works out,\n      // escaping an even number of slashes can be done by simply repeating\n      // it exactly after itself.  That's why this trick works.\n      //\n      // I am sorry that you have to see this.\n      return $1 + $1 + $2 + '|'\n    })\n\n    this.debug('tail=%j\\n   %s', tail, tail, pl, re)\n    var t = pl.type === '*' ? star\n      : pl.type === '?' ? qmark\n      : '\\\\' + pl.type\n\n    hasMagic = true\n    re = re.slice(0, pl.reStart) + t + '\\\\(' + tail\n  }\n\n  // handle trailing things that only matter at the very end.\n  clearStateChar()\n  if (escaping) {\n    // trailing \\\\\n    re += '\\\\\\\\'\n  }\n\n  // only need to apply the nodot start if the re starts with\n  // something that could conceivably capture a dot\n  var addPatternStart = false\n  switch (re.charAt(0)) {\n    case '.':\n    case '[':\n    case '(': addPatternStart = true\n  }\n\n  // Hack to work around lack of negative lookbehind in JS\n  // A pattern like: *.!(x).!(y|z) needs to ensure that a name\n  // like 'a.xyz.yz' doesn't match.  So, the first negative\n  // lookahead, has to look ALL the way ahead, to the end of\n  // the pattern.\n  for (var n = negativeLists.length - 1; n > -1; n--) {\n    var nl = negativeLists[n]\n\n    var nlBefore = re.slice(0, nl.reStart)\n    var nlFirst = re.slice(nl.reStart, nl.reEnd - 8)\n    var nlLast = re.slice(nl.reEnd - 8, nl.reEnd)\n    var nlAfter = re.slice(nl.reEnd)\n\n    nlLast += nlAfter\n\n    // Handle nested stuff like *(*.js|!(*.json)), where open parens\n    // mean that we should *not* include the ) in the bit that is considered\n    // \"after\" the negated section.\n    var openParensBefore = nlBefore.split('(').length - 1\n    var cleanAfter = nlAfter\n    for (i = 0; i < openParensBefore; i++) {\n      cleanAfter = cleanAfter.replace(/\\)[+*?]?/, '')\n    }\n    nlAfter = cleanAfter\n\n    var dollar = ''\n    if (nlAfter === '' && isSub !== SUBPARSE) {\n      dollar = '$'\n    }\n    var newRe = nlBefore + nlFirst + nlAfter + dollar + nlLast\n    re = newRe\n  }\n\n  // if the re is not \"\" at this point, then we need to make sure\n  // it doesn't match against an empty path part.\n  // Otherwise a/* will match a/, which it should not.\n  if (re !== '' && hasMagic) {\n    re = '(?=.)' + re\n  }\n\n  if (addPatternStart) {\n    re = patternStart + re\n  }\n\n  // parsing just a piece of a larger pattern.\n  if (isSub === SUBPARSE) {\n    return [re, hasMagic]\n  }\n\n  // skip the regexp for non-magical patterns\n  // unescape anything in it, though, so that it'll be\n  // an exact match against a file etc.\n  if (!hasMagic) {\n    return globUnescape(pattern)\n  }\n\n  var flags = options.nocase ? 'i' : ''\n  try {\n    var regExp = new RegExp('^' + re + '$', flags)\n  } catch (er) {\n    // If it was an invalid regular expression, then it can't match\n    // anything.  This trick looks for a character after the end of\n    // the string, which is of course impossible, except in multi-line\n    // mode, but it's not a /m regex.\n    return new RegExp('$.')\n  }\n\n  regExp._glob = pattern\n  regExp._src = re\n\n  return regExp\n}\n\nminimatch.makeRe = function (pattern, options) {\n  return new Minimatch(pattern, options || {}).makeRe()\n}\n\nMinimatch.prototype.makeRe = makeRe\nfunction makeRe () {\n  if (this.regexp || this.regexp === false) return this.regexp\n\n  // at this point, this.set is a 2d array of partial\n  // pattern strings, or \"**\".\n  //\n  // It's better to use .match().  This function shouldn't\n  // be used, really, but it's pretty convenient sometimes,\n  // when you just want to work with a regex.\n  var set = this.set\n\n  if (!set.length) {\n    this.regexp = false\n    return this.regexp\n  }\n  var options = this.options\n\n  var twoStar = options.noglobstar ? star\n    : options.dot ? twoStarDot\n    : twoStarNoDot\n  var flags = options.nocase ? 'i' : ''\n\n  var re = set.map(function (pattern) {\n    return pattern.map(function (p) {\n      return (p === GLOBSTAR) ? twoStar\n      : (typeof p === 'string') ? regExpEscape(p)\n      : p._src\n    }).join('\\\\\\/')\n  }).join('|')\n\n  // must match entire pattern\n  // ending in a * or ** will make it less strict.\n  re = '^(?:' + re + ')$'\n\n  // can match anything, as long as it's not this.\n  if (this.negate) re = '^(?!' + re + ').*$'\n\n  try {\n    this.regexp = new RegExp(re, flags)\n  } catch (ex) {\n    this.regexp = false\n  }\n  return this.regexp\n}\n\nminimatch.match = function (list, pattern, options) {\n  options = options || {}\n  var mm = new Minimatch(pattern, options)\n  list = list.filter(function (f) {\n    return mm.match(f)\n  })\n  if (mm.options.nonull && !list.length) {\n    list.push(pattern)\n  }\n  return list\n}\n\nMinimatch.prototype.match = match\nfunction match (f, partial) {\n  this.debug('match', f, this.pattern)\n  // short-circuit in the case of busted things.\n  // comments, etc.\n  if (this.comment) return false\n  if (this.empty) return f === ''\n\n  if (f === '/' && partial) return true\n\n  var options = this.options\n\n  // windows: need to use /, not \\\n  if (path.sep !== '/') {\n    f = f.split(path.sep).join('/')\n  }\n\n  // treat the test path as a set of pathparts.\n  f = f.split(slashSplit)\n  this.debug(this.pattern, 'split', f)\n\n  // just ONE of the pattern sets in this.set needs to match\n  // in order for it to be valid.  If negating, then just one\n  // match means that we have failed.\n  // Either way, return on the first hit.\n\n  var set = this.set\n  this.debug(this.pattern, 'set', set)\n\n  // Find the basename of the path by looking for the last non-empty segment\n  var filename\n  var i\n  for (i = f.length - 1; i >= 0; i--) {\n    filename = f[i]\n    if (filename) break\n  }\n\n  for (i = 0; i < set.length; i++) {\n    var pattern = set[i]\n    var file = f\n    if (options.matchBase && pattern.length === 1) {\n      file = [filename]\n    }\n    var hit = this.matchOne(file, pattern, partial)\n    if (hit) {\n      if (options.flipNegate) return true\n      return !this.negate\n    }\n  }\n\n  // didn't get any hits.  this is success if it's a negative\n  // pattern, failure otherwise.\n  if (options.flipNegate) return false\n  return this.negate\n}\n\n// set partial to true to test if, for example,\n// \"/a/b\" matches the start of \"/*/b/*/d\"\n// Partial means, if you run out of file before you run\n// out of pattern, then that's fine, as long as all\n// the parts match.\nMinimatch.prototype.matchOne = function (file, pattern, partial) {\n  var options = this.options\n\n  this.debug('matchOne',\n    { 'this': this, file: file, pattern: pattern })\n\n  this.debug('matchOne', file.length, pattern.length)\n\n  for (var fi = 0,\n      pi = 0,\n      fl = file.length,\n      pl = pattern.length\n      ; (fi < fl) && (pi < pl)\n      ; fi++, pi++) {\n    this.debug('matchOne loop')\n    var p = pattern[pi]\n    var f = file[fi]\n\n    this.debug(pattern, p, f)\n\n    // should be impossible.\n    // some invalid regexp stuff in the set.\n    if (p === false) return false\n\n    if (p === GLOBSTAR) {\n      this.debug('GLOBSTAR', [pattern, p, f])\n\n      // \"**\"\n      // a/**/b/**/c would match the following:\n      // a/b/x/y/z/c\n      // a/x/y/z/b/c\n      // a/b/x/b/x/c\n      // a/b/c\n      // To do this, take the rest of the pattern after\n      // the **, and see if it would match the file remainder.\n      // If so, return success.\n      // If not, the ** \"swallows\" a segment, and try again.\n      // This is recursively awful.\n      //\n      // a/**/b/**/c matching a/b/x/y/z/c\n      // - a matches a\n      // - doublestar\n      //   - matchOne(b/x/y/z/c, b/**/c)\n      //     - b matches b\n      //     - doublestar\n      //       - matchOne(x/y/z/c, c) -> no\n      //       - matchOne(y/z/c, c) -> no\n      //       - matchOne(z/c, c) -> no\n      //       - matchOne(c, c) yes, hit\n      var fr = fi\n      var pr = pi + 1\n      if (pr === pl) {\n        this.debug('** at the end')\n        // a ** at the end will just swallow the rest.\n        // We have found a match.\n        // however, it will not swallow /.x, unless\n        // options.dot is set.\n        // . and .. are *never* matched by **, for explosively\n        // exponential reasons.\n        for (; fi < fl; fi++) {\n          if (file[fi] === '.' || file[fi] === '..' ||\n            (!options.dot && file[fi].charAt(0) === '.')) return false\n        }\n        return true\n      }\n\n      // ok, let's see if we can swallow whatever we can.\n      while (fr < fl) {\n        var swallowee = file[fr]\n\n        this.debug('\\nglobstar while', file, fr, pattern, pr, swallowee)\n\n        // XXX remove this slice.  Just pass the start index.\n        if (this.matchOne(file.slice(fr), pattern.slice(pr), partial)) {\n          this.debug('globstar found match!', fr, fl, swallowee)\n          // found a match.\n          return true\n        } else {\n          // can't swallow \".\" or \"..\" ever.\n          // can only swallow \".foo\" when explicitly asked.\n          if (swallowee === '.' || swallowee === '..' ||\n            (!options.dot && swallowee.charAt(0) === '.')) {\n            this.debug('dot detected!', file, fr, pattern, pr)\n            break\n          }\n\n          // ** swallows a segment, and continue.\n          this.debug('globstar swallow a segment, and continue')\n          fr++\n        }\n      }\n\n      // no match was found.\n      // However, in partial mode, we can't say this is necessarily over.\n      // If there's more *pattern* left, then\n      if (partial) {\n        // ran out of file\n        this.debug('\\n>>> no match, partial?', file, fr, pattern, pr)\n        if (fr === fl) return true\n      }\n      return false\n    }\n\n    // something other than **\n    // non-magic patterns just have to match exactly\n    // patterns with magic have been turned into regexps.\n    var hit\n    if (typeof p === 'string') {\n      if (options.nocase) {\n        hit = f.toLowerCase() === p.toLowerCase()\n      } else {\n        hit = f === p\n      }\n      this.debug('string match', p, f, hit)\n    } else {\n      hit = f.match(p)\n      this.debug('pattern match', p, f, hit)\n    }\n\n    if (!hit) return false\n  }\n\n  // Note: ending in / means that we'll get a final \"\"\n  // at the end of the pattern.  This can only match a\n  // corresponding \"\" at the end of the file.\n  // If the file ends in /, then it can only match a\n  // a pattern that ends in /, unless the pattern just\n  // doesn't have any more for it. But, a/b/ should *not*\n  // match \"a/b/*\", even though \"\" matches against the\n  // [^/]*? pattern, except in partial mode, where it might\n  // simply not be reached yet.\n  // However, a/b/ should still satisfy a/*\n\n  // now either we fell off the end of the pattern, or we're done.\n  if (fi === fl && pi === pl) {\n    // ran out of pattern and filename at the same time.\n    // an exact hit!\n    return true\n  } else if (fi === fl) {\n    // ran out of file, but still had pattern left.\n    // this is ok if we're doing the match as part of\n    // a glob fs traversal.\n    return partial\n  } else if (pi === pl) {\n    // ran out of pattern, still have file left.\n    // this is only acceptable if we're on the very last\n    // empty segment of a file with a trailing slash.\n    // a/* should match a/b/\n    var emptyFileEnd = (fi === fl - 1) && (file[fi] === '')\n    return emptyFileEnd\n  }\n\n  // should be unreachable.\n  throw new Error('wtf?')\n}\n\n// replace stuff like \\* with *\nfunction globUnescape (s) {\n  return s.replace(/\\\\(.)/g, '$1')\n}\n\nfunction regExpEscape (s) {\n  return s.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&')\n}\n","var concatMap = require('concat-map');\nvar balanced = require('balanced-match');\n\nmodule.exports = expandTop;\n\nvar escSlash = '\\0SLASH'+Math.random()+'\\0';\nvar escOpen = '\\0OPEN'+Math.random()+'\\0';\nvar escClose = '\\0CLOSE'+Math.random()+'\\0';\nvar escComma = '\\0COMMA'+Math.random()+'\\0';\nvar escPeriod = '\\0PERIOD'+Math.random()+'\\0';\n\nfunction numeric(str) {\n  return parseInt(str, 10) == str\n    ? parseInt(str, 10)\n    : str.charCodeAt(0);\n}\n\nfunction escapeBraces(str) {\n  return str.split('\\\\\\\\').join(escSlash)\n            .split('\\\\{').join(escOpen)\n            .split('\\\\}').join(escClose)\n            .split('\\\\,').join(escComma)\n            .split('\\\\.').join(escPeriod);\n}\n\nfunction unescapeBraces(str) {\n  return str.split(escSlash).join('\\\\')\n            .split(escOpen).join('{')\n            .split(escClose).join('}')\n            .split(escComma).join(',')\n            .split(escPeriod).join('.');\n}\n\n\n// Basically just str.split(\",\"), but handling cases\n// where we have nested braced sections, which should be\n// treated as individual members, like {a,{b,c},d}\nfunction parseCommaParts(str) {\n  if (!str)\n    return [''];\n\n  var parts = [];\n  var m = balanced('{', '}', str);\n\n  if (!m)\n    return str.split(',');\n\n  var pre = m.pre;\n  var body = m.body;\n  var post = m.post;\n  var p = pre.split(',');\n\n  p[p.length-1] += '{' + body + '}';\n  var postParts = parseCommaParts(post);\n  if (post.length) {\n    p[p.length-1] += postParts.shift();\n    p.push.apply(p, postParts);\n  }\n\n  parts.push.apply(parts, p);\n\n  return parts;\n}\n\nfunction expandTop(str) {\n  if (!str)\n    return [];\n\n  // I don't know why Bash 4.3 does this, but it does.\n  // Anything starting with {} will have the first two bytes preserved\n  // but *only* at the top level, so {},a}b will not expand to anything,\n  // but a{},b}c will be expanded to [a}c,abc].\n  // One could argue that this is a bug in Bash, but since the goal of\n  // this module is to match Bash's rules, we escape a leading {}\n  if (str.substr(0, 2) === '{}') {\n    str = '\\\\{\\\\}' + str.substr(2);\n  }\n\n  return expand(escapeBraces(str), true).map(unescapeBraces);\n}\n\nfunction identity(e) {\n  return e;\n}\n\nfunction embrace(str) {\n  return '{' + str + '}';\n}\nfunction isPadded(el) {\n  return /^-?0\\d/.test(el);\n}\n\nfunction lte(i, y) {\n  return i <= y;\n}\nfunction gte(i, y) {\n  return i >= y;\n}\n\nfunction expand(str, isTop) {\n  var expansions = [];\n\n  var m = balanced('{', '}', str);\n  if (!m || /\\$$/.test(m.pre)) return [str];\n\n  var isNumericSequence = /^-?\\d+\\.\\.-?\\d+(?:\\.\\.-?\\d+)?$/.test(m.body);\n  var isAlphaSequence = /^[a-zA-Z]\\.\\.[a-zA-Z](?:\\.\\.-?\\d+)?$/.test(m.body);\n  var isSequence = isNumericSequence || isAlphaSequence;\n  var isOptions = m.body.indexOf(',') >= 0;\n  if (!isSequence && !isOptions) {\n    // {a},b}\n    if (m.post.match(/,.*\\}/)) {\n      str = m.pre + '{' + m.body + escClose + m.post;\n      return expand(str);\n    }\n    return [str];\n  }\n\n  var n;\n  if (isSequence) {\n    n = m.body.split(/\\.\\./);\n  } else {\n    n = parseCommaParts(m.body);\n    if (n.length === 1) {\n      // x{{a,b}}y ==> x{a}y x{b}y\n      n = expand(n[0], false).map(embrace);\n      if (n.length === 1) {\n        var post = m.post.length\n          ? expand(m.post, false)\n          : [''];\n        return post.map(function(p) {\n          return m.pre + n[0] + p;\n        });\n      }\n    }\n  }\n\n  // at this point, n is the parts, and we know it's not a comma set\n  // with a single entry.\n\n  // no need to expand pre, since it is guaranteed to be free of brace-sets\n  var pre = m.pre;\n  var post = m.post.length\n    ? expand(m.post, false)\n    : [''];\n\n  var N;\n\n  if (isSequence) {\n    var x = numeric(n[0]);\n    var y = numeric(n[1]);\n    var width = Math.max(n[0].length, n[1].length)\n    var incr = n.length == 3\n      ? Math.abs(numeric(n[2]))\n      : 1;\n    var test = lte;\n    var reverse = y < x;\n    if (reverse) {\n      incr *= -1;\n      test = gte;\n    }\n    var pad = n.some(isPadded);\n\n    N = [];\n\n    for (var i = x; test(i, y); i += incr) {\n      var c;\n      if (isAlphaSequence) {\n        c = String.fromCharCode(i);\n        if (c === '\\\\')\n          c = '';\n      } else {\n        c = String(i);\n        if (pad) {\n          var need = width - c.length;\n          if (need > 0) {\n            var z = new Array(need + 1).join('0');\n            if (i < 0)\n              c = '-' + z + c.slice(1);\n            else\n              c = z + c;\n          }\n        }\n      }\n      N.push(c);\n    }\n  } else {\n    N = concatMap(n, function(el) { return expand(el, false) });\n  }\n\n  for (var j = 0; j < N.length; j++) {\n    for (var k = 0; k < post.length; k++) {\n      var expansion = pre + N[j] + post[k];\n      if (!isTop || isSequence || expansion)\n        expansions.push(expansion);\n    }\n  }\n\n  return expansions;\n}\n\n","module.exports = function (xs, fn) {\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        var x = fn(xs[i], i);\n        if (isArray(x)) res.push.apply(res, x);\n        else res.push(x);\n    }\n    return res;\n};\n\nvar isArray = Array.isArray || function (xs) {\n    return Object.prototype.toString.call(xs) === '[object Array]';\n};\n","'use strict';\nmodule.exports = balanced;\nfunction balanced(a, b, str) {\n  if (a instanceof RegExp) a = maybeMatch(a, str);\n  if (b instanceof RegExp) b = maybeMatch(b, str);\n\n  var r = range(a, b, str);\n\n  return r && {\n    start: r[0],\n    end: r[1],\n    pre: str.slice(0, r[0]),\n    body: str.slice(r[0] + a.length, r[1]),\n    post: str.slice(r[1] + b.length)\n  };\n}\n\nfunction maybeMatch(reg, str) {\n  var m = str.match(reg);\n  return m ? m[0] : null;\n}\n\nbalanced.range = range;\nfunction range(a, b, str) {\n  var begs, beg, left, right, result;\n  var ai = str.indexOf(a);\n  var bi = str.indexOf(b, ai + 1);\n  var i = ai;\n\n  if (ai >= 0 && bi > 0) {\n    begs = [];\n    left = str.length;\n\n    while (i >= 0 && !result) {\n      if (i == ai) {\n        begs.push(i);\n        ai = str.indexOf(a, i + 1);\n      } else if (begs.length == 1) {\n        result = [ begs.pop(), bi ];\n      } else {\n        beg = begs.pop();\n        if (beg < left) {\n          left = beg;\n          right = bi;\n        }\n\n        bi = str.indexOf(b, i + 1);\n      }\n\n      i = ai < bi && ai >= 0 ? ai : bi;\n    }\n\n    if (begs.length) {\n      result = [ left, right ];\n    }\n  }\n\n  return result;\n}\n","try {\n  var util = require('util');\n  if (typeof util.inherits !== 'function') throw '';\n  module.exports = util.inherits;\n} catch (e) {\n  module.exports = require('./inherits_browser.js');\n}\n","module.exports = require(\"util\");","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n","module.exports = require(\"events\");","module.exports = require(\"assert\");","'use strict';\n\nfunction posix(path) {\n\treturn path.charAt(0) === '/';\n}\n\nfunction win32(path) {\n\t// https://github.com/nodejs/node/blob/b3fcc245fb25539909ef1d5eaa01dbf92e168633/lib/path.js#L56\n\tvar splitDeviceRe = /^([a-zA-Z]:|[\\\\\\/]{2}[^\\\\\\/]+[\\\\\\/]+[^\\\\\\/]+)?([\\\\\\/])?([\\s\\S]*?)$/;\n\tvar result = splitDeviceRe.exec(path);\n\tvar device = result[1] || '';\n\tvar isUnc = Boolean(device && device.charAt(1) !== ':');\n\n\t// UNC paths are always absolute\n\treturn Boolean(result[2] || isUnc);\n}\n\nmodule.exports = process.platform === 'win32' ? win32 : posix;\nmodule.exports.posix = posix;\nmodule.exports.win32 = win32;\n","module.exports = globSync\nglobSync.GlobSync = GlobSync\n\nvar fs = require('fs')\nvar rp = require('fs.realpath')\nvar minimatch = require('minimatch')\nvar Minimatch = minimatch.Minimatch\nvar Glob = require('./glob.js').Glob\nvar util = require('util')\nvar path = require('path')\nvar assert = require('assert')\nvar isAbsolute = require('path-is-absolute')\nvar common = require('./common.js')\nvar alphasort = common.alphasort\nvar alphasorti = common.alphasorti\nvar setopts = common.setopts\nvar ownProp = common.ownProp\nvar childrenIgnored = common.childrenIgnored\nvar isIgnored = common.isIgnored\n\nfunction globSync (pattern, options) {\n  if (typeof options === 'function' || arguments.length === 3)\n    throw new TypeError('callback provided to sync glob\\n'+\n                        'See: https://github.com/isaacs/node-glob/issues/167')\n\n  return new GlobSync(pattern, options).found\n}\n\nfunction GlobSync (pattern, options) {\n  if (!pattern)\n    throw new Error('must provide pattern')\n\n  if (typeof options === 'function' || arguments.length === 3)\n    throw new TypeError('callback provided to sync glob\\n'+\n                        'See: https://github.com/isaacs/node-glob/issues/167')\n\n  if (!(this instanceof GlobSync))\n    return new GlobSync(pattern, options)\n\n  setopts(this, pattern, options)\n\n  if (this.noprocess)\n    return this\n\n  var n = this.minimatch.set.length\n  this.matches = new Array(n)\n  for (var i = 0; i < n; i ++) {\n    this._process(this.minimatch.set[i], i, false)\n  }\n  this._finish()\n}\n\nGlobSync.prototype._finish = function () {\n  assert(this instanceof GlobSync)\n  if (this.realpath) {\n    var self = this\n    this.matches.forEach(function (matchset, index) {\n      var set = self.matches[index] = Object.create(null)\n      for (var p in matchset) {\n        try {\n          p = self._makeAbs(p)\n          var real = rp.realpathSync(p, self.realpathCache)\n          set[real] = true\n        } catch (er) {\n          if (er.syscall === 'stat')\n            set[self._makeAbs(p)] = true\n          else\n            throw er\n        }\n      }\n    })\n  }\n  common.finish(this)\n}\n\n\nGlobSync.prototype._process = function (pattern, index, inGlobStar) {\n  assert(this instanceof GlobSync)\n\n  // Get the first [n] parts of pattern that are all strings.\n  var n = 0\n  while (typeof pattern[n] === 'string') {\n    n ++\n  }\n  // now n is the index of the first one that is *not* a string.\n\n  // See if there's anything else\n  var prefix\n  switch (n) {\n    // if not, then this is rather simple\n    case pattern.length:\n      this._processSimple(pattern.join('/'), index)\n      return\n\n    case 0:\n      // pattern *starts* with some non-trivial item.\n      // going to readdir(cwd), but not include the prefix in matches.\n      prefix = null\n      break\n\n    default:\n      // pattern has some string bits in the front.\n      // whatever it starts with, whether that's 'absolute' like /foo/bar,\n      // or 'relative' like '../baz'\n      prefix = pattern.slice(0, n).join('/')\n      break\n  }\n\n  var remain = pattern.slice(n)\n\n  // get the list of entries.\n  var read\n  if (prefix === null)\n    read = '.'\n  else if (isAbsolute(prefix) || isAbsolute(pattern.join('/'))) {\n    if (!prefix || !isAbsolute(prefix))\n      prefix = '/' + prefix\n    read = prefix\n  } else\n    read = prefix\n\n  var abs = this._makeAbs(read)\n\n  //if ignored, skip processing\n  if (childrenIgnored(this, read))\n    return\n\n  var isGlobStar = remain[0] === minimatch.GLOBSTAR\n  if (isGlobStar)\n    this._processGlobStar(prefix, read, abs, remain, index, inGlobStar)\n  else\n    this._processReaddir(prefix, read, abs, remain, index, inGlobStar)\n}\n\n\nGlobSync.prototype._processReaddir = function (prefix, read, abs, remain, index, inGlobStar) {\n  var entries = this._readdir(abs, inGlobStar)\n\n  // if the abs isn't a dir, then nothing can match!\n  if (!entries)\n    return\n\n  // It will only match dot entries if it starts with a dot, or if\n  // dot is set.  Stuff like @(.foo|.bar) isn't allowed.\n  var pn = remain[0]\n  var negate = !!this.minimatch.negate\n  var rawGlob = pn._glob\n  var dotOk = this.dot || rawGlob.charAt(0) === '.'\n\n  var matchedEntries = []\n  for (var i = 0; i < entries.length; i++) {\n    var e = entries[i]\n    if (e.charAt(0) !== '.' || dotOk) {\n      var m\n      if (negate && !prefix) {\n        m = !e.match(pn)\n      } else {\n        m = e.match(pn)\n      }\n      if (m)\n        matchedEntries.push(e)\n    }\n  }\n\n  var len = matchedEntries.length\n  // If there are no matched entries, then nothing matches.\n  if (len === 0)\n    return\n\n  // if this is the last remaining pattern bit, then no need for\n  // an additional stat *unless* the user has specified mark or\n  // stat explicitly.  We know they exist, since readdir returned\n  // them.\n\n  if (remain.length === 1 && !this.mark && !this.stat) {\n    if (!this.matches[index])\n      this.matches[index] = Object.create(null)\n\n    for (var i = 0; i < len; i ++) {\n      var e = matchedEntries[i]\n      if (prefix) {\n        if (prefix.slice(-1) !== '/')\n          e = prefix + '/' + e\n        else\n          e = prefix + e\n      }\n\n      if (e.charAt(0) === '/' && !this.nomount) {\n        e = path.join(this.root, e)\n      }\n      this._emitMatch(index, e)\n    }\n    // This was the last one, and no stats were needed\n    return\n  }\n\n  // now test all matched entries as stand-ins for that part\n  // of the pattern.\n  remain.shift()\n  for (var i = 0; i < len; i ++) {\n    var e = matchedEntries[i]\n    var newPattern\n    if (prefix)\n      newPattern = [prefix, e]\n    else\n      newPattern = [e]\n    this._process(newPattern.concat(remain), index, inGlobStar)\n  }\n}\n\n\nGlobSync.prototype._emitMatch = function (index, e) {\n  if (isIgnored(this, e))\n    return\n\n  var abs = this._makeAbs(e)\n\n  if (this.mark)\n    e = this._mark(e)\n\n  if (this.absolute) {\n    e = abs\n  }\n\n  if (this.matches[index][e])\n    return\n\n  if (this.nodir) {\n    var c = this.cache[abs]\n    if (c === 'DIR' || Array.isArray(c))\n      return\n  }\n\n  this.matches[index][e] = true\n\n  if (this.stat)\n    this._stat(e)\n}\n\n\nGlobSync.prototype._readdirInGlobStar = function (abs) {\n  // follow all symlinked directories forever\n  // just proceed as if this is a non-globstar situation\n  if (this.follow)\n    return this._readdir(abs, false)\n\n  var entries\n  var lstat\n  var stat\n  try {\n    lstat = fs.lstatSync(abs)\n  } catch (er) {\n    if (er.code === 'ENOENT') {\n      // lstat failed, doesn't exist\n      return null\n    }\n  }\n\n  var isSym = lstat && lstat.isSymbolicLink()\n  this.symlinks[abs] = isSym\n\n  // If it's not a symlink or a dir, then it's definitely a regular file.\n  // don't bother doing a readdir in that case.\n  if (!isSym && lstat && !lstat.isDirectory())\n    this.cache[abs] = 'FILE'\n  else\n    entries = this._readdir(abs, false)\n\n  return entries\n}\n\nGlobSync.prototype._readdir = function (abs, inGlobStar) {\n  var entries\n\n  if (inGlobStar && !ownProp(this.symlinks, abs))\n    return this._readdirInGlobStar(abs)\n\n  if (ownProp(this.cache, abs)) {\n    var c = this.cache[abs]\n    if (!c || c === 'FILE')\n      return null\n\n    if (Array.isArray(c))\n      return c\n  }\n\n  try {\n    return this._readdirEntries(abs, fs.readdirSync(abs))\n  } catch (er) {\n    this._readdirError(abs, er)\n    return null\n  }\n}\n\nGlobSync.prototype._readdirEntries = function (abs, entries) {\n  // if we haven't asked to stat everything, then just\n  // assume that everything in there exists, so we can avoid\n  // having to stat it a second time.\n  if (!this.mark && !this.stat) {\n    for (var i = 0; i < entries.length; i ++) {\n      var e = entries[i]\n      if (abs === '/')\n        e = abs + e\n      else\n        e = abs + '/' + e\n      this.cache[e] = true\n    }\n  }\n\n  this.cache[abs] = entries\n\n  // mark and cache dir-ness\n  return entries\n}\n\nGlobSync.prototype._readdirError = function (f, er) {\n  // handle errors, and cache the information\n  switch (er.code) {\n    case 'ENOTSUP': // https://github.com/isaacs/node-glob/issues/205\n    case 'ENOTDIR': // totally normal. means it *does* exist.\n      var abs = this._makeAbs(f)\n      this.cache[abs] = 'FILE'\n      if (abs === this.cwdAbs) {\n        var error = new Error(er.code + ' invalid cwd ' + this.cwd)\n        error.path = this.cwd\n        error.code = er.code\n        throw error\n      }\n      break\n\n    case 'ENOENT': // not terribly unusual\n    case 'ELOOP':\n    case 'ENAMETOOLONG':\n    case 'UNKNOWN':\n      this.cache[this._makeAbs(f)] = false\n      break\n\n    default: // some unusual error.  Treat as failure.\n      this.cache[this._makeAbs(f)] = false\n      if (this.strict)\n        throw er\n      if (!this.silent)\n        console.error('glob error', er)\n      break\n  }\n}\n\nGlobSync.prototype._processGlobStar = function (prefix, read, abs, remain, index, inGlobStar) {\n\n  var entries = this._readdir(abs, inGlobStar)\n\n  // no entries means not a dir, so it can never have matches\n  // foo.txt/** doesn't match foo.txt\n  if (!entries)\n    return\n\n  // test without the globstar, and with every child both below\n  // and replacing the globstar.\n  var remainWithoutGlobStar = remain.slice(1)\n  var gspref = prefix ? [ prefix ] : []\n  var noGlobStar = gspref.concat(remainWithoutGlobStar)\n\n  // the noGlobStar pattern exits the inGlobStar state\n  this._process(noGlobStar, index, false)\n\n  var len = entries.length\n  var isSym = this.symlinks[abs]\n\n  // If it's a symlink, and we're in a globstar, then stop\n  if (isSym && inGlobStar)\n    return\n\n  for (var i = 0; i < len; i++) {\n    var e = entries[i]\n    if (e.charAt(0) === '.' && !this.dot)\n      continue\n\n    // these two cases enter the inGlobStar state\n    var instead = gspref.concat(entries[i], remainWithoutGlobStar)\n    this._process(instead, index, true)\n\n    var below = gspref.concat(entries[i], remain)\n    this._process(below, index, true)\n  }\n}\n\nGlobSync.prototype._processSimple = function (prefix, index) {\n  // XXX review this.  Shouldn't it be doing the mounting etc\n  // before doing stat?  kinda weird?\n  var exists = this._stat(prefix)\n\n  if (!this.matches[index])\n    this.matches[index] = Object.create(null)\n\n  // If it doesn't exist, then just mark the lack of results\n  if (!exists)\n    return\n\n  if (prefix && isAbsolute(prefix) && !this.nomount) {\n    var trail = /[\\/\\\\]$/.test(prefix)\n    if (prefix.charAt(0) === '/') {\n      prefix = path.join(this.root, prefix)\n    } else {\n      prefix = path.resolve(this.root, prefix)\n      if (trail)\n        prefix += '/'\n    }\n  }\n\n  if (process.platform === 'win32')\n    prefix = prefix.replace(/\\\\/g, '/')\n\n  // Mark this as a match\n  this._emitMatch(index, prefix)\n}\n\n// Returns either 'DIR', 'FILE', or false\nGlobSync.prototype._stat = function (f) {\n  var abs = this._makeAbs(f)\n  var needDir = f.slice(-1) === '/'\n\n  if (f.length > this.maxLength)\n    return false\n\n  if (!this.stat && ownProp(this.cache, abs)) {\n    var c = this.cache[abs]\n\n    if (Array.isArray(c))\n      c = 'DIR'\n\n    // It exists, but maybe not how we need it\n    if (!needDir || c === 'DIR')\n      return c\n\n    if (needDir && c === 'FILE')\n      return false\n\n    // otherwise we have to stat, because maybe c=true\n    // if we know it exists, but not what it is.\n  }\n\n  var exists\n  var stat = this.statCache[abs]\n  if (!stat) {\n    var lstat\n    try {\n      lstat = fs.lstatSync(abs)\n    } catch (er) {\n      if (er && (er.code === 'ENOENT' || er.code === 'ENOTDIR')) {\n        this.statCache[abs] = false\n        return false\n      }\n    }\n\n    if (lstat && lstat.isSymbolicLink()) {\n      try {\n        stat = fs.statSync(abs)\n      } catch (er) {\n        stat = lstat\n      }\n    } else {\n      stat = lstat\n    }\n  }\n\n  this.statCache[abs] = stat\n\n  var c = true\n  if (stat)\n    c = stat.isDirectory() ? 'DIR' : 'FILE'\n\n  this.cache[abs] = this.cache[abs] || c\n\n  if (needDir && c === 'FILE')\n    return false\n\n  return c\n}\n\nGlobSync.prototype._mark = function (p) {\n  return common.mark(this, p)\n}\n\nGlobSync.prototype._makeAbs = function (f) {\n  return common.makeAbs(this, f)\n}\n","exports.alphasort = alphasort\nexports.alphasorti = alphasorti\nexports.setopts = setopts\nexports.ownProp = ownProp\nexports.makeAbs = makeAbs\nexports.finish = finish\nexports.mark = mark\nexports.isIgnored = isIgnored\nexports.childrenIgnored = childrenIgnored\n\nfunction ownProp (obj, field) {\n  return Object.prototype.hasOwnProperty.call(obj, field)\n}\n\nvar path = require(\"path\")\nvar minimatch = require(\"minimatch\")\nvar isAbsolute = require(\"path-is-absolute\")\nvar Minimatch = minimatch.Minimatch\n\nfunction alphasorti (a, b) {\n  return a.toLowerCase().localeCompare(b.toLowerCase())\n}\n\nfunction alphasort (a, b) {\n  return a.localeCompare(b)\n}\n\nfunction setupIgnores (self, options) {\n  self.ignore = options.ignore || []\n\n  if (!Array.isArray(self.ignore))\n    self.ignore = [self.ignore]\n\n  if (self.ignore.length) {\n    self.ignore = self.ignore.map(ignoreMap)\n  }\n}\n\n// ignore patterns are always in dot:true mode.\nfunction ignoreMap (pattern) {\n  var gmatcher = null\n  if (pattern.slice(-3) === '/**') {\n    var gpattern = pattern.replace(/(\\/\\*\\*)+$/, '')\n    gmatcher = new Minimatch(gpattern, { dot: true })\n  }\n\n  return {\n    matcher: new Minimatch(pattern, { dot: true }),\n    gmatcher: gmatcher\n  }\n}\n\nfunction setopts (self, pattern, options) {\n  if (!options)\n    options = {}\n\n  // base-matching: just use globstar for that.\n  if (options.matchBase && -1 === pattern.indexOf(\"/\")) {\n    if (options.noglobstar) {\n      throw new Error(\"base matching requires globstar\")\n    }\n    pattern = \"**/\" + pattern\n  }\n\n  self.silent = !!options.silent\n  self.pattern = pattern\n  self.strict = options.strict !== false\n  self.realpath = !!options.realpath\n  self.realpathCache = options.realpathCache || Object.create(null)\n  self.follow = !!options.follow\n  self.dot = !!options.dot\n  self.mark = !!options.mark\n  self.nodir = !!options.nodir\n  if (self.nodir)\n    self.mark = true\n  self.sync = !!options.sync\n  self.nounique = !!options.nounique\n  self.nonull = !!options.nonull\n  self.nosort = !!options.nosort\n  self.nocase = !!options.nocase\n  self.stat = !!options.stat\n  self.noprocess = !!options.noprocess\n  self.absolute = !!options.absolute\n\n  self.maxLength = options.maxLength || Infinity\n  self.cache = options.cache || Object.create(null)\n  self.statCache = options.statCache || Object.create(null)\n  self.symlinks = options.symlinks || Object.create(null)\n\n  setupIgnores(self, options)\n\n  self.changedCwd = false\n  var cwd = process.cwd()\n  if (!ownProp(options, \"cwd\"))\n    self.cwd = cwd\n  else {\n    self.cwd = path.resolve(options.cwd)\n    self.changedCwd = self.cwd !== cwd\n  }\n\n  self.root = options.root || path.resolve(self.cwd, \"/\")\n  self.root = path.resolve(self.root)\n  if (process.platform === \"win32\")\n    self.root = self.root.replace(/\\\\/g, \"/\")\n\n  // TODO: is an absolute `cwd` supposed to be resolved against `root`?\n  // e.g. { cwd: '/test', root: __dirname } === path.join(__dirname, '/test')\n  self.cwdAbs = isAbsolute(self.cwd) ? self.cwd : makeAbs(self, self.cwd)\n  if (process.platform === \"win32\")\n    self.cwdAbs = self.cwdAbs.replace(/\\\\/g, \"/\")\n  self.nomount = !!options.nomount\n\n  // disable comments and negation in Minimatch.\n  // Note that they are not supported in Glob itself anyway.\n  options.nonegate = true\n  options.nocomment = true\n\n  self.minimatch = new Minimatch(pattern, options)\n  self.options = self.minimatch.options\n}\n\nfunction finish (self) {\n  var nou = self.nounique\n  var all = nou ? [] : Object.create(null)\n\n  for (var i = 0, l = self.matches.length; i < l; i ++) {\n    var matches = self.matches[i]\n    if (!matches || Object.keys(matches).length === 0) {\n      if (self.nonull) {\n        // do like the shell, and spit out the literal glob\n        var literal = self.minimatch.globSet[i]\n        if (nou)\n          all.push(literal)\n        else\n          all[literal] = true\n      }\n    } else {\n      // had matches\n      var m = Object.keys(matches)\n      if (nou)\n        all.push.apply(all, m)\n      else\n        m.forEach(function (m) {\n          all[m] = true\n        })\n    }\n  }\n\n  if (!nou)\n    all = Object.keys(all)\n\n  if (!self.nosort)\n    all = all.sort(self.nocase ? alphasorti : alphasort)\n\n  // at *some* point we statted all of these\n  if (self.mark) {\n    for (var i = 0; i < all.length; i++) {\n      all[i] = self._mark(all[i])\n    }\n    if (self.nodir) {\n      all = all.filter(function (e) {\n        var notDir = !(/\\/$/.test(e))\n        var c = self.cache[e] || self.cache[makeAbs(self, e)]\n        if (notDir && c)\n          notDir = c !== 'DIR' && !Array.isArray(c)\n        return notDir\n      })\n    }\n  }\n\n  if (self.ignore.length)\n    all = all.filter(function(m) {\n      return !isIgnored(self, m)\n    })\n\n  self.found = all\n}\n\nfunction mark (self, p) {\n  var abs = makeAbs(self, p)\n  var c = self.cache[abs]\n  var m = p\n  if (c) {\n    var isDir = c === 'DIR' || Array.isArray(c)\n    var slash = p.slice(-1) === '/'\n\n    if (isDir && !slash)\n      m += '/'\n    else if (!isDir && slash)\n      m = m.slice(0, -1)\n\n    if (m !== p) {\n      var mabs = makeAbs(self, m)\n      self.statCache[mabs] = self.statCache[abs]\n      self.cache[mabs] = self.cache[abs]\n    }\n  }\n\n  return m\n}\n\n// lotta situps...\nfunction makeAbs (self, f) {\n  var abs = f\n  if (f.charAt(0) === '/') {\n    abs = path.join(self.root, f)\n  } else if (isAbsolute(f) || f === '') {\n    abs = f\n  } else if (self.changedCwd) {\n    abs = path.resolve(self.cwd, f)\n  } else {\n    abs = path.resolve(f)\n  }\n\n  if (process.platform === 'win32')\n    abs = abs.replace(/\\\\/g, '/')\n\n  return abs\n}\n\n\n// Return true, if pattern ends with globstar '**', for the accompanying parent directory.\n// Ex:- If node_modules/** is the pattern, add 'node_modules' to ignore list along with it's contents\nfunction isIgnored (self, path) {\n  if (!self.ignore.length)\n    return false\n\n  return self.ignore.some(function(item) {\n    return item.matcher.match(path) || !!(item.gmatcher && item.gmatcher.match(path))\n  })\n}\n\nfunction childrenIgnored (self, path) {\n  if (!self.ignore.length)\n    return false\n\n  return self.ignore.some(function(item) {\n    return !!(item.gmatcher && item.gmatcher.match(path))\n  })\n}\n","var wrappy = require('wrappy')\nvar reqs = Object.create(null)\nvar once = require('once')\n\nmodule.exports = wrappy(inflight)\n\nfunction inflight (key, cb) {\n  if (reqs[key]) {\n    reqs[key].push(cb)\n    return null\n  } else {\n    reqs[key] = [cb]\n    return makeres(key)\n  }\n}\n\nfunction makeres (key) {\n  return once(function RES () {\n    var cbs = reqs[key]\n    var len = cbs.length\n    var args = slice(arguments)\n\n    // XXX It's somewhat ambiguous whether a new callback added in this\n    // pass should be queued for later execution if something in the\n    // list of callbacks throws, or if it should just be discarded.\n    // However, it's such an edge case that it hardly matters, and either\n    // choice is likely as surprising as the other.\n    // As it happens, we do go ahead and schedule it for later execution.\n    try {\n      for (var i = 0; i < len; i++) {\n        cbs[i].apply(null, args)\n      }\n    } finally {\n      if (cbs.length > len) {\n        // added more in the interim.\n        // de-zalgo, just in case, but don't call again.\n        cbs.splice(0, len)\n        process.nextTick(function () {\n          RES.apply(null, args)\n        })\n      } else {\n        delete reqs[key]\n      }\n    }\n  })\n}\n\nfunction slice (args) {\n  var length = args.length\n  var array = []\n\n  for (var i = 0; i < length; i++) array[i] = args[i]\n  return array\n}\n","// Returns a wrapper function that returns a wrapped callback\n// The wrapper function should do some stuff, and return a\n// presumably different callback function.\n// This makes sure that own properties are retained, so that\n// decorations and such are not lost along the way.\nmodule.exports = wrappy\nfunction wrappy (fn, cb) {\n  if (fn && cb) return wrappy(fn)(cb)\n\n  if (typeof fn !== 'function')\n    throw new TypeError('need wrapper function')\n\n  Object.keys(fn).forEach(function (k) {\n    wrapper[k] = fn[k]\n  })\n\n  return wrapper\n\n  function wrapper() {\n    var args = new Array(arguments.length)\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i]\n    }\n    var ret = fn.apply(this, args)\n    var cb = args[args.length-1]\n    if (typeof ret === 'function' && ret !== cb) {\n      Object.keys(cb).forEach(function (k) {\n        ret[k] = cb[k]\n      })\n    }\n    return ret\n  }\n}\n","var wrappy = require('wrappy')\nmodule.exports = wrappy(once)\nmodule.exports.strict = wrappy(onceStrict)\n\nonce.proto = once(function () {\n  Object.defineProperty(Function.prototype, 'once', {\n    value: function () {\n      return once(this)\n    },\n    configurable: true\n  })\n\n  Object.defineProperty(Function.prototype, 'onceStrict', {\n    value: function () {\n      return onceStrict(this)\n    },\n    configurable: true\n  })\n})\n\nfunction once (fn) {\n  var f = function () {\n    if (f.called) return f.value\n    f.called = true\n    return f.value = fn.apply(this, arguments)\n  }\n  f.called = false\n  return f\n}\n\nfunction onceStrict (fn) {\n  var f = function () {\n    if (f.called)\n      throw new Error(f.onceError)\n    f.called = true\n    return f.value = fn.apply(this, arguments)\n  }\n  var name = fn.name || 'Function wrapped with `once`'\n  f.onceError = name + \" shouldn't be called more than once\"\n  f.called = false\n  return f\n}\n","var upperCase = require('upper-case')\nvar noCase = require('no-case')\n\n/**\n * Camel case a string.\n *\n * @param  {string} value\n * @param  {string} [locale]\n * @return {string}\n */\nmodule.exports = function (value, locale, mergeNumbers) {\n  var result = noCase(value, locale)\n\n  // Replace periods between numeric entities with an underscore.\n  if (!mergeNumbers) {\n    result = result.replace(/ (?=\\d)/g, '_')\n  }\n\n  // Replace spaces between words with an upper cased character.\n  return result.replace(/ (.)/g, function (m, $1) {\n    return upperCase($1, locale)\n  })\n}\n","/**\n * Special language-specific overrides.\n *\n * Source: ftp://ftp.unicode.org/Public/UCD/latest/ucd/SpecialCasing.txt\n *\n * @type {Object}\n */\nvar LANGUAGES = {\n  tr: {\n    regexp: /[\\u0069]/g,\n    map: {\n      '\\u0069': '\\u0130'\n    }\n  },\n  az: {\n    regexp: /[\\u0069]/g,\n    map: {\n      '\\u0069': '\\u0130'\n    }\n  },\n  lt: {\n    regexp: /[\\u0069\\u006A\\u012F]\\u0307|\\u0069\\u0307[\\u0300\\u0301\\u0303]/g,\n    map: {\n      '\\u0069\\u0307': '\\u0049',\n      '\\u006A\\u0307': '\\u004A',\n      '\\u012F\\u0307': '\\u012E',\n      '\\u0069\\u0307\\u0300': '\\u00CC',\n      '\\u0069\\u0307\\u0301': '\\u00CD',\n      '\\u0069\\u0307\\u0303': '\\u0128'\n    }\n  }\n}\n\n/**\n * Upper case a string.\n *\n * @param  {String} str\n * @return {String}\n */\nmodule.exports = function (str, locale) {\n  var lang = LANGUAGES[locale]\n\n  str = str == null ? '' : String(str)\n\n  if (lang) {\n    str = str.replace(lang.regexp, function (m) { return lang.map[m] })\n  }\n\n  return str.toUpperCase()\n}\n","var lowerCase = require('lower-case')\n\nvar NON_WORD_REGEXP = require('./vendor/non-word-regexp')\nvar CAMEL_CASE_REGEXP = require('./vendor/camel-case-regexp')\nvar CAMEL_CASE_UPPER_REGEXP = require('./vendor/camel-case-upper-regexp')\n\n/**\n * Sentence case a string.\n *\n * @param  {string} str\n * @param  {string} locale\n * @param  {string} replacement\n * @return {string}\n */\nmodule.exports = function (str, locale, replacement) {\n  if (str == null) {\n    return ''\n  }\n\n  replacement = typeof replacement !== 'string' ? ' ' : replacement\n\n  function replace (match, index, value) {\n    if (index === 0 || index === (value.length - match.length)) {\n      return ''\n    }\n\n    return replacement\n  }\n\n  str = String(str)\n    // Support camel case (\"camelCase\" -> \"camel Case\").\n    .replace(CAMEL_CASE_REGEXP, '$1 $2')\n    // Support odd camel case (\"CAMELCase\" -> \"CAMEL Case\").\n    .replace(CAMEL_CASE_UPPER_REGEXP, '$1 $2')\n    // Remove all non-word characters and replace with a single space.\n    .replace(NON_WORD_REGEXP, replace)\n\n  // Lower case the entire string.\n  return lowerCase(str, locale)\n}\n","/**\n * Special language-specific overrides.\n *\n * Source: ftp://ftp.unicode.org/Public/UCD/latest/ucd/SpecialCasing.txt\n *\n * @type {Object}\n */\nvar LANGUAGES = {\n  tr: {\n    regexp: /\\u0130|\\u0049|\\u0049\\u0307/g,\n    map: {\n      '\\u0130': '\\u0069',\n      '\\u0049': '\\u0131',\n      '\\u0049\\u0307': '\\u0069'\n    }\n  },\n  az: {\n    regexp: /[\\u0130]/g,\n    map: {\n      '\\u0130': '\\u0069',\n      '\\u0049': '\\u0131',\n      '\\u0049\\u0307': '\\u0069'\n    }\n  },\n  lt: {\n    regexp: /[\\u0049\\u004A\\u012E\\u00CC\\u00CD\\u0128]/g,\n    map: {\n      '\\u0049': '\\u0069\\u0307',\n      '\\u004A': '\\u006A\\u0307',\n      '\\u012E': '\\u012F\\u0307',\n      '\\u00CC': '\\u0069\\u0307\\u0300',\n      '\\u00CD': '\\u0069\\u0307\\u0301',\n      '\\u0128': '\\u0069\\u0307\\u0303'\n    }\n  }\n}\n\n/**\n * Lowercase a string.\n *\n * @param  {String} str\n * @return {String}\n */\nmodule.exports = function (str, locale) {\n  var lang = LANGUAGES[locale]\n\n  str = str == null ? '' : String(str)\n\n  if (lang) {\n    str = str.replace(lang.regexp, function (m) { return lang.map[m] })\n  }\n\n  return str.toLowerCase()\n}\n","module.exports = /[^A-Za-z\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0-\\u08B4\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16F1-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2183\\u2184\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005\\u3006\\u3031-\\u3035\\u303B\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6E5\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AD\\uA7B0-\\uA7B7\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC0-9\\xB2\\xB3\\xB9\\xBC-\\xBE\\u0660-\\u0669\\u06F0-\\u06F9\\u07C0-\\u07C9\\u0966-\\u096F\\u09E6-\\u09EF\\u09F4-\\u09F9\\u0A66-\\u0A6F\\u0AE6-\\u0AEF\\u0B66-\\u0B6F\\u0B72-\\u0B77\\u0BE6-\\u0BF2\\u0C66-\\u0C6F\\u0C78-\\u0C7E\\u0CE6-\\u0CEF\\u0D66-\\u0D75\\u0DE6-\\u0DEF\\u0E50-\\u0E59\\u0ED0-\\u0ED9\\u0F20-\\u0F33\\u1040-\\u1049\\u1090-\\u1099\\u1369-\\u137C\\u16EE-\\u16F0\\u17E0-\\u17E9\\u17F0-\\u17F9\\u1810-\\u1819\\u1946-\\u194F\\u19D0-\\u19DA\\u1A80-\\u1A89\\u1A90-\\u1A99\\u1B50-\\u1B59\\u1BB0-\\u1BB9\\u1C40-\\u1C49\\u1C50-\\u1C59\\u2070\\u2074-\\u2079\\u2080-\\u2089\\u2150-\\u2182\\u2185-\\u2189\\u2460-\\u249B\\u24EA-\\u24FF\\u2776-\\u2793\\u2CFD\\u3007\\u3021-\\u3029\\u3038-\\u303A\\u3192-\\u3195\\u3220-\\u3229\\u3248-\\u324F\\u3251-\\u325F\\u3280-\\u3289\\u32B1-\\u32BF\\uA620-\\uA629\\uA6E6-\\uA6EF\\uA830-\\uA835\\uA8D0-\\uA8D9\\uA900-\\uA909\\uA9D0-\\uA9D9\\uA9F0-\\uA9F9\\uAA50-\\uAA59\\uABF0-\\uABF9\\uFF10-\\uFF19]+/g\n","module.exports = /([a-z\\xB5\\xDF-\\xF6\\xF8-\\xFF\\u0101\\u0103\\u0105\\u0107\\u0109\\u010B\\u010D\\u010F\\u0111\\u0113\\u0115\\u0117\\u0119\\u011B\\u011D\\u011F\\u0121\\u0123\\u0125\\u0127\\u0129\\u012B\\u012D\\u012F\\u0131\\u0133\\u0135\\u0137\\u0138\\u013A\\u013C\\u013E\\u0140\\u0142\\u0144\\u0146\\u0148\\u0149\\u014B\\u014D\\u014F\\u0151\\u0153\\u0155\\u0157\\u0159\\u015B\\u015D\\u015F\\u0161\\u0163\\u0165\\u0167\\u0169\\u016B\\u016D\\u016F\\u0171\\u0173\\u0175\\u0177\\u017A\\u017C\\u017E-\\u0180\\u0183\\u0185\\u0188\\u018C\\u018D\\u0192\\u0195\\u0199-\\u019B\\u019E\\u01A1\\u01A3\\u01A5\\u01A8\\u01AA\\u01AB\\u01AD\\u01B0\\u01B4\\u01B6\\u01B9\\u01BA\\u01BD-\\u01BF\\u01C6\\u01C9\\u01CC\\u01CE\\u01D0\\u01D2\\u01D4\\u01D6\\u01D8\\u01DA\\u01DC\\u01DD\\u01DF\\u01E1\\u01E3\\u01E5\\u01E7\\u01E9\\u01EB\\u01ED\\u01EF\\u01F0\\u01F3\\u01F5\\u01F9\\u01FB\\u01FD\\u01FF\\u0201\\u0203\\u0205\\u0207\\u0209\\u020B\\u020D\\u020F\\u0211\\u0213\\u0215\\u0217\\u0219\\u021B\\u021D\\u021F\\u0221\\u0223\\u0225\\u0227\\u0229\\u022B\\u022D\\u022F\\u0231\\u0233-\\u0239\\u023C\\u023F\\u0240\\u0242\\u0247\\u0249\\u024B\\u024D\\u024F-\\u0293\\u0295-\\u02AF\\u0371\\u0373\\u0377\\u037B-\\u037D\\u0390\\u03AC-\\u03CE\\u03D0\\u03D1\\u03D5-\\u03D7\\u03D9\\u03DB\\u03DD\\u03DF\\u03E1\\u03E3\\u03E5\\u03E7\\u03E9\\u03EB\\u03ED\\u03EF-\\u03F3\\u03F5\\u03F8\\u03FB\\u03FC\\u0430-\\u045F\\u0461\\u0463\\u0465\\u0467\\u0469\\u046B\\u046D\\u046F\\u0471\\u0473\\u0475\\u0477\\u0479\\u047B\\u047D\\u047F\\u0481\\u048B\\u048D\\u048F\\u0491\\u0493\\u0495\\u0497\\u0499\\u049B\\u049D\\u049F\\u04A1\\u04A3\\u04A5\\u04A7\\u04A9\\u04AB\\u04AD\\u04AF\\u04B1\\u04B3\\u04B5\\u04B7\\u04B9\\u04BB\\u04BD\\u04BF\\u04C2\\u04C4\\u04C6\\u04C8\\u04CA\\u04CC\\u04CE\\u04CF\\u04D1\\u04D3\\u04D5\\u04D7\\u04D9\\u04DB\\u04DD\\u04DF\\u04E1\\u04E3\\u04E5\\u04E7\\u04E9\\u04EB\\u04ED\\u04EF\\u04F1\\u04F3\\u04F5\\u04F7\\u04F9\\u04FB\\u04FD\\u04FF\\u0501\\u0503\\u0505\\u0507\\u0509\\u050B\\u050D\\u050F\\u0511\\u0513\\u0515\\u0517\\u0519\\u051B\\u051D\\u051F\\u0521\\u0523\\u0525\\u0527\\u0529\\u052B\\u052D\\u052F\\u0561-\\u0587\\u13F8-\\u13FD\\u1D00-\\u1D2B\\u1D6B-\\u1D77\\u1D79-\\u1D9A\\u1E01\\u1E03\\u1E05\\u1E07\\u1E09\\u1E0B\\u1E0D\\u1E0F\\u1E11\\u1E13\\u1E15\\u1E17\\u1E19\\u1E1B\\u1E1D\\u1E1F\\u1E21\\u1E23\\u1E25\\u1E27\\u1E29\\u1E2B\\u1E2D\\u1E2F\\u1E31\\u1E33\\u1E35\\u1E37\\u1E39\\u1E3B\\u1E3D\\u1E3F\\u1E41\\u1E43\\u1E45\\u1E47\\u1E49\\u1E4B\\u1E4D\\u1E4F\\u1E51\\u1E53\\u1E55\\u1E57\\u1E59\\u1E5B\\u1E5D\\u1E5F\\u1E61\\u1E63\\u1E65\\u1E67\\u1E69\\u1E6B\\u1E6D\\u1E6F\\u1E71\\u1E73\\u1E75\\u1E77\\u1E79\\u1E7B\\u1E7D\\u1E7F\\u1E81\\u1E83\\u1E85\\u1E87\\u1E89\\u1E8B\\u1E8D\\u1E8F\\u1E91\\u1E93\\u1E95-\\u1E9D\\u1E9F\\u1EA1\\u1EA3\\u1EA5\\u1EA7\\u1EA9\\u1EAB\\u1EAD\\u1EAF\\u1EB1\\u1EB3\\u1EB5\\u1EB7\\u1EB9\\u1EBB\\u1EBD\\u1EBF\\u1EC1\\u1EC3\\u1EC5\\u1EC7\\u1EC9\\u1ECB\\u1ECD\\u1ECF\\u1ED1\\u1ED3\\u1ED5\\u1ED7\\u1ED9\\u1EDB\\u1EDD\\u1EDF\\u1EE1\\u1EE3\\u1EE5\\u1EE7\\u1EE9\\u1EEB\\u1EED\\u1EEF\\u1EF1\\u1EF3\\u1EF5\\u1EF7\\u1EF9\\u1EFB\\u1EFD\\u1EFF-\\u1F07\\u1F10-\\u1F15\\u1F20-\\u1F27\\u1F30-\\u1F37\\u1F40-\\u1F45\\u1F50-\\u1F57\\u1F60-\\u1F67\\u1F70-\\u1F7D\\u1F80-\\u1F87\\u1F90-\\u1F97\\u1FA0-\\u1FA7\\u1FB0-\\u1FB4\\u1FB6\\u1FB7\\u1FBE\\u1FC2-\\u1FC4\\u1FC6\\u1FC7\\u1FD0-\\u1FD3\\u1FD6\\u1FD7\\u1FE0-\\u1FE7\\u1FF2-\\u1FF4\\u1FF6\\u1FF7\\u210A\\u210E\\u210F\\u2113\\u212F\\u2134\\u2139\\u213C\\u213D\\u2146-\\u2149\\u214E\\u2184\\u2C30-\\u2C5E\\u2C61\\u2C65\\u2C66\\u2C68\\u2C6A\\u2C6C\\u2C71\\u2C73\\u2C74\\u2C76-\\u2C7B\\u2C81\\u2C83\\u2C85\\u2C87\\u2C89\\u2C8B\\u2C8D\\u2C8F\\u2C91\\u2C93\\u2C95\\u2C97\\u2C99\\u2C9B\\u2C9D\\u2C9F\\u2CA1\\u2CA3\\u2CA5\\u2CA7\\u2CA9\\u2CAB\\u2CAD\\u2CAF\\u2CB1\\u2CB3\\u2CB5\\u2CB7\\u2CB9\\u2CBB\\u2CBD\\u2CBF\\u2CC1\\u2CC3\\u2CC5\\u2CC7\\u2CC9\\u2CCB\\u2CCD\\u2CCF\\u2CD1\\u2CD3\\u2CD5\\u2CD7\\u2CD9\\u2CDB\\u2CDD\\u2CDF\\u2CE1\\u2CE3\\u2CE4\\u2CEC\\u2CEE\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\uA641\\uA643\\uA645\\uA647\\uA649\\uA64B\\uA64D\\uA64F\\uA651\\uA653\\uA655\\uA657\\uA659\\uA65B\\uA65D\\uA65F\\uA661\\uA663\\uA665\\uA667\\uA669\\uA66B\\uA66D\\uA681\\uA683\\uA685\\uA687\\uA689\\uA68B\\uA68D\\uA68F\\uA691\\uA693\\uA695\\uA697\\uA699\\uA69B\\uA723\\uA725\\uA727\\uA729\\uA72B\\uA72D\\uA72F-\\uA731\\uA733\\uA735\\uA737\\uA739\\uA73B\\uA73D\\uA73F\\uA741\\uA743\\uA745\\uA747\\uA749\\uA74B\\uA74D\\uA74F\\uA751\\uA753\\uA755\\uA757\\uA759\\uA75B\\uA75D\\uA75F\\uA761\\uA763\\uA765\\uA767\\uA769\\uA76B\\uA76D\\uA76F\\uA771-\\uA778\\uA77A\\uA77C\\uA77F\\uA781\\uA783\\uA785\\uA787\\uA78C\\uA78E\\uA791\\uA793-\\uA795\\uA797\\uA799\\uA79B\\uA79D\\uA79F\\uA7A1\\uA7A3\\uA7A5\\uA7A7\\uA7A9\\uA7B5\\uA7B7\\uA7FA\\uAB30-\\uAB5A\\uAB60-\\uAB65\\uAB70-\\uABBF\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFF41-\\uFF5A0-9\\xB2\\xB3\\xB9\\xBC-\\xBE\\u0660-\\u0669\\u06F0-\\u06F9\\u07C0-\\u07C9\\u0966-\\u096F\\u09E6-\\u09EF\\u09F4-\\u09F9\\u0A66-\\u0A6F\\u0AE6-\\u0AEF\\u0B66-\\u0B6F\\u0B72-\\u0B77\\u0BE6-\\u0BF2\\u0C66-\\u0C6F\\u0C78-\\u0C7E\\u0CE6-\\u0CEF\\u0D66-\\u0D75\\u0DE6-\\u0DEF\\u0E50-\\u0E59\\u0ED0-\\u0ED9\\u0F20-\\u0F33\\u1040-\\u1049\\u1090-\\u1099\\u1369-\\u137C\\u16EE-\\u16F0\\u17E0-\\u17E9\\u17F0-\\u17F9\\u1810-\\u1819\\u1946-\\u194F\\u19D0-\\u19DA\\u1A80-\\u1A89\\u1A90-\\u1A99\\u1B50-\\u1B59\\u1BB0-\\u1BB9\\u1C40-\\u1C49\\u1C50-\\u1C59\\u2070\\u2074-\\u2079\\u2080-\\u2089\\u2150-\\u2182\\u2185-\\u2189\\u2460-\\u249B\\u24EA-\\u24FF\\u2776-\\u2793\\u2CFD\\u3007\\u3021-\\u3029\\u3038-\\u303A\\u3192-\\u3195\\u3220-\\u3229\\u3248-\\u324F\\u3251-\\u325F\\u3280-\\u3289\\u32B1-\\u32BF\\uA620-\\uA629\\uA6E6-\\uA6EF\\uA830-\\uA835\\uA8D0-\\uA8D9\\uA900-\\uA909\\uA9D0-\\uA9D9\\uA9F0-\\uA9F9\\uAA50-\\uAA59\\uABF0-\\uABF9\\uFF10-\\uFF19])([A-Z\\xC0-\\xD6\\xD8-\\xDE\\u0100\\u0102\\u0104\\u0106\\u0108\\u010A\\u010C\\u010E\\u0110\\u0112\\u0114\\u0116\\u0118\\u011A\\u011C\\u011E\\u0120\\u0122\\u0124\\u0126\\u0128\\u012A\\u012C\\u012E\\u0130\\u0132\\u0134\\u0136\\u0139\\u013B\\u013D\\u013F\\u0141\\u0143\\u0145\\u0147\\u014A\\u014C\\u014E\\u0150\\u0152\\u0154\\u0156\\u0158\\u015A\\u015C\\u015E\\u0160\\u0162\\u0164\\u0166\\u0168\\u016A\\u016C\\u016E\\u0170\\u0172\\u0174\\u0176\\u0178\\u0179\\u017B\\u017D\\u0181\\u0182\\u0184\\u0186\\u0187\\u0189-\\u018B\\u018E-\\u0191\\u0193\\u0194\\u0196-\\u0198\\u019C\\u019D\\u019F\\u01A0\\u01A2\\u01A4\\u01A6\\u01A7\\u01A9\\u01AC\\u01AE\\u01AF\\u01B1-\\u01B3\\u01B5\\u01B7\\u01B8\\u01BC\\u01C4\\u01C7\\u01CA\\u01CD\\u01CF\\u01D1\\u01D3\\u01D5\\u01D7\\u01D9\\u01DB\\u01DE\\u01E0\\u01E2\\u01E4\\u01E6\\u01E8\\u01EA\\u01EC\\u01EE\\u01F1\\u01F4\\u01F6-\\u01F8\\u01FA\\u01FC\\u01FE\\u0200\\u0202\\u0204\\u0206\\u0208\\u020A\\u020C\\u020E\\u0210\\u0212\\u0214\\u0216\\u0218\\u021A\\u021C\\u021E\\u0220\\u0222\\u0224\\u0226\\u0228\\u022A\\u022C\\u022E\\u0230\\u0232\\u023A\\u023B\\u023D\\u023E\\u0241\\u0243-\\u0246\\u0248\\u024A\\u024C\\u024E\\u0370\\u0372\\u0376\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E\\u038F\\u0391-\\u03A1\\u03A3-\\u03AB\\u03CF\\u03D2-\\u03D4\\u03D8\\u03DA\\u03DC\\u03DE\\u03E0\\u03E2\\u03E4\\u03E6\\u03E8\\u03EA\\u03EC\\u03EE\\u03F4\\u03F7\\u03F9\\u03FA\\u03FD-\\u042F\\u0460\\u0462\\u0464\\u0466\\u0468\\u046A\\u046C\\u046E\\u0470\\u0472\\u0474\\u0476\\u0478\\u047A\\u047C\\u047E\\u0480\\u048A\\u048C\\u048E\\u0490\\u0492\\u0494\\u0496\\u0498\\u049A\\u049C\\u049E\\u04A0\\u04A2\\u04A4\\u04A6\\u04A8\\u04AA\\u04AC\\u04AE\\u04B0\\u04B2\\u04B4\\u04B6\\u04B8\\u04BA\\u04BC\\u04BE\\u04C0\\u04C1\\u04C3\\u04C5\\u04C7\\u04C9\\u04CB\\u04CD\\u04D0\\u04D2\\u04D4\\u04D6\\u04D8\\u04DA\\u04DC\\u04DE\\u04E0\\u04E2\\u04E4\\u04E6\\u04E8\\u04EA\\u04EC\\u04EE\\u04F0\\u04F2\\u04F4\\u04F6\\u04F8\\u04FA\\u04FC\\u04FE\\u0500\\u0502\\u0504\\u0506\\u0508\\u050A\\u050C\\u050E\\u0510\\u0512\\u0514\\u0516\\u0518\\u051A\\u051C\\u051E\\u0520\\u0522\\u0524\\u0526\\u0528\\u052A\\u052C\\u052E\\u0531-\\u0556\\u10A0-\\u10C5\\u10C7\\u10CD\\u13A0-\\u13F5\\u1E00\\u1E02\\u1E04\\u1E06\\u1E08\\u1E0A\\u1E0C\\u1E0E\\u1E10\\u1E12\\u1E14\\u1E16\\u1E18\\u1E1A\\u1E1C\\u1E1E\\u1E20\\u1E22\\u1E24\\u1E26\\u1E28\\u1E2A\\u1E2C\\u1E2E\\u1E30\\u1E32\\u1E34\\u1E36\\u1E38\\u1E3A\\u1E3C\\u1E3E\\u1E40\\u1E42\\u1E44\\u1E46\\u1E48\\u1E4A\\u1E4C\\u1E4E\\u1E50\\u1E52\\u1E54\\u1E56\\u1E58\\u1E5A\\u1E5C\\u1E5E\\u1E60\\u1E62\\u1E64\\u1E66\\u1E68\\u1E6A\\u1E6C\\u1E6E\\u1E70\\u1E72\\u1E74\\u1E76\\u1E78\\u1E7A\\u1E7C\\u1E7E\\u1E80\\u1E82\\u1E84\\u1E86\\u1E88\\u1E8A\\u1E8C\\u1E8E\\u1E90\\u1E92\\u1E94\\u1E9E\\u1EA0\\u1EA2\\u1EA4\\u1EA6\\u1EA8\\u1EAA\\u1EAC\\u1EAE\\u1EB0\\u1EB2\\u1EB4\\u1EB6\\u1EB8\\u1EBA\\u1EBC\\u1EBE\\u1EC0\\u1EC2\\u1EC4\\u1EC6\\u1EC8\\u1ECA\\u1ECC\\u1ECE\\u1ED0\\u1ED2\\u1ED4\\u1ED6\\u1ED8\\u1EDA\\u1EDC\\u1EDE\\u1EE0\\u1EE2\\u1EE4\\u1EE6\\u1EE8\\u1EEA\\u1EEC\\u1EEE\\u1EF0\\u1EF2\\u1EF4\\u1EF6\\u1EF8\\u1EFA\\u1EFC\\u1EFE\\u1F08-\\u1F0F\\u1F18-\\u1F1D\\u1F28-\\u1F2F\\u1F38-\\u1F3F\\u1F48-\\u1F4D\\u1F59\\u1F5B\\u1F5D\\u1F5F\\u1F68-\\u1F6F\\u1FB8-\\u1FBB\\u1FC8-\\u1FCB\\u1FD8-\\u1FDB\\u1FE8-\\u1FEC\\u1FF8-\\u1FFB\\u2102\\u2107\\u210B-\\u210D\\u2110-\\u2112\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u2130-\\u2133\\u213E\\u213F\\u2145\\u2183\\u2C00-\\u2C2E\\u2C60\\u2C62-\\u2C64\\u2C67\\u2C69\\u2C6B\\u2C6D-\\u2C70\\u2C72\\u2C75\\u2C7E-\\u2C80\\u2C82\\u2C84\\u2C86\\u2C88\\u2C8A\\u2C8C\\u2C8E\\u2C90\\u2C92\\u2C94\\u2C96\\u2C98\\u2C9A\\u2C9C\\u2C9E\\u2CA0\\u2CA2\\u2CA4\\u2CA6\\u2CA8\\u2CAA\\u2CAC\\u2CAE\\u2CB0\\u2CB2\\u2CB4\\u2CB6\\u2CB8\\u2CBA\\u2CBC\\u2CBE\\u2CC0\\u2CC2\\u2CC4\\u2CC6\\u2CC8\\u2CCA\\u2CCC\\u2CCE\\u2CD0\\u2CD2\\u2CD4\\u2CD6\\u2CD8\\u2CDA\\u2CDC\\u2CDE\\u2CE0\\u2CE2\\u2CEB\\u2CED\\u2CF2\\uA640\\uA642\\uA644\\uA646\\uA648\\uA64A\\uA64C\\uA64E\\uA650\\uA652\\uA654\\uA656\\uA658\\uA65A\\uA65C\\uA65E\\uA660\\uA662\\uA664\\uA666\\uA668\\uA66A\\uA66C\\uA680\\uA682\\uA684\\uA686\\uA688\\uA68A\\uA68C\\uA68E\\uA690\\uA692\\uA694\\uA696\\uA698\\uA69A\\uA722\\uA724\\uA726\\uA728\\uA72A\\uA72C\\uA72E\\uA732\\uA734\\uA736\\uA738\\uA73A\\uA73C\\uA73E\\uA740\\uA742\\uA744\\uA746\\uA748\\uA74A\\uA74C\\uA74E\\uA750\\uA752\\uA754\\uA756\\uA758\\uA75A\\uA75C\\uA75E\\uA760\\uA762\\uA764\\uA766\\uA768\\uA76A\\uA76C\\uA76E\\uA779\\uA77B\\uA77D\\uA77E\\uA780\\uA782\\uA784\\uA786\\uA78B\\uA78D\\uA790\\uA792\\uA796\\uA798\\uA79A\\uA79C\\uA79E\\uA7A0\\uA7A2\\uA7A4\\uA7A6\\uA7A8\\uA7AA-\\uA7AD\\uA7B0-\\uA7B4\\uA7B6\\uFF21-\\uFF3A])/g\n","module.exports = /([A-Z\\xC0-\\xD6\\xD8-\\xDE\\u0100\\u0102\\u0104\\u0106\\u0108\\u010A\\u010C\\u010E\\u0110\\u0112\\u0114\\u0116\\u0118\\u011A\\u011C\\u011E\\u0120\\u0122\\u0124\\u0126\\u0128\\u012A\\u012C\\u012E\\u0130\\u0132\\u0134\\u0136\\u0139\\u013B\\u013D\\u013F\\u0141\\u0143\\u0145\\u0147\\u014A\\u014C\\u014E\\u0150\\u0152\\u0154\\u0156\\u0158\\u015A\\u015C\\u015E\\u0160\\u0162\\u0164\\u0166\\u0168\\u016A\\u016C\\u016E\\u0170\\u0172\\u0174\\u0176\\u0178\\u0179\\u017B\\u017D\\u0181\\u0182\\u0184\\u0186\\u0187\\u0189-\\u018B\\u018E-\\u0191\\u0193\\u0194\\u0196-\\u0198\\u019C\\u019D\\u019F\\u01A0\\u01A2\\u01A4\\u01A6\\u01A7\\u01A9\\u01AC\\u01AE\\u01AF\\u01B1-\\u01B3\\u01B5\\u01B7\\u01B8\\u01BC\\u01C4\\u01C7\\u01CA\\u01CD\\u01CF\\u01D1\\u01D3\\u01D5\\u01D7\\u01D9\\u01DB\\u01DE\\u01E0\\u01E2\\u01E4\\u01E6\\u01E8\\u01EA\\u01EC\\u01EE\\u01F1\\u01F4\\u01F6-\\u01F8\\u01FA\\u01FC\\u01FE\\u0200\\u0202\\u0204\\u0206\\u0208\\u020A\\u020C\\u020E\\u0210\\u0212\\u0214\\u0216\\u0218\\u021A\\u021C\\u021E\\u0220\\u0222\\u0224\\u0226\\u0228\\u022A\\u022C\\u022E\\u0230\\u0232\\u023A\\u023B\\u023D\\u023E\\u0241\\u0243-\\u0246\\u0248\\u024A\\u024C\\u024E\\u0370\\u0372\\u0376\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E\\u038F\\u0391-\\u03A1\\u03A3-\\u03AB\\u03CF\\u03D2-\\u03D4\\u03D8\\u03DA\\u03DC\\u03DE\\u03E0\\u03E2\\u03E4\\u03E6\\u03E8\\u03EA\\u03EC\\u03EE\\u03F4\\u03F7\\u03F9\\u03FA\\u03FD-\\u042F\\u0460\\u0462\\u0464\\u0466\\u0468\\u046A\\u046C\\u046E\\u0470\\u0472\\u0474\\u0476\\u0478\\u047A\\u047C\\u047E\\u0480\\u048A\\u048C\\u048E\\u0490\\u0492\\u0494\\u0496\\u0498\\u049A\\u049C\\u049E\\u04A0\\u04A2\\u04A4\\u04A6\\u04A8\\u04AA\\u04AC\\u04AE\\u04B0\\u04B2\\u04B4\\u04B6\\u04B8\\u04BA\\u04BC\\u04BE\\u04C0\\u04C1\\u04C3\\u04C5\\u04C7\\u04C9\\u04CB\\u04CD\\u04D0\\u04D2\\u04D4\\u04D6\\u04D8\\u04DA\\u04DC\\u04DE\\u04E0\\u04E2\\u04E4\\u04E6\\u04E8\\u04EA\\u04EC\\u04EE\\u04F0\\u04F2\\u04F4\\u04F6\\u04F8\\u04FA\\u04FC\\u04FE\\u0500\\u0502\\u0504\\u0506\\u0508\\u050A\\u050C\\u050E\\u0510\\u0512\\u0514\\u0516\\u0518\\u051A\\u051C\\u051E\\u0520\\u0522\\u0524\\u0526\\u0528\\u052A\\u052C\\u052E\\u0531-\\u0556\\u10A0-\\u10C5\\u10C7\\u10CD\\u13A0-\\u13F5\\u1E00\\u1E02\\u1E04\\u1E06\\u1E08\\u1E0A\\u1E0C\\u1E0E\\u1E10\\u1E12\\u1E14\\u1E16\\u1E18\\u1E1A\\u1E1C\\u1E1E\\u1E20\\u1E22\\u1E24\\u1E26\\u1E28\\u1E2A\\u1E2C\\u1E2E\\u1E30\\u1E32\\u1E34\\u1E36\\u1E38\\u1E3A\\u1E3C\\u1E3E\\u1E40\\u1E42\\u1E44\\u1E46\\u1E48\\u1E4A\\u1E4C\\u1E4E\\u1E50\\u1E52\\u1E54\\u1E56\\u1E58\\u1E5A\\u1E5C\\u1E5E\\u1E60\\u1E62\\u1E64\\u1E66\\u1E68\\u1E6A\\u1E6C\\u1E6E\\u1E70\\u1E72\\u1E74\\u1E76\\u1E78\\u1E7A\\u1E7C\\u1E7E\\u1E80\\u1E82\\u1E84\\u1E86\\u1E88\\u1E8A\\u1E8C\\u1E8E\\u1E90\\u1E92\\u1E94\\u1E9E\\u1EA0\\u1EA2\\u1EA4\\u1EA6\\u1EA8\\u1EAA\\u1EAC\\u1EAE\\u1EB0\\u1EB2\\u1EB4\\u1EB6\\u1EB8\\u1EBA\\u1EBC\\u1EBE\\u1EC0\\u1EC2\\u1EC4\\u1EC6\\u1EC8\\u1ECA\\u1ECC\\u1ECE\\u1ED0\\u1ED2\\u1ED4\\u1ED6\\u1ED8\\u1EDA\\u1EDC\\u1EDE\\u1EE0\\u1EE2\\u1EE4\\u1EE6\\u1EE8\\u1EEA\\u1EEC\\u1EEE\\u1EF0\\u1EF2\\u1EF4\\u1EF6\\u1EF8\\u1EFA\\u1EFC\\u1EFE\\u1F08-\\u1F0F\\u1F18-\\u1F1D\\u1F28-\\u1F2F\\u1F38-\\u1F3F\\u1F48-\\u1F4D\\u1F59\\u1F5B\\u1F5D\\u1F5F\\u1F68-\\u1F6F\\u1FB8-\\u1FBB\\u1FC8-\\u1FCB\\u1FD8-\\u1FDB\\u1FE8-\\u1FEC\\u1FF8-\\u1FFB\\u2102\\u2107\\u210B-\\u210D\\u2110-\\u2112\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u2130-\\u2133\\u213E\\u213F\\u2145\\u2183\\u2C00-\\u2C2E\\u2C60\\u2C62-\\u2C64\\u2C67\\u2C69\\u2C6B\\u2C6D-\\u2C70\\u2C72\\u2C75\\u2C7E-\\u2C80\\u2C82\\u2C84\\u2C86\\u2C88\\u2C8A\\u2C8C\\u2C8E\\u2C90\\u2C92\\u2C94\\u2C96\\u2C98\\u2C9A\\u2C9C\\u2C9E\\u2CA0\\u2CA2\\u2CA4\\u2CA6\\u2CA8\\u2CAA\\u2CAC\\u2CAE\\u2CB0\\u2CB2\\u2CB4\\u2CB6\\u2CB8\\u2CBA\\u2CBC\\u2CBE\\u2CC0\\u2CC2\\u2CC4\\u2CC6\\u2CC8\\u2CCA\\u2CCC\\u2CCE\\u2CD0\\u2CD2\\u2CD4\\u2CD6\\u2CD8\\u2CDA\\u2CDC\\u2CDE\\u2CE0\\u2CE2\\u2CEB\\u2CED\\u2CF2\\uA640\\uA642\\uA644\\uA646\\uA648\\uA64A\\uA64C\\uA64E\\uA650\\uA652\\uA654\\uA656\\uA658\\uA65A\\uA65C\\uA65E\\uA660\\uA662\\uA664\\uA666\\uA668\\uA66A\\uA66C\\uA680\\uA682\\uA684\\uA686\\uA688\\uA68A\\uA68C\\uA68E\\uA690\\uA692\\uA694\\uA696\\uA698\\uA69A\\uA722\\uA724\\uA726\\uA728\\uA72A\\uA72C\\uA72E\\uA732\\uA734\\uA736\\uA738\\uA73A\\uA73C\\uA73E\\uA740\\uA742\\uA744\\uA746\\uA748\\uA74A\\uA74C\\uA74E\\uA750\\uA752\\uA754\\uA756\\uA758\\uA75A\\uA75C\\uA75E\\uA760\\uA762\\uA764\\uA766\\uA768\\uA76A\\uA76C\\uA76E\\uA779\\uA77B\\uA77D\\uA77E\\uA780\\uA782\\uA784\\uA786\\uA78B\\uA78D\\uA790\\uA792\\uA796\\uA798\\uA79A\\uA79C\\uA79E\\uA7A0\\uA7A2\\uA7A4\\uA7A6\\uA7A8\\uA7AA-\\uA7AD\\uA7B0-\\uA7B4\\uA7B6\\uFF21-\\uFF3A])([A-Z\\xC0-\\xD6\\xD8-\\xDE\\u0100\\u0102\\u0104\\u0106\\u0108\\u010A\\u010C\\u010E\\u0110\\u0112\\u0114\\u0116\\u0118\\u011A\\u011C\\u011E\\u0120\\u0122\\u0124\\u0126\\u0128\\u012A\\u012C\\u012E\\u0130\\u0132\\u0134\\u0136\\u0139\\u013B\\u013D\\u013F\\u0141\\u0143\\u0145\\u0147\\u014A\\u014C\\u014E\\u0150\\u0152\\u0154\\u0156\\u0158\\u015A\\u015C\\u015E\\u0160\\u0162\\u0164\\u0166\\u0168\\u016A\\u016C\\u016E\\u0170\\u0172\\u0174\\u0176\\u0178\\u0179\\u017B\\u017D\\u0181\\u0182\\u0184\\u0186\\u0187\\u0189-\\u018B\\u018E-\\u0191\\u0193\\u0194\\u0196-\\u0198\\u019C\\u019D\\u019F\\u01A0\\u01A2\\u01A4\\u01A6\\u01A7\\u01A9\\u01AC\\u01AE\\u01AF\\u01B1-\\u01B3\\u01B5\\u01B7\\u01B8\\u01BC\\u01C4\\u01C7\\u01CA\\u01CD\\u01CF\\u01D1\\u01D3\\u01D5\\u01D7\\u01D9\\u01DB\\u01DE\\u01E0\\u01E2\\u01E4\\u01E6\\u01E8\\u01EA\\u01EC\\u01EE\\u01F1\\u01F4\\u01F6-\\u01F8\\u01FA\\u01FC\\u01FE\\u0200\\u0202\\u0204\\u0206\\u0208\\u020A\\u020C\\u020E\\u0210\\u0212\\u0214\\u0216\\u0218\\u021A\\u021C\\u021E\\u0220\\u0222\\u0224\\u0226\\u0228\\u022A\\u022C\\u022E\\u0230\\u0232\\u023A\\u023B\\u023D\\u023E\\u0241\\u0243-\\u0246\\u0248\\u024A\\u024C\\u024E\\u0370\\u0372\\u0376\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E\\u038F\\u0391-\\u03A1\\u03A3-\\u03AB\\u03CF\\u03D2-\\u03D4\\u03D8\\u03DA\\u03DC\\u03DE\\u03E0\\u03E2\\u03E4\\u03E6\\u03E8\\u03EA\\u03EC\\u03EE\\u03F4\\u03F7\\u03F9\\u03FA\\u03FD-\\u042F\\u0460\\u0462\\u0464\\u0466\\u0468\\u046A\\u046C\\u046E\\u0470\\u0472\\u0474\\u0476\\u0478\\u047A\\u047C\\u047E\\u0480\\u048A\\u048C\\u048E\\u0490\\u0492\\u0494\\u0496\\u0498\\u049A\\u049C\\u049E\\u04A0\\u04A2\\u04A4\\u04A6\\u04A8\\u04AA\\u04AC\\u04AE\\u04B0\\u04B2\\u04B4\\u04B6\\u04B8\\u04BA\\u04BC\\u04BE\\u04C0\\u04C1\\u04C3\\u04C5\\u04C7\\u04C9\\u04CB\\u04CD\\u04D0\\u04D2\\u04D4\\u04D6\\u04D8\\u04DA\\u04DC\\u04DE\\u04E0\\u04E2\\u04E4\\u04E6\\u04E8\\u04EA\\u04EC\\u04EE\\u04F0\\u04F2\\u04F4\\u04F6\\u04F8\\u04FA\\u04FC\\u04FE\\u0500\\u0502\\u0504\\u0506\\u0508\\u050A\\u050C\\u050E\\u0510\\u0512\\u0514\\u0516\\u0518\\u051A\\u051C\\u051E\\u0520\\u0522\\u0524\\u0526\\u0528\\u052A\\u052C\\u052E\\u0531-\\u0556\\u10A0-\\u10C5\\u10C7\\u10CD\\u13A0-\\u13F5\\u1E00\\u1E02\\u1E04\\u1E06\\u1E08\\u1E0A\\u1E0C\\u1E0E\\u1E10\\u1E12\\u1E14\\u1E16\\u1E18\\u1E1A\\u1E1C\\u1E1E\\u1E20\\u1E22\\u1E24\\u1E26\\u1E28\\u1E2A\\u1E2C\\u1E2E\\u1E30\\u1E32\\u1E34\\u1E36\\u1E38\\u1E3A\\u1E3C\\u1E3E\\u1E40\\u1E42\\u1E44\\u1E46\\u1E48\\u1E4A\\u1E4C\\u1E4E\\u1E50\\u1E52\\u1E54\\u1E56\\u1E58\\u1E5A\\u1E5C\\u1E5E\\u1E60\\u1E62\\u1E64\\u1E66\\u1E68\\u1E6A\\u1E6C\\u1E6E\\u1E70\\u1E72\\u1E74\\u1E76\\u1E78\\u1E7A\\u1E7C\\u1E7E\\u1E80\\u1E82\\u1E84\\u1E86\\u1E88\\u1E8A\\u1E8C\\u1E8E\\u1E90\\u1E92\\u1E94\\u1E9E\\u1EA0\\u1EA2\\u1EA4\\u1EA6\\u1EA8\\u1EAA\\u1EAC\\u1EAE\\u1EB0\\u1EB2\\u1EB4\\u1EB6\\u1EB8\\u1EBA\\u1EBC\\u1EBE\\u1EC0\\u1EC2\\u1EC4\\u1EC6\\u1EC8\\u1ECA\\u1ECC\\u1ECE\\u1ED0\\u1ED2\\u1ED4\\u1ED6\\u1ED8\\u1EDA\\u1EDC\\u1EDE\\u1EE0\\u1EE2\\u1EE4\\u1EE6\\u1EE8\\u1EEA\\u1EEC\\u1EEE\\u1EF0\\u1EF2\\u1EF4\\u1EF6\\u1EF8\\u1EFA\\u1EFC\\u1EFE\\u1F08-\\u1F0F\\u1F18-\\u1F1D\\u1F28-\\u1F2F\\u1F38-\\u1F3F\\u1F48-\\u1F4D\\u1F59\\u1F5B\\u1F5D\\u1F5F\\u1F68-\\u1F6F\\u1FB8-\\u1FBB\\u1FC8-\\u1FCB\\u1FD8-\\u1FDB\\u1FE8-\\u1FEC\\u1FF8-\\u1FFB\\u2102\\u2107\\u210B-\\u210D\\u2110-\\u2112\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u2130-\\u2133\\u213E\\u213F\\u2145\\u2183\\u2C00-\\u2C2E\\u2C60\\u2C62-\\u2C64\\u2C67\\u2C69\\u2C6B\\u2C6D-\\u2C70\\u2C72\\u2C75\\u2C7E-\\u2C80\\u2C82\\u2C84\\u2C86\\u2C88\\u2C8A\\u2C8C\\u2C8E\\u2C90\\u2C92\\u2C94\\u2C96\\u2C98\\u2C9A\\u2C9C\\u2C9E\\u2CA0\\u2CA2\\u2CA4\\u2CA6\\u2CA8\\u2CAA\\u2CAC\\u2CAE\\u2CB0\\u2CB2\\u2CB4\\u2CB6\\u2CB8\\u2CBA\\u2CBC\\u2CBE\\u2CC0\\u2CC2\\u2CC4\\u2CC6\\u2CC8\\u2CCA\\u2CCC\\u2CCE\\u2CD0\\u2CD2\\u2CD4\\u2CD6\\u2CD8\\u2CDA\\u2CDC\\u2CDE\\u2CE0\\u2CE2\\u2CEB\\u2CED\\u2CF2\\uA640\\uA642\\uA644\\uA646\\uA648\\uA64A\\uA64C\\uA64E\\uA650\\uA652\\uA654\\uA656\\uA658\\uA65A\\uA65C\\uA65E\\uA660\\uA662\\uA664\\uA666\\uA668\\uA66A\\uA66C\\uA680\\uA682\\uA684\\uA686\\uA688\\uA68A\\uA68C\\uA68E\\uA690\\uA692\\uA694\\uA696\\uA698\\uA69A\\uA722\\uA724\\uA726\\uA728\\uA72A\\uA72C\\uA72E\\uA732\\uA734\\uA736\\uA738\\uA73A\\uA73C\\uA73E\\uA740\\uA742\\uA744\\uA746\\uA748\\uA74A\\uA74C\\uA74E\\uA750\\uA752\\uA754\\uA756\\uA758\\uA75A\\uA75C\\uA75E\\uA760\\uA762\\uA764\\uA766\\uA768\\uA76A\\uA76C\\uA76E\\uA779\\uA77B\\uA77D\\uA77E\\uA780\\uA782\\uA784\\uA786\\uA78B\\uA78D\\uA790\\uA792\\uA796\\uA798\\uA79A\\uA79C\\uA79E\\uA7A0\\uA7A2\\uA7A4\\uA7A6\\uA7A8\\uA7AA-\\uA7AD\\uA7B0-\\uA7B4\\uA7B6\\uFF21-\\uFF3A][a-z\\xB5\\xDF-\\xF6\\xF8-\\xFF\\u0101\\u0103\\u0105\\u0107\\u0109\\u010B\\u010D\\u010F\\u0111\\u0113\\u0115\\u0117\\u0119\\u011B\\u011D\\u011F\\u0121\\u0123\\u0125\\u0127\\u0129\\u012B\\u012D\\u012F\\u0131\\u0133\\u0135\\u0137\\u0138\\u013A\\u013C\\u013E\\u0140\\u0142\\u0144\\u0146\\u0148\\u0149\\u014B\\u014D\\u014F\\u0151\\u0153\\u0155\\u0157\\u0159\\u015B\\u015D\\u015F\\u0161\\u0163\\u0165\\u0167\\u0169\\u016B\\u016D\\u016F\\u0171\\u0173\\u0175\\u0177\\u017A\\u017C\\u017E-\\u0180\\u0183\\u0185\\u0188\\u018C\\u018D\\u0192\\u0195\\u0199-\\u019B\\u019E\\u01A1\\u01A3\\u01A5\\u01A8\\u01AA\\u01AB\\u01AD\\u01B0\\u01B4\\u01B6\\u01B9\\u01BA\\u01BD-\\u01BF\\u01C6\\u01C9\\u01CC\\u01CE\\u01D0\\u01D2\\u01D4\\u01D6\\u01D8\\u01DA\\u01DC\\u01DD\\u01DF\\u01E1\\u01E3\\u01E5\\u01E7\\u01E9\\u01EB\\u01ED\\u01EF\\u01F0\\u01F3\\u01F5\\u01F9\\u01FB\\u01FD\\u01FF\\u0201\\u0203\\u0205\\u0207\\u0209\\u020B\\u020D\\u020F\\u0211\\u0213\\u0215\\u0217\\u0219\\u021B\\u021D\\u021F\\u0221\\u0223\\u0225\\u0227\\u0229\\u022B\\u022D\\u022F\\u0231\\u0233-\\u0239\\u023C\\u023F\\u0240\\u0242\\u0247\\u0249\\u024B\\u024D\\u024F-\\u0293\\u0295-\\u02AF\\u0371\\u0373\\u0377\\u037B-\\u037D\\u0390\\u03AC-\\u03CE\\u03D0\\u03D1\\u03D5-\\u03D7\\u03D9\\u03DB\\u03DD\\u03DF\\u03E1\\u03E3\\u03E5\\u03E7\\u03E9\\u03EB\\u03ED\\u03EF-\\u03F3\\u03F5\\u03F8\\u03FB\\u03FC\\u0430-\\u045F\\u0461\\u0463\\u0465\\u0467\\u0469\\u046B\\u046D\\u046F\\u0471\\u0473\\u0475\\u0477\\u0479\\u047B\\u047D\\u047F\\u0481\\u048B\\u048D\\u048F\\u0491\\u0493\\u0495\\u0497\\u0499\\u049B\\u049D\\u049F\\u04A1\\u04A3\\u04A5\\u04A7\\u04A9\\u04AB\\u04AD\\u04AF\\u04B1\\u04B3\\u04B5\\u04B7\\u04B9\\u04BB\\u04BD\\u04BF\\u04C2\\u04C4\\u04C6\\u04C8\\u04CA\\u04CC\\u04CE\\u04CF\\u04D1\\u04D3\\u04D5\\u04D7\\u04D9\\u04DB\\u04DD\\u04DF\\u04E1\\u04E3\\u04E5\\u04E7\\u04E9\\u04EB\\u04ED\\u04EF\\u04F1\\u04F3\\u04F5\\u04F7\\u04F9\\u04FB\\u04FD\\u04FF\\u0501\\u0503\\u0505\\u0507\\u0509\\u050B\\u050D\\u050F\\u0511\\u0513\\u0515\\u0517\\u0519\\u051B\\u051D\\u051F\\u0521\\u0523\\u0525\\u0527\\u0529\\u052B\\u052D\\u052F\\u0561-\\u0587\\u13F8-\\u13FD\\u1D00-\\u1D2B\\u1D6B-\\u1D77\\u1D79-\\u1D9A\\u1E01\\u1E03\\u1E05\\u1E07\\u1E09\\u1E0B\\u1E0D\\u1E0F\\u1E11\\u1E13\\u1E15\\u1E17\\u1E19\\u1E1B\\u1E1D\\u1E1F\\u1E21\\u1E23\\u1E25\\u1E27\\u1E29\\u1E2B\\u1E2D\\u1E2F\\u1E31\\u1E33\\u1E35\\u1E37\\u1E39\\u1E3B\\u1E3D\\u1E3F\\u1E41\\u1E43\\u1E45\\u1E47\\u1E49\\u1E4B\\u1E4D\\u1E4F\\u1E51\\u1E53\\u1E55\\u1E57\\u1E59\\u1E5B\\u1E5D\\u1E5F\\u1E61\\u1E63\\u1E65\\u1E67\\u1E69\\u1E6B\\u1E6D\\u1E6F\\u1E71\\u1E73\\u1E75\\u1E77\\u1E79\\u1E7B\\u1E7D\\u1E7F\\u1E81\\u1E83\\u1E85\\u1E87\\u1E89\\u1E8B\\u1E8D\\u1E8F\\u1E91\\u1E93\\u1E95-\\u1E9D\\u1E9F\\u1EA1\\u1EA3\\u1EA5\\u1EA7\\u1EA9\\u1EAB\\u1EAD\\u1EAF\\u1EB1\\u1EB3\\u1EB5\\u1EB7\\u1EB9\\u1EBB\\u1EBD\\u1EBF\\u1EC1\\u1EC3\\u1EC5\\u1EC7\\u1EC9\\u1ECB\\u1ECD\\u1ECF\\u1ED1\\u1ED3\\u1ED5\\u1ED7\\u1ED9\\u1EDB\\u1EDD\\u1EDF\\u1EE1\\u1EE3\\u1EE5\\u1EE7\\u1EE9\\u1EEB\\u1EED\\u1EEF\\u1EF1\\u1EF3\\u1EF5\\u1EF7\\u1EF9\\u1EFB\\u1EFD\\u1EFF-\\u1F07\\u1F10-\\u1F15\\u1F20-\\u1F27\\u1F30-\\u1F37\\u1F40-\\u1F45\\u1F50-\\u1F57\\u1F60-\\u1F67\\u1F70-\\u1F7D\\u1F80-\\u1F87\\u1F90-\\u1F97\\u1FA0-\\u1FA7\\u1FB0-\\u1FB4\\u1FB6\\u1FB7\\u1FBE\\u1FC2-\\u1FC4\\u1FC6\\u1FC7\\u1FD0-\\u1FD3\\u1FD6\\u1FD7\\u1FE0-\\u1FE7\\u1FF2-\\u1FF4\\u1FF6\\u1FF7\\u210A\\u210E\\u210F\\u2113\\u212F\\u2134\\u2139\\u213C\\u213D\\u2146-\\u2149\\u214E\\u2184\\u2C30-\\u2C5E\\u2C61\\u2C65\\u2C66\\u2C68\\u2C6A\\u2C6C\\u2C71\\u2C73\\u2C74\\u2C76-\\u2C7B\\u2C81\\u2C83\\u2C85\\u2C87\\u2C89\\u2C8B\\u2C8D\\u2C8F\\u2C91\\u2C93\\u2C95\\u2C97\\u2C99\\u2C9B\\u2C9D\\u2C9F\\u2CA1\\u2CA3\\u2CA5\\u2CA7\\u2CA9\\u2CAB\\u2CAD\\u2CAF\\u2CB1\\u2CB3\\u2CB5\\u2CB7\\u2CB9\\u2CBB\\u2CBD\\u2CBF\\u2CC1\\u2CC3\\u2CC5\\u2CC7\\u2CC9\\u2CCB\\u2CCD\\u2CCF\\u2CD1\\u2CD3\\u2CD5\\u2CD7\\u2CD9\\u2CDB\\u2CDD\\u2CDF\\u2CE1\\u2CE3\\u2CE4\\u2CEC\\u2CEE\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\uA641\\uA643\\uA645\\uA647\\uA649\\uA64B\\uA64D\\uA64F\\uA651\\uA653\\uA655\\uA657\\uA659\\uA65B\\uA65D\\uA65F\\uA661\\uA663\\uA665\\uA667\\uA669\\uA66B\\uA66D\\uA681\\uA683\\uA685\\uA687\\uA689\\uA68B\\uA68D\\uA68F\\uA691\\uA693\\uA695\\uA697\\uA699\\uA69B\\uA723\\uA725\\uA727\\uA729\\uA72B\\uA72D\\uA72F-\\uA731\\uA733\\uA735\\uA737\\uA739\\uA73B\\uA73D\\uA73F\\uA741\\uA743\\uA745\\uA747\\uA749\\uA74B\\uA74D\\uA74F\\uA751\\uA753\\uA755\\uA757\\uA759\\uA75B\\uA75D\\uA75F\\uA761\\uA763\\uA765\\uA767\\uA769\\uA76B\\uA76D\\uA76F\\uA771-\\uA778\\uA77A\\uA77C\\uA77F\\uA781\\uA783\\uA785\\uA787\\uA78C\\uA78E\\uA791\\uA793-\\uA795\\uA797\\uA799\\uA79B\\uA79D\\uA79F\\uA7A1\\uA7A3\\uA7A5\\uA7A7\\uA7A9\\uA7B5\\uA7B7\\uA7FA\\uAB30-\\uAB5A\\uAB60-\\uAB65\\uAB70-\\uABBF\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFF41-\\uFF5A])/g\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 31;","import * as vscode from 'vscode';\r\n\r\nimport { IVsCodeApi } from './abstractions/vs-code-api.interface';\r\nimport { IDisposable } from './abstractions/disposable.interface';\r\nimport { AutoBarrelSettings } from './models/auto-barrel-settings';\r\nimport { defaultSettings } from './default-settings';\r\nimport { StatementDetails } from './models/statement-details';\r\n\r\nexport class VsCodeApi implements IVsCodeApi {\r\n  public async appendStatementToBarrel(barrelFilePath: string, statementDetails: StatementDetails): Promise<void> {\r\n    const document = await this.openTextDocument(barrelFilePath);\r\n    if (document.lineCount >= 1) {\r\n      if (document.lineAt(0).text.indexOf('auto-barrel-ignore') !== -1) {\r\n        return;\r\n      }\r\n    }\r\n\r\n    let lastLineWithContent = document.lineCount - 1;\r\n    for (let i = lastLineWithContent; i > 0; i--) {\r\n      if (document.lineAt(i).text.length) {\r\n        lastLineWithContent = i;\r\n        break;\r\n      }\r\n    }\r\n    const newLinePosition = new vscode.Position(lastLineWithContent + 1, 0);\r\n    const barrelFileUri = vscode.Uri.file(barrelFilePath);\r\n    const workspaceEdit = new vscode.WorkspaceEdit();\r\n    if (statementDetails.alias) {\r\n      const aliasLine = document.lineAt(lastLineWithContent);\r\n      const originalAliasStatement = aliasLine.text;\r\n      const newAliasStatement = originalAliasStatement.replace(' };', `, ${statementDetails.alias} };`);\r\n      workspaceEdit.replace(barrelFileUri, aliasLine.range, statementDetails.statement);\r\n      workspaceEdit.insert(barrelFileUri, newLinePosition, newAliasStatement);\r\n    } else {\r\n      workspaceEdit.insert(barrelFileUri, newLinePosition, statementDetails.statement);\r\n    }\r\n\r\n    if (statementDetails.isBarrelImport) {\r\n      const barrelStatementPrefix = statementDetails.statement.substr(0, statementDetails.statement.length - 2);\r\n      for (let i = 0; i < document.lineCount; i++) {\r\n        const line = document.lineAt(i);\r\n        if (line.text.indexOf(barrelStatementPrefix) !== -1) {\r\n          workspaceEdit.delete(barrelFileUri, line.rangeIncludingLineBreak);\r\n        }\r\n      }\r\n    }\r\n\r\n    const result = await vscode.workspace.applyEdit(workspaceEdit);\r\n    if (result) {\r\n      await vscode.window.showInformationMessage(`The new file was added to ${barrelFilePath}`, {\r\n        modal: false\r\n      });\r\n    } else {\r\n      await vscode.window.showWarningMessage(`Unable to add the new file to ${barrelFilePath}`, {\r\n        modal: false\r\n      });\r\n    }\r\n\r\n    return;\r\n  }\r\n\r\n  public createFileSystemWatcher(\r\n    globPattern: string,\r\n    onCreated: (path: string) => void,\r\n    onDelete: (path: string) => void\r\n  ): IDisposable {\r\n    const relativeGlobPattern = new vscode.RelativePattern(vscode.workspace.rootPath, globPattern);\r\n    const result = vscode.workspace.createFileSystemWatcher(relativeGlobPattern, false, true, false);\r\n\r\n    result.onDidCreate((uri: vscode.Uri) => {\r\n      onCreated(uri.path);\r\n    });\r\n    result.onDidDelete((uri: vscode.Uri) => onDelete(uri.path));\r\n\r\n    return result;\r\n  }\r\n\r\n  public async findSupportedFiles(folderPath: string): Promise<Array<string>> {\r\n    const files = await vscode.workspace.findFiles(new vscode.RelativePattern(folderPath, '**/*.{js,jsx,ts,tsx}'));\r\n    return files.map(f => f.path);\r\n  }\r\n\r\n  public async findFiles(searchGlob: string): Promise<Array<string>> {\r\n    const files = await vscode.workspace.findFiles(searchGlob);\r\n    return files.map(f => f.path);\r\n  }\r\n\r\n  public getConfiguration(): AutoBarrelSettings {\r\n    const config = vscode.workspace.getConfiguration('autoBarrel');\r\n    if (typeof config === 'undefined') {\r\n      return defaultSettings;\r\n    }\r\n\r\n    const defaultLanguage = config.get<string>('defaultLanguage');\r\n    const defaultExtension = defaultLanguage === 'JavaScript' ? 'js' : 'ts';\r\n\r\n    return {\r\n      defaultExtension: defaultExtension,\r\n      alwaysUseDefaultLanguage: getSettingOrDefault<boolean>(config, 'alwaysUseDefaultLanguage'),\r\n      watchGlob: getSettingOrDefault<string>(config, 'watchGlob'),\r\n      ignoreFilePathContainingAnyOf: getSettingOrDefault<string>(config, 'ignoreFilePathContainingAnyOf'),\r\n      useImportAliasExportPattern: getSettingOrDefault<boolean>(config, 'useImportAliasExportPattern'),\r\n      disableRecursiveBarrelling: getSettingOrDefault<boolean>(config, 'disableRecursiveBarrelling')\r\n    };\r\n\r\n    function getSettingOrDefault<T extends string | boolean>(\r\n      config: vscode.WorkspaceConfiguration,\r\n      section: string\r\n    ): T {\r\n      const configSetting = config.get<T>(section);\r\n      if (typeof configSetting !== 'undefined') {\r\n        return configSetting as T;\r\n      }\r\n      return defaultSettings[section] as T;\r\n    }\r\n  }\r\n\r\n  public async getDocumentText(filePath: string): Promise<string> {\r\n    const uri = vscode.Uri.file(filePath);\r\n    const document = await vscode.workspace.openTextDocument(uri);\r\n    return document.getText();\r\n  }\r\n\r\n  public async removeStatementFromBarrel(barrelFilePath: string, statementSuffix: string): Promise<void> {\r\n    const document = await this.openTextDocument(barrelFilePath);\r\n\r\n    let lineToRemove: vscode.TextLine;\r\n    let aliasLine: vscode.TextLine;\r\n\r\n    for (let i = 0; i < document.lineCount; i++) {\r\n      const documentLine = document.lineAt(i);\r\n      const lineText = documentLine.text;\r\n      if (lineText.indexOf(statementSuffix) !== -1) {\r\n        lineToRemove = documentLine;\r\n      }\r\n\r\n      if (lineText.indexOf('export { ') !== -1) {\r\n        aliasLine = documentLine;\r\n      }\r\n    }\r\n\r\n    if (typeof lineToRemove === 'undefined') {\r\n      await vscode.window.showWarningMessage(`Could not find ${statementSuffix} in ${barrelFilePath}`);\r\n      return;\r\n    }\r\n\r\n    const barrelFileUri = vscode.Uri.file(barrelFilePath);\r\n    const workspaceEdit = new vscode.WorkspaceEdit();\r\n\r\n    if (lineToRemove.text.indexOf('import * as ') !== -1) {\r\n      if (typeof aliasLine === 'undefined') {\r\n        await vscode.window.showWarningMessage(`Could not find alias statement in ${barrelFilePath}`);\r\n        return;\r\n      }\r\n      const alias = lineToRemove.text.split(' ')[3];\r\n      const newAliasText = aliasLine.text.replace(`, ${alias}`, '');\r\n      workspaceEdit.replace(barrelFileUri, aliasLine.range, newAliasText);\r\n    }\r\n    workspaceEdit.delete(barrelFileUri, lineToRemove.rangeIncludingLineBreak);\r\n\r\n    const result = await vscode.workspace.applyEdit(workspaceEdit);\r\n    if (result) {\r\n      await vscode.window.showInformationMessage(`The file was removed from ${barrelFilePath}`, {\r\n        modal: false\r\n      });\r\n    } else {\r\n      await vscode.window.showWarningMessage(`Unable to remove the file from ${barrelFilePath}`, {\r\n        modal: false\r\n      });\r\n    }\r\n\r\n    return;\r\n  }\r\n\r\n  public async showInformationMessage(message: string): Promise<string> {\r\n    return vscode.window.showInformationMessage(message);\r\n  }\r\n\r\n  public async showErrorMessage(message: string): Promise<string> {\r\n    return vscode.window.showErrorMessage(message);\r\n  }\r\n\r\n  public async showWarningMessage(message: string): Promise<string> {\r\n    return vscode.window.showWarningMessage(message);\r\n  }\r\n\r\n  public async writeFile(\r\n    filePath: string,\r\n    contentLines: Array<string>,\r\n    overWriteIfExists: boolean = false\r\n  ): Promise<void> {\r\n    const fileUri = vscode.Uri.file(filePath);\r\n    const workspaceEdit = new vscode.WorkspaceEdit();\r\n    workspaceEdit.createFile(fileUri, { overwrite: overWriteIfExists });\r\n\r\n    for (let i = 0; i < contentLines.length; i++) {\r\n      const line = contentLines[i];\r\n      workspaceEdit.insert(fileUri, new vscode.Position(i, 0), `${line}\\n`);\r\n    }\r\n\r\n    try {\r\n      const result = await vscode.workspace.applyEdit(workspaceEdit);\r\n      if (result === true) {\r\n        await vscode.window.showInformationMessage(`Barrel ${filePath} was created successfully`);\r\n      } else {\r\n        await vscode.window.showWarningMessage('The barrel file was not created as expected');\r\n      }\r\n    } catch (error) {\r\n      await vscode.window.showErrorMessage(`Creating barrel file failed:  ${error}`);\r\n    }\r\n  }\r\n\r\n  private async openTextDocument(filePath: string): Promise<vscode.TextDocument> {\r\n    const uri = vscode.Uri.file(filePath);\r\n    return vscode.workspace.openTextDocument(uri);\r\n  }\r\n}\r\n","import { AutoBarrelSettings } from './models/auto-barrel-settings';\r\n\r\nexport const defaultSettings: AutoBarrelSettings = {\r\n    defaultExtension: 'ts',\r\n    alwaysUseDefaultLanguage: false,\r\n    watchGlob: 'src/**/*.{js,jsx,ts,tsx}',\r\n    ignoreFilePathContainingAnyOf: '.spec,.test',\r\n    useImportAliasExportPattern: false,\r\n    disableRecursiveBarrelling: false\r\n};","import { IConfiguration } from './abstractions/configuration.interface';\r\nimport { IVsCodeApi } from './abstractions/vs-code-api.interface';\r\nimport { AutoBarrelSettings } from './models/auto-barrel-settings';\r\n\r\nexport class Configuration implements IConfiguration {\r\n    constructor(private vsCodeApi: IVsCodeApi) {\r\n    }\r\n\r\n    public get current(): AutoBarrelSettings {\r\n        return this.vsCodeApi.getConfiguration();\r\n    }\r\n\r\n    public get defaultExtension(): string {\r\n        return this.current.defaultExtension;\r\n    }\r\n\r\n    public get alwaysUseDefaultLanguage(): boolean {\r\n        return this.current.alwaysUseDefaultLanguage;\r\n    }\r\n\r\n    public get watchGlob(): string {\r\n        return this.current.watchGlob;\r\n    }\r\n\r\n    public get ignoreFilePathContainingAnyOf(): string {\r\n        return this.current.ignoreFilePathContainingAnyOf;\r\n    }\r\n\r\n    public get useImportAliasExportPattern(): boolean {\r\n        return this.current.useImportAliasExportPattern;\r\n    }\r\n\r\n    public get disableRecursiveBarrelling(): boolean {\r\n        return this.current.disableRecursiveBarrelling;\r\n    }\r\n}","import * as path from 'path';\r\n\r\nimport { IUtility } from './abstractions/utlity.interface';\r\nimport { IConfiguration } from './abstractions/configuration.interface';\r\nimport { IVsCodeApi } from './abstractions/vs-code-api.interface';\r\nimport { supportedExtensions } from './supported-extensions';\r\n\r\nexport class Utility implements IUtility {\r\n\r\n    constructor(private configuration: IConfiguration,\r\n        private vsCodeApi: IVsCodeApi) {\r\n    }\r\n\r\n    public buildAlias(filePath: string): string {\r\n        const baseName = path.basename(filePath, path.extname(filePath));\r\n        const aliasParts: string[] = [];\r\n        let nameParts: string[];\r\n        if(baseName.toLowerCase() === 'index') {\r\n            const pathParts = filePath.split('/');\r\n            const aliasBase = pathParts[pathParts.length - 2];\r\n            nameParts = [aliasBase];\r\n        } else {\r\n            nameParts  = baseName.split('.');\r\n        }\r\n\r\n        for (const part of nameParts) {\r\n            const partElements = part.split('-');\r\n            for (const element of partElements) {\r\n                aliasParts.push(element.charAt(0).toUpperCase() + element.slice(1));\r\n            }\r\n        }\r\n\r\n        return aliasParts.join('');\r\n    }\r\n\r\n    public async containsDefaultExport(filePath: string): Promise<boolean> {\r\n        const content = await this.vsCodeApi.getDocumentText(filePath);\r\n        return content.indexOf('export default') !== -1;\r\n    }\r\n\r\n    public async findClosestBarrel(filePath: string): Promise<string> {\r\n        const config = this.configuration.current;\r\n        const fileExtension = path.extname(filePath).substr(0, 3);\r\n        const barrelFileName = `index${fileExtension}`;\r\n\r\n        if (config.disableRecursiveBarrelling) {\r\n            const folderPath = path.dirname(filePath);\r\n            const barrelFilePath = `${folderPath}/${barrelFileName}`;\r\n            const barrelFiles = await this.vsCodeApi.findFiles(barrelFilePath);\r\n            if(barrelFiles.length > 0) {\r\n                return barrelFiles[0];\r\n            }\r\n        } else {\r\n            const watchGlob = config.watchGlob;\r\n            const lastSlashIndex = watchGlob.lastIndexOf('/');\r\n            const searchGlobBase = lastSlashIndex === -1 ? watchGlob : watchGlob.substr(0, lastSlashIndex + 1);\r\n            const searchGlob = `${searchGlobBase}${barrelFileName}`;\r\n            const barrelFiles = await this.vsCodeApi.findFiles(searchGlob);\r\n            if (barrelFiles.length > 0) {\r\n               let folder = this.getParentFolder(filePath);\r\n               if(path.basename(filePath, fileExtension)  === 'index') {\r\n                   folder = this.getParentFolder(folder);\r\n               }\r\n               let barrelPath = `${folder}/${barrelFileName}`;\r\n               let match = barrelFiles.find((f) => f === barrelPath);\r\n                while(!match){\r\n                    folder = this.getParentFolder(folder);\r\n                    barrelPath = `${folder}/${barrelFileName}`;\r\n                    match = barrelFiles.find((f) => f === barrelPath);\r\n                }\r\n                return match;\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    public getLanguageExtension(filePaths: Array<string>): 'ts' | 'js' {\r\n        const currentConfig = this.configuration.current;\r\n        if (currentConfig.alwaysUseDefaultLanguage === false) {\r\n            if (filePaths.every(f => f.endsWith('.ts') || f.endsWith('.tsx'))) {\r\n                return 'ts';\r\n            } else if (filePaths.every(f => f.endsWith('.js') || f.endsWith('.jsx'))) {\r\n                return 'js';\r\n            }\r\n        }\r\n\r\n        return currentConfig.defaultExtension;\r\n    }\r\n\r\n    public getLanguageExtensionFromFile(filePath: string): string {\r\n        return path.extname(filePath).substr(1, 2);\r\n    }\r\n\r\n    public pathContainsIgnoredFragment(filePath: string): boolean {\r\n        const ignoredFragmentsSetting = this.configuration.current.ignoreFilePathContainingAnyOf;\r\n        if (ignoredFragmentsSetting) {\r\n            const fragments = ignoredFragmentsSetting.split(',');\r\n            if (fragments && fragments.length) {\r\n                return fragments.some(f => filePath.indexOf(f) !== -1);\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public shouldBeIncludedInBarrel(filePath: string, languageExtension: string): boolean {\r\n        const possibleExtensions = supportedExtensions[languageExtension];\r\n        const fileExtension = path.extname(filePath);\r\n\r\n        return possibleExtensions.indexOf(fileExtension) !== -1 && !this.pathContainsIgnoredFragment(filePath);\r\n    }\r\n\r\n    private getParentFolder(path: string) {\r\n        if(path.endsWith('/')) {\r\n            path = path.substr(0, path.length - 1);\r\n        }\r\n        \r\n        const lastSlashIndex = path.lastIndexOf('/');\r\n        if(lastSlashIndex !== -1) {\r\n            return path.substr(0, lastSlashIndex);\r\n        }\r\n\r\n        return path;\r\n    }\r\n}","export const supportedExtensions: { [index: string]: string[]; js: string[]; ts: string[]; } = {\r\n    js: ['.js', '.jsx'],\r\n    ts: ['.ts', '.tsx']\r\n  };","import { BarrelDetails } from './models/barrel-details';\r\nimport { IUtility } from './abstractions/utlity.interface';\r\nimport { IBarrelBuilder } from './abstractions/barrel-builder.interface';\r\nimport { IExportStatementBuilder } from './abstractions/export-statement-builder.interface';\r\nimport { StatementDetails } from './models/statement-details';\r\n\r\nexport class BarrelBuilder implements IBarrelBuilder {\r\n\r\n    constructor(private utility: IUtility,\r\n        private exportStatementBuilder: IExportStatementBuilder) {\r\n    }\r\n\r\n    public async build(rootFolderPath: string, filePaths: Array<string>): Promise<BarrelDetails> {\r\n        const languageExtension = this.utility.getLanguageExtension(filePaths);\r\n        const aliases: Array<string> = [];\r\n        const result = new Array<string>();\r\n        const exportStatements = new Array<StatementDetails>();\r\n\r\n        for (let i = 0; i < filePaths.length; i++) {\r\n            const filePath = filePaths[i];\r\n\r\n            if (!this.utility.shouldBeIncludedInBarrel(filePath, languageExtension)) {\r\n                continue;\r\n            }\r\n\r\n            const exportStatement = await this.exportStatementBuilder.build(rootFolderPath, filePath);\r\n            exportStatements.push(exportStatement);\r\n        }\r\n\r\n        for(let i = 0; i < exportStatements.length; i++) {\r\n           const exportStatement = exportStatements[i];\r\n            if (!barrelForStatementIsIncluded(exportStatement)) {\r\n                result.push(exportStatement.statement);\r\n                if (exportStatement.alias) {\r\n                    aliases.push(exportStatement.alias);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (aliases.length) {\r\n            result.push(`export { ${aliases.join(', ')} };`);\r\n        }\r\n\r\n        return {\r\n            barrelFilePath: `${rootFolderPath}/index.${languageExtension}`,\r\n            contentLines: result\r\n        };\r\n\r\n        function barrelForStatementIsIncluded(statementDetails: StatementDetails) {\r\n            if(statementDetails.isBarrelImport) {\r\n                return false;\r\n            }\r\n\r\n            const statement = statementDetails.statement;\r\n            const start = statement.indexOf('from');\r\n            const length = statement.lastIndexOf('/') - start;\r\n            const barrelImportSuffix = `${statement.substr(start, length)}'`;\r\n            \r\n            const barrelImport = exportStatements.find((s) => s.statement.indexOf(barrelImportSuffix) !== -1);\r\n            return typeof barrelImport !== 'undefined';\r\n        }\r\n    }\r\n}","import { IVsCodeApi } from './abstractions/vs-code-api.interface';\r\nimport { IBarrelBuilder } from './abstractions/barrel-builder.interface';\r\n\r\nexport class CreateBarrelCommand {\r\n    constructor(private vsCodeApi: IVsCodeApi,\r\n         private barrelBuilder: IBarrelBuilder) {\r\n    }\r\n\r\n    public async execute(rootFolder: string): Promise<void> {\r\n        const filePaths = await this.vsCodeApi.findSupportedFiles(rootFolder);\r\n        const barrelDetails = await this.barrelBuilder.build(rootFolder, filePaths);\r\n\r\n        return await this.vsCodeApi.writeFile(barrelDetails.barrelFilePath, barrelDetails.contentLines);\r\n    }\r\n}","import * as path from 'path';\r\n\r\nimport { IVsCodeApi } from './abstractions/vs-code-api.interface';\r\nimport { IConfiguration } from './abstractions/configuration.interface';\r\nimport { IDisposable } from './abstractions/disposable.interface';\r\nimport { IUtility } from './abstractions/utlity.interface';\r\nimport { IExportStatementBuilder } from './abstractions/export-statement-builder.interface';\r\n\r\nexport class AutoBarreller implements IDisposable {\r\n    private fileSystemWatcher: IDisposable;\r\n\r\n    constructor(private configuration: IConfiguration,\r\n        private vsCodeApi: IVsCodeApi,\r\n        private utility: IUtility,\r\n        private exportStatementBuilder: IExportStatementBuilder) { }\r\n\r\n    public start = async (): Promise<void> => {\r\n        if (this.isRunning()) {\r\n            await this.vsCodeApi.showWarningMessage('Auto Barrel is already running.');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const configuration = this.configuration.current;\r\n            this.fileSystemWatcher = this.vsCodeApi.createFileSystemWatcher(configuration.watchGlob, this.handleFileCreated, this.handleFileDeleted);\r\n            await this.vsCodeApi.showInformationMessage('Auto Barrel was started successfully.');\r\n            return Promise.resolve();\r\n        } catch (err) {\r\n            console.log(err);\r\n            await this.vsCodeApi.showErrorMessage('Auto Barrel start failed, please check the console for more information.');\r\n        }\r\n    }\r\n\r\n    public stop = async (): Promise<void> => {\r\n        if (this.isRunning() === false) {\r\n            await this.vsCodeApi.showWarningMessage('Auto Barrel is not running, no action taken.');\r\n            return;\r\n        }\r\n\r\n        this.dispose();\r\n        return Promise.resolve();\r\n    }\r\n\r\n    public dispose = () => {\r\n        this.fileSystemWatcher.dispose();\r\n        this.fileSystemWatcher = undefined;\r\n    }\r\n\r\n\r\n    public handleFileCreated = async (filePath: string): Promise<void> => {\r\n        try {\r\n            if (this.utility.pathContainsIgnoredFragment(filePath) === true) {\r\n                return Promise.resolve();\r\n            }\r\n\r\n            const barrelFilePath = await this.utility.findClosestBarrel(filePath);\r\n            if (typeof barrelFilePath === 'undefined') {\r\n                return;\r\n            }\r\n\r\n            const languageExtension = path.extname(barrelFilePath).substr(1);\r\n            if (this.utility.shouldBeIncludedInBarrel(filePath, languageExtension) === false) {\r\n                return;\r\n            }\r\n\r\n            const barrelFolderPath = path.dirname(barrelFilePath);\r\n            const statementDetails = await this.exportStatementBuilder.build(barrelFolderPath, filePath);\r\n            return this.vsCodeApi.appendStatementToBarrel(barrelFilePath, statementDetails);\r\n        } catch (error) {\r\n            console.log(error);\r\n            return Promise.reject();\r\n        }\r\n    }\r\n\r\n    public handleFileDeleted = async (filePath: string): Promise<void> => {\r\n        try {\r\n            const barrelFilePath = await this.utility.findClosestBarrel(filePath);\r\n            if (typeof barrelFilePath === 'undefined') {\r\n                return;\r\n            }\r\n\r\n            const barrelFolderPath = path.dirname(barrelFilePath);\r\n            const fileExtension = path.extname(filePath);\r\n            const fileRelativePath = path.relative(barrelFolderPath, filePath).replace(/\\\\/g, '/').replace(fileExtension, '');\r\n            const statementSuffix = `from './${fileRelativePath}'`;\r\n            return this.vsCodeApi.removeStatementFromBarrel(barrelFilePath, statementSuffix);\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n            return Promise.reject();\r\n        }\r\n    }\r\n\r\n    private isRunning(): boolean {\r\n        return typeof this.fileSystemWatcher !== 'undefined';\r\n    }\r\n}","import * as path from 'path';\r\n\r\nimport { StatementDetails } from './models/statement-details';\r\nimport { IUtility } from './abstractions/utlity.interface';\r\nimport { IConfiguration } from './abstractions/configuration.interface';\r\nimport { IExportStatementBuilder } from './abstractions/export-statement-builder.interface';\r\n\r\nexport class ExportStatementBuilder implements IExportStatementBuilder {\r\n    constructor(private utility: IUtility,\r\n        private configuration: IConfiguration) { }\r\n\r\n    public async build(rootFolderPath:string, filePath: string): Promise<StatementDetails> {\r\n        const config = this.configuration.current;\r\n        const result: StatementDetails = {\r\n            statement: undefined,\r\n            alias: undefined,\r\n            isBarrelImport: false\r\n        };\r\n\r\n        const fileExtension = path.extname(filePath);\r\n        let baseName = path.basename(filePath, fileExtension);\r\n        let importRelativePath = path.relative(rootFolderPath, filePath).replace(/\\\\/g, '/').replace(fileExtension, '');\r\n        if(baseName.toLowerCase() === 'index') {\r\n            importRelativePath = importRelativePath.replace('/index', '');\r\n            baseName = importRelativePath.substr(baseName.lastIndexOf('/') + 1);\r\n            result.isBarrelImport = true;\r\n        }\r\n        if (config.useImportAliasExportPattern) {\r\n            result.alias = this.utility.buildAlias(filePath);\r\n            result.statement = `import * as ${result.alias} from './${importRelativePath}';`;\r\n        } else {\r\n            const containsDefaultExport = await this.utility.containsDefaultExport(filePath);\r\n            if (containsDefaultExport === true) {\r\n                result.statement = `export { default as ${baseName} } from './${importRelativePath}';`;\r\n            } else {\r\n                result.statement = `export * from './${importRelativePath}';`;\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n}","import * as path from 'path';\r\n\r\nimport { IVsCodeApi } from './abstractions/vs-code-api.interface';\r\nimport { IBarrelBuilder } from './abstractions/barrel-builder.interface';\r\n\r\nexport class UpdateBarrelCommand {\r\n  constructor(private vsCodeApi: IVsCodeApi, private barrelBuilder: IBarrelBuilder) {}\r\n\r\n  public async execute(barrelFilePath: string): Promise<void> {\r\n    const rootFolder = path.dirname(barrelFilePath);\r\n    const filePaths = await this.vsCodeApi.findSupportedFiles(rootFolder);\r\n    const barrelFileIndex = filePaths.indexOf(barrelFilePath);\r\n    if (barrelFileIndex !== -1) {\r\n      filePaths.splice(barrelFileIndex, 1);\r\n    }\r\n    const barrelDetails = await this.barrelBuilder.build(rootFolder, filePaths);\r\n\r\n    return await this.vsCodeApi.writeFile(barrelDetails.barrelFilePath, barrelDetails.contentLines, true);\r\n  }\r\n}\r\n"],"sourceRoot":""}